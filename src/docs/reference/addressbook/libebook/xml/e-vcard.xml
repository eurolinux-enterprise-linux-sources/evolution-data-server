<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="EVCard">
<refmeta>
<refentrytitle role="top_of_page" id="EVCard.top_of_page">EVCard</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBEBOOK Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>EVCard</refname>
<refpurpose>Contact data in the VCard format.</refpurpose>
</refnamediv>

<refsynopsisdiv id="EVCard.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>                    <link linkend="EVCard-struct">EVCard</link>;
enum                <link linkend="EVCardFormat">EVCardFormat</link>;
                    <link linkend="EVCardAttribute">EVCardAttribute</link>;
                    <link linkend="EVCardAttributeParam">EVCardAttributeParam</link>;
<link linkend="EVCard"><returnvalue>EVCard</returnvalue></link>*             <link linkend="e-vcard-new">e_vcard_new</link>                         (<parameter><type>void</type></parameter>);
<link linkend="EVCard"><returnvalue>EVCard</returnvalue></link>*             <link linkend="e-vcard-new-from-string">e_vcard_new_from_string</link>             (<parameter>const <link linkend="gchar"><type>gchar</type></link> *str</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-vcard-to-string">e_vcard_to_string</link>                   (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter><link linkend="EVCardFormat"><type>EVCardFormat</type></link> format</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-dump-structure">e_vcard_dump_structure</link>              (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>);
<link linkend="EVCardAttribute"><returnvalue>EVCardAttribute</returnvalue></link> *   <link linkend="e-vcard-attribute-new">e_vcard_attribute_new</link>               (<parameter>const <link linkend="gchar"><type>gchar</type></link> *attr_group</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *attr_name</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-free">e_vcard_attribute_free</link>              (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="EVCardAttribute"><returnvalue>EVCardAttribute</returnvalue></link> *   <link linkend="e-vcard-attribute-copy">e_vcard_attribute_copy</link>              (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-remove-attributes">e_vcard_remove_attributes</link>           (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *attr_group</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *attr_name</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-remove-attribute">e_vcard_remove_attribute</link>            (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-add-attribute">e_vcard_add_attribute</link>               (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-add-attribute-with-value">e_vcard_add_attribute_with_value</link>    (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evcard</parameter>,
                                                         <parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-add-attribute-with-values">e_vcard_add_attribute_with_values</link>   (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evcard</parameter>,
                                                         <parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>...</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-add-value">e_vcard_attribute_add_value</link>         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-add-value-decoded">e_vcard_attribute_add_value_decoded</link> (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> len</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-add-values">e_vcard_attribute_add_values</link>        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>...</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-remove-values">e_vcard_attribute_remove_values</link>     (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-remove-value">e_vcard_attribute_remove_value</link>      (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *s</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-remove-params">e_vcard_attribute_remove_params</link>     (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-remove-param">e_vcard_attribute_remove_param</link>      (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *param_name</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-remove-param-value">e_vcard_attribute_remove_param_value</link>
                                                        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *param_name</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *s</parameter>);
<link linkend="EVCardAttributeParam"><returnvalue>EVCardAttributeParam</returnvalue></link>* <link linkend="e-vcard-attribute-param-new">e_vcard_attribute_param_new</link>       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-param-free">e_vcard_attribute_param_free</link>        (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);
<link linkend="EVCardAttributeParam"><returnvalue>EVCardAttributeParam</returnvalue></link>* <link linkend="e-vcard-attribute-param-copy">e_vcard_attribute_param_copy</link>      (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-add-param">e_vcard_attribute_add_param</link>         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-add-param-with-value">e_vcard_attribute_add_param_with_value</link>
                                                        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-add-param-with-values">e_vcard_attribute_add_param_with_values</link>
                                                        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>,
                                                         <parameter>...</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-param-add-value">e_vcard_attribute_param_add_value</link>   (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-param-add-values">e_vcard_attribute_param_add_values</link>  (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>,
                                                         <parameter>...</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-vcard-attribute-param-remove-values">e_vcard_attribute_param_remove_values</link>
                                                        (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="e-vcard-attribute-param-get-name">e_vcard_attribute_param_get_name</link>    (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link>*              <link linkend="e-vcard-attribute-param-get-values">e_vcard_attribute_param_get_values</link>  (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);
<link linkend="EVCardAttribute"><returnvalue>EVCardAttribute</returnvalue></link> *   <link linkend="e-vcard-get-attribute">e_vcard_get_attribute</link>               (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link>*              <link linkend="e-vcard-get-attributes">e_vcard_get_attributes</link>              (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evcard</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="e-vcard-attribute-get-group">e_vcard_attribute_get_group</link>         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="e-vcard-attribute-get-name">e_vcard_attribute_get_name</link>          (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link>*              <link linkend="e-vcard-attribute-get-values">e_vcard_attribute_get_values</link>        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link>*              <link linkend="e-vcard-attribute-get-values-decoded">e_vcard_attribute_get_values_decoded</link>
                                                        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link>*              <link linkend="e-vcard-attribute-get-params">e_vcard_attribute_get_params</link>        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link>*              <link linkend="e-vcard-attribute-get-param">e_vcard_attribute_get_param</link>         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-vcard-attribute-get-value">e_vcard_attribute_get_value</link>         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="GString"><returnvalue>GString</returnvalue></link>*            <link linkend="e-vcard-attribute-get-value-decoded">e_vcard_attribute_get_value_decoded</link> (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-vcard-attribute-has-type">e_vcard_attribute_has_type</link>          (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *typestr</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-vcard-attribute-is-single-valued">e_vcard_attribute_is_single_valued</link>  (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-vcard-escape-string">e_vcard_escape_string</link>               (<parameter>const <link linkend="gchar"><type>gchar</type></link> *s</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-vcard-unescape-string">e_vcard_unescape_string</link>             (<parameter>const <link linkend="gchar"><type>gchar</type></link> *s</parameter>);
#define             <link linkend="EVC-ADR:CAPS">EVC_ADR</link>
#define             <link linkend="EVC-BDAY:CAPS">EVC_BDAY</link>
#define             <link linkend="EVC-CALURI:CAPS">EVC_CALURI</link>
#define             <link linkend="EVC-CATEGORIES:CAPS">EVC_CATEGORIES</link>
#define             <link linkend="EVC-EMAIL:CAPS">EVC_EMAIL</link>
#define             <link linkend="EVC-ENCODING:CAPS">EVC_ENCODING</link>
#define             <link linkend="EVC-FBURL:CAPS">EVC_FBURL</link>
#define             <link linkend="EVC-FN:CAPS">EVC_FN</link>
#define             <link linkend="EVC-GEO:CAPS">EVC_GEO</link>
#define             <link linkend="EVC-ICSCALENDAR:CAPS">EVC_ICSCALENDAR</link>
#define             <link linkend="EVC-KEY:CAPS">EVC_KEY</link>
#define             <link linkend="EVC-LABEL:CAPS">EVC_LABEL</link>
#define             <link linkend="EVC-LOGO:CAPS">EVC_LOGO</link>
#define             <link linkend="EVC-MAILER:CAPS">EVC_MAILER</link>
#define             <link linkend="EVC-NICKNAME:CAPS">EVC_NICKNAME</link>
#define             <link linkend="EVC-N:CAPS">EVC_N</link>
#define             <link linkend="EVC-NOTE:CAPS">EVC_NOTE</link>
#define             <link linkend="EVC-ORG:CAPS">EVC_ORG</link>
#define             <link linkend="EVC-PHOTO:CAPS">EVC_PHOTO</link>
#define             <link linkend="EVC-PRODID:CAPS">EVC_PRODID</link>
#define             <link linkend="EVC-QUOTEDPRINTABLE:CAPS">EVC_QUOTEDPRINTABLE</link>
#define             <link linkend="EVC-REV:CAPS">EVC_REV</link>
#define             <link linkend="EVC-ROLE:CAPS">EVC_ROLE</link>
#define             <link linkend="EVC-TEL:CAPS">EVC_TEL</link>
#define             <link linkend="EVC-TITLE:CAPS">EVC_TITLE</link>
#define             <link linkend="EVC-TYPE:CAPS">EVC_TYPE</link>
#define             <link linkend="EVC-UID:CAPS">EVC_UID</link>
#define             <link linkend="EVC-URL:CAPS">EVC_URL</link>
#define             <link linkend="EVC-VALUE:CAPS">EVC_VALUE</link>
#define             <link linkend="EVC-VERSION:CAPS">EVC_VERSION</link>
#define             <link linkend="EVC-X-AIM:CAPS">EVC_X_AIM</link>
#define             <link linkend="EVC-X-ANNIVERSARY:CAPS">EVC_X_ANNIVERSARY</link>
#define             <link linkend="EVC-X-ASSISTANT:CAPS">EVC_X_ASSISTANT</link>
#define             <link linkend="EVC-X-BIRTHDAY:CAPS">EVC_X_BIRTHDAY</link>
#define             <link linkend="EVC-X-BLOG-URL:CAPS">EVC_X_BLOG_URL</link>
#define             <link linkend="EVC-X-FILE-AS:CAPS">EVC_X_FILE_AS</link>
#define             <link linkend="EVC-X-GADUGADU:CAPS">EVC_X_GADUGADU</link>
#define             <link linkend="EVC-X-ICQ:CAPS">EVC_X_ICQ</link>
#define             <link linkend="EVC-X-JABBER:CAPS">EVC_X_JABBER</link>
#define             <link linkend="EVC-X-LIST-SHOW-ADDRESSES:CAPS">EVC_X_LIST_SHOW_ADDRESSES</link>
#define             <link linkend="EVC-X-LIST:CAPS">EVC_X_LIST</link>
#define             <link linkend="EVC-X-MANAGER:CAPS">EVC_X_MANAGER</link>
#define             <link linkend="EVC-X-MSN:CAPS">EVC_X_MSN</link>
#define             <link linkend="EVC-X-SKYPE:CAPS">EVC_X_SKYPE</link>
#define             <link linkend="EVC-X-WANTS-HTML:CAPS">EVC_X_WANTS_HTML</link>
#define             <link linkend="EVC-X-YAHOO:CAPS">EVC_X_YAHOO</link>
#define             <link linkend="EVC-X-BOOK-URI:CAPS">EVC_X_BOOK_URI</link>
#define             <link linkend="EVC-X-CALLBACK:CAPS">EVC_X_CALLBACK</link>
#define             <link linkend="EVC-X-COMPANY:CAPS">EVC_X_COMPANY</link>
#define             <link linkend="EVC-X-DEST-CONTACT-UID:CAPS">EVC_X_DEST_CONTACT_UID</link>
#define             <link linkend="EVC-X-DEST-EMAIL:CAPS">EVC_X_DEST_EMAIL</link>
#define             <link linkend="EVC-X-DEST-EMAIL-NUM:CAPS">EVC_X_DEST_EMAIL_NUM</link>
#define             <link linkend="EVC-X-DEST-HTML-MAIL:CAPS">EVC_X_DEST_HTML_MAIL</link>
#define             <link linkend="EVC-X-DEST-NAME:CAPS">EVC_X_DEST_NAME</link>
#define             <link linkend="EVC-X-DEST-SOURCE-UID:CAPS">EVC_X_DEST_SOURCE_UID</link>
#define             <link linkend="EVC-X-GROUPWISE:CAPS">EVC_X_GROUPWISE</link>
#define             <link linkend="EVC-X-RADIO:CAPS">EVC_X_RADIO</link>
#define             <link linkend="EVC-X-SIP:CAPS">EVC_X_SIP</link>
#define             <link linkend="EVC-X-SPOUSE:CAPS">EVC_X_SPOUSE</link>
#define             <link linkend="EVC-X-TELEX:CAPS">EVC_X_TELEX</link>
#define             <link linkend="EVC-X-TTYTDD:CAPS">EVC_X_TTYTDD</link>
#define             <link linkend="EVC-X-VIDEO-URL:CAPS">EVC_X_VIDEO_URL</link>
</synopsis>
</refsynopsisdiv>
<refsect1 id="EVCard.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----EVCard
         +----<link linkend="EContact">EContact</link>
</synopsis>
</refsect1>

<refsect1 id="EVCard.description" role="desc">
<title role="desc.title">Description</title>
<para>
Does the low-level parsing work for contact information. This data is more conveniently accessed through the EContact object.
</para>
</refsect1>
<refsect1 id="EVCard.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="EVCard-struct" role="struct">
<title>EVCard</title>
<indexterm zone="EVCard-struct"><primary>EVCard</primary></indexterm>
<programlisting>typedef struct _EVCard EVCard;</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVCardFormat" role="enum">
<title>enum EVCardFormat</title>
<indexterm zone="EVCardFormat"><primary>EVCardFormat</primary></indexterm>
<programlisting>typedef enum {
	EVC_FORMAT_VCARD_21,
	EVC_FORMAT_VCARD_30
} EVCardFormat;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVCardAttribute" role="struct">
<title>EVCardAttribute</title>
<indexterm zone="EVCardAttribute"><primary>EVCardAttribute</primary></indexterm>
<programlisting>typedef struct _EVCardAttribute EVCardAttribute;</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVCardAttributeParam" role="struct">
<title>EVCardAttributeParam</title>
<indexterm zone="EVCardAttributeParam"><primary>EVCardAttributeParam</primary></indexterm>
<programlisting>typedef struct _EVCardAttributeParam EVCardAttributeParam;</programlisting>
<para>
</para></refsect2>
<refsect2 id="e-vcard-new" role="function">
<title>e_vcard_new ()</title>
<indexterm zone="e-vcard-new"><primary>e_vcard_new</primary></indexterm>
<programlisting><link linkend="EVCard"><returnvalue>EVCard</returnvalue></link>*             e_vcard_new                         (<parameter><type>void</type></parameter>);</programlisting>
<para>
Creates a new, blank <link linkend="EVCard"><type>EVCard</type></link>.</para>
<variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A new, blank <link linkend="EVCard"><type>EVCard</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-new-from-string" role="function">
<title>e_vcard_new_from_string ()</title>
<indexterm zone="e-vcard-new-from-string"><primary>e_vcard_new_from_string</primary></indexterm>
<programlisting><link linkend="EVCard"><returnvalue>EVCard</returnvalue></link>*             e_vcard_new_from_string             (<parameter>const <link linkend="gchar"><type>gchar</type></link> *str</parameter>);</programlisting>
<para>
Creates a new <link linkend="EVCard"><type>EVCard</type></link> from the passed-in string
representation.</para>
<variablelist role="params">
<varlistentry><term><parameter>str</parameter>&#160;:</term>
<listitem><simpara>a string representation of the vcard to create
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A new <link linkend="EVCard"><type>EVCard</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-to-string" role="function">
<title>e_vcard_to_string ()</title>
<indexterm zone="e-vcard-to-string"><primary>e_vcard_to_string</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_vcard_to_string                   (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter><link linkend="EVCardFormat"><type>EVCardFormat</type></link> format</parameter>);</programlisting>
<para>
Exports <parameter>evc</parameter> to a string representation, specified
by the <parameter>format</parameter> argument.</para>
<variablelist role="params">
<varlistentry><term><parameter>evc</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="EVCard"><type>EVCard</type></link> to export
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the format to export to
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly allocated string representing the vcard.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-dump-structure" role="function">
<title>e_vcard_dump_structure ()</title>
<indexterm zone="e-vcard-dump-structure"><primary>e_vcard_dump_structure</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_dump_structure              (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>);</programlisting>
<para>
Prints a dump of <parameter>evc</parameter>'s structure to stdout. Used for
debugging.</para>
<variablelist role="params">
<varlistentry><term><parameter>evc</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="EVCard"><type>EVCard</type></link> to dump
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-new" role="function">
<title>e_vcard_attribute_new ()</title>
<indexterm zone="e-vcard-attribute-new"><primary>e_vcard_attribute_new</primary></indexterm>
<programlisting><link linkend="EVCardAttribute"><returnvalue>EVCardAttribute</returnvalue></link> *   e_vcard_attribute_new               (<parameter>const <link linkend="gchar"><type>gchar</type></link> *attr_group</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *attr_name</parameter>);</programlisting>
<para>
Creates a new <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> with the specified group and
attribute names.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr_group</parameter>&#160;:</term>
<listitem><simpara>a group name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attr_name</parameter>&#160;:</term>
<listitem><simpara>an attribute name
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A new <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-free" role="function">
<title>e_vcard_attribute_free ()</title>
<indexterm zone="e-vcard-attribute-free"><primary>e_vcard_attribute_free</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_free              (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Frees an attribute, its values and its parameters.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>attribute to free
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-copy" role="function">
<title>e_vcard_attribute_copy ()</title>
<indexterm zone="e-vcard-attribute-copy"><primary>e_vcard_attribute_copy</primary></indexterm>
<programlisting><link linkend="EVCardAttribute"><returnvalue>EVCardAttribute</returnvalue></link> *   e_vcard_attribute_copy              (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Makes a copy of <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>attribute to copy
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A new <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> identical to <parameter>attr</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-remove-attributes" role="function">
<title>e_vcard_remove_attributes ()</title>
<indexterm zone="e-vcard-remove-attributes"><primary>e_vcard_remove_attributes</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_remove_attributes           (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *attr_group</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *attr_name</parameter>);</programlisting>
<para>
Removes all the attributes with group name and attribute name equal to
passed in values. If <parameter>attr_group</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link> or an empty string,
it removes all the attributes with passed in name irrespective of
their group names.</para>
<variablelist role="params">
<varlistentry><term><parameter>evc</parameter>&#160;:</term>
<listitem><simpara>vcard object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attr_group</parameter>&#160;:</term>
<listitem><simpara>group name of attributes to be removed
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attr_name</parameter>&#160;:</term>
<listitem><simpara>name of the arributes to be removed
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-remove-attribute" role="function">
<title>e_vcard_remove_attribute ()</title>
<indexterm zone="e-vcard-remove-attribute"><primary>e_vcard_remove_attribute</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_remove_attribute            (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Removes <parameter>attr</parameter> from <parameter>evc</parameter> and frees it.</para>
<variablelist role="params">
<varlistentry><term><parameter>evc</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCard"><type>EVCard</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> to remove
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-add-attribute" role="function">
<title>e_vcard_add_attribute ()</title>
<indexterm zone="e-vcard-add-attribute"><primary>e_vcard_add_attribute</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_add_attribute               (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Adds <parameter>attr</parameter> to <parameter>evc</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>evc</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCard"><type>EVCard</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-add-attribute-with-value" role="function">
<title>e_vcard_add_attribute_with_value ()</title>
<indexterm zone="e-vcard-add-attribute-with-value"><primary>e_vcard_add_attribute_with_value</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_add_attribute_with_value    (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evcard</parameter>,
                                                         <parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
Adds <parameter>attr</parameter> to <parameter>evcard</parameter>, setting it to <parameter>value</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>evcard</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCard"><type>EVCard</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> to add
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>a value to assign to the attribute
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-add-attribute-with-values" role="function">
<title>e_vcard_add_attribute_with_values ()</title>
<indexterm zone="e-vcard-add-attribute-with-values"><primary>e_vcard_add_attribute_with_values</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_add_attribute_with_values   (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evcard</parameter>,
                                                         <parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>...</parameter>);</programlisting>
<para>
Adds <parameter>attr</parameter> to <parameter>evcard</parameter>, assigning the list of values to it.</para>
<variablelist role="params">
<varlistentry><term><parameter>evcard</parameter>&#160;:</term>
<listitem><simpara>an <parameter>EVCard</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> to add
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="NULL:CAPS"><literal>NULL</literal></link>-terminated list of values to assign to the attribute
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-add-value" role="function">
<title>e_vcard_attribute_add_value ()</title>
<indexterm zone="e-vcard-attribute-add-value"><primary>e_vcard_attribute_add_value</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_add_value         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
Adds <parameter>value</parameter> to <parameter>attr</parameter>'s list of values.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>a string value
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-add-value-decoded" role="function">
<title>e_vcard_attribute_add_value_decoded ()</title>
<indexterm zone="e-vcard-attribute-add-value-decoded"><primary>e_vcard_attribute_add_value_decoded</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_add_value_decoded (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> len</parameter>);</programlisting>
<para>
Decodes <parameter>value</parameter> according to the encoding used for <parameter>attr</parameter>, and
adds it to <parameter>attr</parameter>'s list of values.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>an encoded value
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&#160;:</term>
<listitem><simpara>the length of the encoded value, in bytes
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-add-values" role="function">
<title>e_vcard_attribute_add_values ()</title>
<indexterm zone="e-vcard-attribute-add-values"><primary>e_vcard_attribute_add_values</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_add_values        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>...</parameter>);</programlisting>
<para>
Adds a list of values to <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="NULL:CAPS"><literal>NULL</literal></link>-terminated list of strings
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-remove-values" role="function">
<title>e_vcard_attribute_remove_values ()</title>
<indexterm zone="e-vcard-attribute-remove-values"><primary>e_vcard_attribute_remove_values</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_remove_values     (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Removes all values from <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-remove-value" role="function">
<title>e_vcard_attribute_remove_value ()</title>
<indexterm zone="e-vcard-attribute-remove-value"><primary>e_vcard_attribute_remove_value</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_remove_value      (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *s</parameter>);</programlisting>
<para>
Removes from the value list in <parameter>attr</parameter> the value <parameter>s</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>an value to remove
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-remove-params" role="function">
<title>e_vcard_attribute_remove_params ()</title>
<indexterm zone="e-vcard-attribute-remove-params"><primary>e_vcard_attribute_remove_params</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_remove_params     (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Removes all parameters from <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-remove-param" role="function">
<title>e_vcard_attribute_remove_param ()</title>
<indexterm zone="e-vcard-attribute-remove-param"><primary>e_vcard_attribute_remove_param</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_remove_param      (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *param_name</parameter>);</programlisting>
<para>
Removes the parameter <parameter>param_name</parameter> from the attribute <parameter>attr</parameter>.
</para>
<para>
Since 1.11.3.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>param_name</parameter>&#160;:</term>
<listitem><simpara>a parameter name
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-remove-param-value" role="function">
<title>e_vcard_attribute_remove_param_value ()</title>
<indexterm zone="e-vcard-attribute-remove-param-value"><primary>e_vcard_attribute_remove_param_value</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_remove_param_value
                                                        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *param_name</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *s</parameter>);</programlisting>
<para>
Removes the value <parameter>s</parameter> from the parameter <parameter>param_name</parameter> on the attribute <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>param_name</parameter>&#160;:</term>
<listitem><simpara>a parameter name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>a value
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-param-new" role="function">
<title>e_vcard_attribute_param_new ()</title>
<indexterm zone="e-vcard-attribute-param-new"><primary>e_vcard_attribute_param_new</primary></indexterm>
<programlisting><link linkend="EVCardAttributeParam"><returnvalue>EVCardAttributeParam</returnvalue></link>* e_vcard_attribute_param_new       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>
Creates a new parameter named <parameter>name</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>the name of the new parameter
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A new <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-param-free" role="function">
<title>e_vcard_attribute_param_free ()</title>
<indexterm zone="e-vcard-attribute-param-free"><primary>e_vcard_attribute_param_free</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_param_free        (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);</programlisting>
<para>
Frees <parameter>param</parameter> and its values.</para>
<variablelist role="params">
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-param-copy" role="function">
<title>e_vcard_attribute_param_copy ()</title>
<indexterm zone="e-vcard-attribute-param-copy"><primary>e_vcard_attribute_param_copy</primary></indexterm>
<programlisting><link linkend="EVCardAttributeParam"><returnvalue>EVCardAttributeParam</returnvalue></link>* e_vcard_attribute_param_copy      (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);</programlisting>
<para>
Makes a copy of <parameter>param</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> identical to <parameter>param</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-add-param" role="function">
<title>e_vcard_attribute_add_param ()</title>
<indexterm zone="e-vcard-attribute-add-param"><primary>e_vcard_attribute_add_param</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_add_param         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);</programlisting>
<para>
Adds <parameter>param</parameter> to <parameter>attr</parameter>'s list of parameters.
It tests for duplicities, only new parameters are added,
when a new parameter already exists in attr, then those
values are merged, also without creating duplicities.
When we will not add whole param, then it's freed here.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-add-param-with-value" role="function">
<title>e_vcard_attribute_add_param_with_value ()</title>
<indexterm zone="e-vcard-attribute-add-param-with-value"><primary>e_vcard_attribute_add_param_with_value</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_add_param_with_value
                                                        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
Adds <parameter>value</parameter> to <parameter>param</parameter>, then adds <parameter>param</parameter> to <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>a string value
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-add-param-with-values" role="function">
<title>e_vcard_attribute_add_param_with_values ()</title>
<indexterm zone="e-vcard-attribute-add-param-with-values"><primary>e_vcard_attribute_add_param_with_values</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_add_param_with_values
                                                        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>,
                                                         <parameter>...</parameter>);</programlisting>
<para>
Adds the list of values to <parameter>param</parameter>, then adds <parameter>param</parameter>
to <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="NULL:CAPS"><literal>NULL</literal></link>-terminated list of strings
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-param-add-value" role="function">
<title>e_vcard_attribute_param_add_value ()</title>
<indexterm zone="e-vcard-attribute-param-add-value"><primary>e_vcard_attribute_param_add_value</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_param_add_value   (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
Adds <parameter>value</parameter> to <parameter>param</parameter>'s list of values.</para>
<variablelist role="params">
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>a string value to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-param-add-values" role="function">
<title>e_vcard_attribute_param_add_values ()</title>
<indexterm zone="e-vcard-attribute-param-add-values"><primary>e_vcard_attribute_param_add_values</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_param_add_values  (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>,
                                                         <parameter>...</parameter>);</programlisting>
<para>
Adds a list of values to <parameter>param</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="NULL:CAPS"><literal>NULL</literal></link>-terminated list of strings
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-param-remove-values" role="function">
<title>e_vcard_attribute_param_remove_values ()</title>
<indexterm zone="e-vcard-attribute-param-remove-values"><primary>e_vcard_attribute_param_remove_values</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_vcard_attribute_param_remove_values
                                                        (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);</programlisting>
<para>
Removes and frees all values from <parameter>param</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-param-get-name" role="function">
<title>e_vcard_attribute_param_get_name ()</title>
<indexterm zone="e-vcard-attribute-param-get-name"><primary>e_vcard_attribute_param_get_name</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       e_vcard_attribute_param_get_name    (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);</programlisting>
<para>
Gets the name of <parameter>param</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The name of the parameter.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-param-get-values" role="function">
<title>e_vcard_attribute_param_get_values ()</title>
<indexterm zone="e-vcard-attribute-param-get-values"><primary>e_vcard_attribute_param_get_values</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link>*              e_vcard_attribute_param_get_values  (<parameter><link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> *param</parameter>);</programlisting>
<para>
Gets the list of values from <parameter>param</parameter>. The list and its
contents are owned by <parameter>param</parameter>, and must not be freed.</para>
<variablelist role="params">
<varlistentry><term><parameter>param</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A list of string elements representing the parameter's values.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-get-attribute" role="function">
<title>e_vcard_get_attribute ()</title>
<indexterm zone="e-vcard-get-attribute"><primary>e_vcard_get_attribute</primary></indexterm>
<programlisting><link linkend="EVCardAttribute"><returnvalue>EVCardAttribute</returnvalue></link> *   e_vcard_get_attribute               (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evc</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>
Get the attribute <parameter>name</parameter> from <parameter>evc</parameter>.  The <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> is owned by
<parameter>evcard</parameter> and should not be freed. If the attribute does not exist, <link linkend="NULL:CAPS"><type>NULL</type></link> is
returned.</para>
<variablelist role="params">
<varlistentry><term><parameter>evc</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCard"><type>EVCard</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>the name of the attribute to get
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> An <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> if found, or <link linkend="NULL:CAPS"><type>NULL</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-get-attributes" role="function">
<title>e_vcard_get_attributes ()</title>
<indexterm zone="e-vcard-get-attributes"><primary>e_vcard_get_attributes</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link>*              e_vcard_get_attributes              (<parameter><link linkend="EVCard"><type>EVCard</type></link> *evcard</parameter>);</programlisting>
<para>
Gets the list of attributes from <parameter>evcard</parameter>. The list and its
contents are owned by <parameter>evcard</parameter>, and must not be freed.</para>
<variablelist role="params">
<varlistentry><term><parameter>evcard</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCard"><type>EVCard</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A list of attributes of type <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-get-group" role="function">
<title>e_vcard_attribute_get_group ()</title>
<indexterm zone="e-vcard-attribute-get-group"><primary>e_vcard_attribute_get_group</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       e_vcard_attribute_get_group         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Gets the group name of <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The attribute's group name.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-get-name" role="function">
<title>e_vcard_attribute_get_name ()</title>
<indexterm zone="e-vcard-attribute-get-name"><primary>e_vcard_attribute_get_name</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       e_vcard_attribute_get_name          (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Gets the name of <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The attribute's name.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-get-values" role="function">
<title>e_vcard_attribute_get_values ()</title>
<indexterm zone="e-vcard-attribute-get-values"><primary>e_vcard_attribute_get_values</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link>*              e_vcard_attribute_get_values        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Gets the list of values from <parameter>attr</parameter>. The list and its
contents are owned by <parameter>attr</parameter>, and must not be freed.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A list of string values.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-get-values-decoded" role="function">
<title>e_vcard_attribute_get_values_decoded ()</title>
<indexterm zone="e-vcard-attribute-get-values-decoded"><primary>e_vcard_attribute_get_values_decoded</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link>*              e_vcard_attribute_get_values_decoded
                                                        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Gets the list of values from <parameter>attr</parameter>, decoding them if
necessary. The list and its contents are owned by <parameter>attr</parameter>,
and must not be freed.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A list of values of type <link linkend="GString"><type>GString</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-get-params" role="function">
<title>e_vcard_attribute_get_params ()</title>
<indexterm zone="e-vcard-attribute-get-params"><primary>e_vcard_attribute_get_params</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link>*              e_vcard_attribute_get_params        (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Gets the list of parameters from <parameter>attr</parameter>. The list and its
contents are owned by <parameter>attr</parameter>, and must not be freed.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A list of elements of type <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-get-param" role="function">
<title>e_vcard_attribute_get_param ()</title>
<indexterm zone="e-vcard-attribute-get-param"><primary>e_vcard_attribute_get_param</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link>*              e_vcard_attribute_get_param         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>
Gets the list of values for the paramater <parameter>name</parameter> from <parameter>attr</parameter>. The list and its
contents are owned by <parameter>attr</parameter>, and must not be freed.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>a parameter name
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A list of string elements representing the parameter's values.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-get-value" role="function">
<title>e_vcard_attribute_get_value ()</title>
<indexterm zone="e-vcard-attribute-get-value"><primary>e_vcard_attribute_get_value</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_vcard_attribute_get_value         (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Gets the value of a single-valued <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>, <parameter>attr</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly allocated string representing the value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-get-value-decoded" role="function">
<title>e_vcard_attribute_get_value_decoded ()</title>
<indexterm zone="e-vcard-attribute-get-value-decoded"><primary>e_vcard_attribute_get_value_decoded</primary></indexterm>
<programlisting><link linkend="GString"><returnvalue>GString</returnvalue></link>*            e_vcard_attribute_get_value_decoded (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Gets the value of a single-valued <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>, <parameter>attr</parameter>, decoding
it if necessary.
</para>
<para>
Note: this function seems currently to be unused. Could be removed.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly allocated <link linkend="GString"><type>GString</type></link> representing the value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-has-type" role="function">
<title>e_vcard_attribute_has_type ()</title>
<indexterm zone="e-vcard-attribute-has-type"><primary>e_vcard_attribute_has_type</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_vcard_attribute_has_type          (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *typestr</parameter>);</programlisting>
<para>
Checks if <parameter>attr</parameter> has an <link linkend="EVCardAttributeParam"><type>EVCardAttributeParam</type></link> of the specified type.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>typestr</parameter>&#160;:</term>
<listitem><simpara>a string representing the type
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if such a parameter exists, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-attribute-is-single-valued" role="function">
<title>e_vcard_attribute_is_single_valued ()</title>
<indexterm zone="e-vcard-attribute-is-single-valued"><primary>e_vcard_attribute_is_single_valued</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_vcard_attribute_is_single_valued  (<parameter><link linkend="EVCardAttribute"><type>EVCardAttribute</type></link> *attr</parameter>);</programlisting>
<para>
Checks if <parameter>attr</parameter> has a single value.</para>
<variablelist role="params">
<varlistentry><term><parameter>attr</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EVCardAttribute"><type>EVCardAttribute</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the attribute has exactly one value, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-escape-string" role="function">
<title>e_vcard_escape_string ()</title>
<indexterm zone="e-vcard-escape-string"><primary>e_vcard_escape_string</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_vcard_escape_string               (<parameter>const <link linkend="gchar"><type>gchar</type></link> *s</parameter>);</programlisting>
<para>
Escapes a string according to RFC2426, section 5.</para>
<variablelist role="params">
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>the string to escape
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly allocated, escaped string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-vcard-unescape-string" role="function">
<title>e_vcard_unescape_string ()</title>
<indexterm zone="e-vcard-unescape-string"><primary>e_vcard_unescape_string</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_vcard_unescape_string             (<parameter>const <link linkend="gchar"><type>gchar</type></link> *s</parameter>);</programlisting>
<para>
Unescapes a string according to RFC2426, section 5.</para>
<variablelist role="params">
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>the string to unescape
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly allocated, unescaped string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="EVC-ADR:CAPS" role="macro">
<title>EVC_ADR</title>
<indexterm zone="EVC-ADR:CAPS"><primary>EVC_ADR</primary></indexterm>
<programlisting>#define EVC_ADR             "ADR"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-BDAY:CAPS" role="macro">
<title>EVC_BDAY</title>
<indexterm zone="EVC-BDAY:CAPS"><primary>EVC_BDAY</primary></indexterm>
<programlisting>#define EVC_BDAY            "BDAY"
</programlisting>
<para>
Birthday
</para></refsect2>
<refsect2 id="EVC-CALURI:CAPS" role="macro">
<title>EVC_CALURI</title>
<indexterm zone="EVC-CALURI:CAPS"><primary>EVC_CALURI</primary></indexterm>
<programlisting>#define EVC_CALURI          "CALURI"
</programlisting>
<para>
Calendar URL
</para></refsect2>
<refsect2 id="EVC-CATEGORIES:CAPS" role="macro">
<title>EVC_CATEGORIES</title>
<indexterm zone="EVC-CATEGORIES:CAPS"><primary>EVC_CATEGORIES</primary></indexterm>
<programlisting>#define EVC_CATEGORIES      "CATEGORIES"
</programlisting>
<para>
Categories
</para></refsect2>
<refsect2 id="EVC-EMAIL:CAPS" role="macro">
<title>EVC_EMAIL</title>
<indexterm zone="EVC-EMAIL:CAPS"><primary>EVC_EMAIL</primary></indexterm>
<programlisting>#define EVC_EMAIL           "EMAIL"
</programlisting>
<para>
Email address
</para></refsect2>
<refsect2 id="EVC-ENCODING:CAPS" role="macro">
<title>EVC_ENCODING</title>
<indexterm zone="EVC-ENCODING:CAPS"><primary>EVC_ENCODING</primary></indexterm>
<programlisting>#define EVC_ENCODING        "ENCODING"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-FBURL:CAPS" role="macro">
<title>EVC_FBURL</title>
<indexterm zone="EVC-FBURL:CAPS"><primary>EVC_FBURL</primary></indexterm>
<programlisting>#define EVC_FBURL           "FBURL"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-FN:CAPS" role="macro">
<title>EVC_FN</title>
<indexterm zone="EVC-FN:CAPS"><primary>EVC_FN</primary></indexterm>
<programlisting>#define EVC_FN              "FN"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-GEO:CAPS" role="macro">
<title>EVC_GEO</title>
<indexterm zone="EVC-GEO:CAPS"><primary>EVC_GEO</primary></indexterm>
<programlisting>#define EVC_GEO		    "GEO"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-ICSCALENDAR:CAPS" role="macro">
<title>EVC_ICSCALENDAR</title>
<indexterm zone="EVC-ICSCALENDAR:CAPS"><primary>EVC_ICSCALENDAR</primary></indexterm>
<programlisting>#define EVC_ICSCALENDAR     "ICSCALENDAR" /* XXX should this be X-EVOLUTION-ICSCALENDAR? */
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-KEY:CAPS" role="macro">
<title>EVC_KEY</title>
<indexterm zone="EVC-KEY:CAPS"><primary>EVC_KEY</primary></indexterm>
<programlisting>#define EVC_KEY             "KEY"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-LABEL:CAPS" role="macro">
<title>EVC_LABEL</title>
<indexterm zone="EVC-LABEL:CAPS"><primary>EVC_LABEL</primary></indexterm>
<programlisting>#define EVC_LABEL           "LABEL"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-LOGO:CAPS" role="macro">
<title>EVC_LOGO</title>
<indexterm zone="EVC-LOGO:CAPS"><primary>EVC_LOGO</primary></indexterm>
<programlisting>#define EVC_LOGO            "LOGO"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-MAILER:CAPS" role="macro">
<title>EVC_MAILER</title>
<indexterm zone="EVC-MAILER:CAPS"><primary>EVC_MAILER</primary></indexterm>
<programlisting>#define EVC_MAILER          "MAILER"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-NICKNAME:CAPS" role="macro">
<title>EVC_NICKNAME</title>
<indexterm zone="EVC-NICKNAME:CAPS"><primary>EVC_NICKNAME</primary></indexterm>
<programlisting>#define EVC_NICKNAME        "NICKNAME"
</programlisting>
<para>
Nickname
</para></refsect2>
<refsect2 id="EVC-N:CAPS" role="macro">
<title>EVC_N</title>
<indexterm zone="EVC-N:CAPS"><primary>EVC_N</primary></indexterm>
<programlisting>#define EVC_N               "N"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-NOTE:CAPS" role="macro">
<title>EVC_NOTE</title>
<indexterm zone="EVC-NOTE:CAPS"><primary>EVC_NOTE</primary></indexterm>
<programlisting>#define EVC_NOTE            "NOTE"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-ORG:CAPS" role="macro">
<title>EVC_ORG</title>
<indexterm zone="EVC-ORG:CAPS"><primary>EVC_ORG</primary></indexterm>
<programlisting>#define EVC_ORG             "ORG"
</programlisting>
<para>
Organisation
</para></refsect2>
<refsect2 id="EVC-PHOTO:CAPS" role="macro">
<title>EVC_PHOTO</title>
<indexterm zone="EVC-PHOTO:CAPS"><primary>EVC_PHOTO</primary></indexterm>
<programlisting>#define EVC_PHOTO           "PHOTO"
</programlisting>
<para>
Photo
</para></refsect2>
<refsect2 id="EVC-PRODID:CAPS" role="macro">
<title>EVC_PRODID</title>
<indexterm zone="EVC-PRODID:CAPS"><primary>EVC_PRODID</primary></indexterm>
<programlisting>#define EVC_PRODID          "PRODID"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-QUOTEDPRINTABLE:CAPS" role="macro">
<title>EVC_QUOTEDPRINTABLE</title>
<indexterm zone="EVC-QUOTEDPRINTABLE:CAPS"><primary>EVC_QUOTEDPRINTABLE</primary></indexterm>
<programlisting>#define EVC_QUOTEDPRINTABLE "QUOTED-PRINTABLE"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-REV:CAPS" role="macro">
<title>EVC_REV</title>
<indexterm zone="EVC-REV:CAPS"><primary>EVC_REV</primary></indexterm>
<programlisting>#define EVC_REV             "REV"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-ROLE:CAPS" role="macro">
<title>EVC_ROLE</title>
<indexterm zone="EVC-ROLE:CAPS"><primary>EVC_ROLE</primary></indexterm>
<programlisting>#define EVC_ROLE            "ROLE"
</programlisting>
<para>
Role
</para></refsect2>
<refsect2 id="EVC-TEL:CAPS" role="macro">
<title>EVC_TEL</title>
<indexterm zone="EVC-TEL:CAPS"><primary>EVC_TEL</primary></indexterm>
<programlisting>#define EVC_TEL             "TEL"
</programlisting>
<para>
Telephone
</para></refsect2>
<refsect2 id="EVC-TITLE:CAPS" role="macro">
<title>EVC_TITLE</title>
<indexterm zone="EVC-TITLE:CAPS"><primary>EVC_TITLE</primary></indexterm>
<programlisting>#define EVC_TITLE           "TITLE"
</programlisting>
<para>
Title
</para></refsect2>
<refsect2 id="EVC-TYPE:CAPS" role="macro">
<title>EVC_TYPE</title>
<indexterm zone="EVC-TYPE:CAPS"><primary>EVC_TYPE</primary></indexterm>
<programlisting>#define EVC_TYPE            "TYPE"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-UID:CAPS" role="macro">
<title>EVC_UID</title>
<indexterm zone="EVC-UID:CAPS"><primary>EVC_UID</primary></indexterm>
<programlisting>#define EVC_UID             "UID"
</programlisting>
<para>
Unique ID
</para></refsect2>
<refsect2 id="EVC-URL:CAPS" role="macro">
<title>EVC_URL</title>
<indexterm zone="EVC-URL:CAPS"><primary>EVC_URL</primary></indexterm>
<programlisting>#define EVC_URL             "URL"
</programlisting>
<para>
Home page URL
</para></refsect2>
<refsect2 id="EVC-VALUE:CAPS" role="macro">
<title>EVC_VALUE</title>
<indexterm zone="EVC-VALUE:CAPS"><primary>EVC_VALUE</primary></indexterm>
<programlisting>#define EVC_VALUE           "VALUE"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-VERSION:CAPS" role="macro">
<title>EVC_VERSION</title>
<indexterm zone="EVC-VERSION:CAPS"><primary>EVC_VERSION</primary></indexterm>
<programlisting>#define EVC_VERSION         "VERSION"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-AIM:CAPS" role="macro">
<title>EVC_X_AIM</title>
<indexterm zone="EVC-X-AIM:CAPS"><primary>EVC_X_AIM</primary></indexterm>
<programlisting>#define EVC_X_AIM              "X-AIM"
</programlisting>
<para>
AIM ID
</para></refsect2>
<refsect2 id="EVC-X-ANNIVERSARY:CAPS" role="macro">
<title>EVC_X_ANNIVERSARY</title>
<indexterm zone="EVC-X-ANNIVERSARY:CAPS"><primary>EVC_X_ANNIVERSARY</primary></indexterm>
<programlisting>#define EVC_X_ANNIVERSARY      "X-EVOLUTION-ANNIVERSARY"
</programlisting>
<para>
Wedding anniversary
</para></refsect2>
<refsect2 id="EVC-X-ASSISTANT:CAPS" role="macro">
<title>EVC_X_ASSISTANT</title>
<indexterm zone="EVC-X-ASSISTANT:CAPS"><primary>EVC_X_ASSISTANT</primary></indexterm>
<programlisting>#define EVC_X_ASSISTANT        "X-EVOLUTION-ASSISTANT"
</programlisting>
<para>
Assistant
</para></refsect2>
<refsect2 id="EVC-X-BIRTHDAY:CAPS" role="macro">
<title>EVC_X_BIRTHDAY</title>
<indexterm zone="EVC-X-BIRTHDAY:CAPS"><primary>EVC_X_BIRTHDAY</primary></indexterm>
<programlisting>#define EVC_X_BIRTHDAY         "X-EVOLUTION-BIRTHDAY"
</programlisting>
<para>
Birthday
</para></refsect2>
<refsect2 id="EVC-X-BLOG-URL:CAPS" role="macro">
<title>EVC_X_BLOG_URL</title>
<indexterm zone="EVC-X-BLOG-URL:CAPS"><primary>EVC_X_BLOG_URL</primary></indexterm>
<programlisting>#define EVC_X_BLOG_URL         "X-EVOLUTION-BLOG-URL"
</programlisting>
<para>
Blog URL
</para></refsect2>
<refsect2 id="EVC-X-FILE-AS:CAPS" role="macro">
<title>EVC_X_FILE_AS</title>
<indexterm zone="EVC-X-FILE-AS:CAPS"><primary>EVC_X_FILE_AS</primary></indexterm>
<programlisting>#define EVC_X_FILE_AS          "X-EVOLUTION-FILE-AS"
</programlisting>
<para>
File As
</para></refsect2>
<refsect2 id="EVC-X-GADUGADU:CAPS" role="macro">
<title>EVC_X_GADUGADU</title>
<indexterm zone="EVC-X-GADUGADU:CAPS"><primary>EVC_X_GADUGADU</primary></indexterm>
<programlisting>#define EVC_X_GADUGADU          "X-GADUGADU"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-ICQ:CAPS" role="macro">
<title>EVC_X_ICQ</title>
<indexterm zone="EVC-X-ICQ:CAPS"><primary>EVC_X_ICQ</primary></indexterm>
<programlisting>#define EVC_X_ICQ              "X-ICQ"
</programlisting>
<para>
ICQ number
</para></refsect2>
<refsect2 id="EVC-X-JABBER:CAPS" role="macro">
<title>EVC_X_JABBER</title>
<indexterm zone="EVC-X-JABBER:CAPS"><primary>EVC_X_JABBER</primary></indexterm>
<programlisting>#define EVC_X_JABBER           "X-JABBER"
</programlisting>
<para>
Jabber ID
</para></refsect2>
<refsect2 id="EVC-X-LIST-SHOW-ADDRESSES:CAPS" role="macro">
<title>EVC_X_LIST_SHOW_ADDRESSES</title>
<indexterm zone="EVC-X-LIST-SHOW-ADDRESSES:CAPS"><primary>EVC_X_LIST_SHOW_ADDRESSES</primary></indexterm>
<programlisting>#define EVC_X_LIST_SHOW_ADDRESSES "X-EVOLUTION-LIST-SHOW_ADDRESSES"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-LIST:CAPS" role="macro">
<title>EVC_X_LIST</title>
<indexterm zone="EVC-X-LIST:CAPS"><primary>EVC_X_LIST</primary></indexterm>
<programlisting>#define EVC_X_LIST		"X-EVOLUTION-LIST"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-MANAGER:CAPS" role="macro">
<title>EVC_X_MANAGER</title>
<indexterm zone="EVC-X-MANAGER:CAPS"><primary>EVC_X_MANAGER</primary></indexterm>
<programlisting>#define EVC_X_MANAGER&#160;"X-EVOLUTION-MANAGER"
</programlisting>
<para>
Mananger
</para></refsect2>
<refsect2 id="EVC-X-MSN:CAPS" role="macro">
<title>EVC_X_MSN</title>
<indexterm zone="EVC-X-MSN:CAPS"><primary>EVC_X_MSN</primary></indexterm>
<programlisting>#define EVC_X_MSN		"X-MSN"
</programlisting>
<para>
MSN ID
</para></refsect2>
<refsect2 id="EVC-X-SKYPE:CAPS" role="macro">
<title>EVC_X_SKYPE</title>
<indexterm zone="EVC-X-SKYPE:CAPS"><primary>EVC_X_SKYPE</primary></indexterm>
<programlisting>#define EVC_X_SKYPE		"X-SKYPE"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-WANTS-HTML:CAPS" role="macro">
<title>EVC_X_WANTS_HTML</title>
<indexterm zone="EVC-X-WANTS-HTML:CAPS"><primary>EVC_X_WANTS_HTML</primary></indexterm>
<programlisting>#define EVC_X_WANTS_HTML&#160;"X-MOZILLA-HTML"
</programlisting>
<para>
Wants HTML mail
</para></refsect2>
<refsect2 id="EVC-X-YAHOO:CAPS" role="macro">
<title>EVC_X_YAHOO</title>
<indexterm zone="EVC-X-YAHOO:CAPS"><primary>EVC_X_YAHOO</primary></indexterm>
<programlisting>#define EVC_X_YAHOO		"X-YAHOO"
</programlisting>
<para>
Yahoo ID
</para></refsect2>
<refsect2 id="EVC-X-BOOK-URI:CAPS" role="macro">
<title>EVC_X_BOOK_URI</title>
<indexterm zone="EVC-X-BOOK-URI:CAPS"><primary>EVC_X_BOOK_URI</primary></indexterm>
<programlisting>#define EVC_X_BOOK_URI&#160;"X-EVOLUTION-BOOK-URI"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-CALLBACK:CAPS" role="macro">
<title>EVC_X_CALLBACK</title>
<indexterm zone="EVC-X-CALLBACK:CAPS"><primary>EVC_X_CALLBACK</primary></indexterm>
<programlisting>#define EVC_X_CALLBACK         "X-EVOLUTION-CALLBACK"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-COMPANY:CAPS" role="macro">
<title>EVC_X_COMPANY</title>
<indexterm zone="EVC-X-COMPANY:CAPS"><primary>EVC_X_COMPANY</primary></indexterm>
<programlisting>#define EVC_X_COMPANY          "X-EVOLUTION-COMPANY"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-DEST-CONTACT-UID:CAPS" role="macro">
<title>EVC_X_DEST_CONTACT_UID</title>
<indexterm zone="EVC-X-DEST-CONTACT-UID:CAPS"><primary>EVC_X_DEST_CONTACT_UID</primary></indexterm>
<programlisting>#define EVC_X_DEST_CONTACT_UID "X-EVOLUTION-DEST-CONTACT-UID"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-DEST-EMAIL:CAPS" role="macro" condition="deprecated:">
<title>EVC_X_DEST_EMAIL</title>
<indexterm zone="EVC-X-DEST-EMAIL:CAPS" role="deprecated"><primary>EVC_X_DEST_EMAIL</primary></indexterm>
<programlisting>#define EVC_X_DEST_EMAIL       "X-EVOLUTION-DEST-EMAIL"
</programlisting>
<warning><para><literal>EVC_X_DEST_EMAIL</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
</para></refsect2>
<refsect2 id="EVC-X-DEST-EMAIL-NUM:CAPS" role="macro">
<title>EVC_X_DEST_EMAIL_NUM</title>
<indexterm zone="EVC-X-DEST-EMAIL-NUM:CAPS"><primary>EVC_X_DEST_EMAIL_NUM</primary></indexterm>
<programlisting>#define EVC_X_DEST_EMAIL_NUM   "X-EVOLUTION-DEST-EMAIL-NUM"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-DEST-HTML-MAIL:CAPS" role="macro">
<title>EVC_X_DEST_HTML_MAIL</title>
<indexterm zone="EVC-X-DEST-HTML-MAIL:CAPS"><primary>EVC_X_DEST_HTML_MAIL</primary></indexterm>
<programlisting>#define EVC_X_DEST_HTML_MAIL   "X-EVOLUTION-DEST-HTML-MAIL"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-DEST-NAME:CAPS" role="macro" condition="deprecated:">
<title>EVC_X_DEST_NAME</title>
<indexterm zone="EVC-X-DEST-NAME:CAPS" role="deprecated"><primary>EVC_X_DEST_NAME</primary></indexterm>
<programlisting>#define EVC_X_DEST_NAME        "X-EVOLUTION-DEST-NAME"
</programlisting>
<warning><para><literal>EVC_X_DEST_NAME</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
</para></refsect2>
<refsect2 id="EVC-X-DEST-SOURCE-UID:CAPS" role="macro">
<title>EVC_X_DEST_SOURCE_UID</title>
<indexterm zone="EVC-X-DEST-SOURCE-UID:CAPS"><primary>EVC_X_DEST_SOURCE_UID</primary></indexterm>
<programlisting>#define EVC_X_DEST_SOURCE_UID  "X-EVOLUTION-DEST-SOURCE-UID"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-GROUPWISE:CAPS" role="macro">
<title>EVC_X_GROUPWISE</title>
<indexterm zone="EVC-X-GROUPWISE:CAPS"><primary>EVC_X_GROUPWISE</primary></indexterm>
<programlisting>#define EVC_X_GROUPWISE&#160;"X-GROUPWISE"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-RADIO:CAPS" role="macro">
<title>EVC_X_RADIO</title>
<indexterm zone="EVC-X-RADIO:CAPS"><primary>EVC_X_RADIO</primary></indexterm>
<programlisting>#define EVC_X_RADIO		"X-EVOLUTION-RADIO"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-SIP:CAPS" role="macro">
<title>EVC_X_SIP</title>
<indexterm zone="EVC-X-SIP:CAPS"><primary>EVC_X_SIP</primary></indexterm>
<programlisting>#define EVC_X_SIP		"X-SIP"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-SPOUSE:CAPS" role="macro">
<title>EVC_X_SPOUSE</title>
<indexterm zone="EVC-X-SPOUSE:CAPS"><primary>EVC_X_SPOUSE</primary></indexterm>
<programlisting>#define EVC_X_SPOUSE		"X-EVOLUTION-SPOUSE"
</programlisting>
<para>
Spouse
</para></refsect2>
<refsect2 id="EVC-X-TELEX:CAPS" role="macro">
<title>EVC_X_TELEX</title>
<indexterm zone="EVC-X-TELEX:CAPS"><primary>EVC_X_TELEX</primary></indexterm>
<programlisting>#define EVC_X_TELEX		"X-EVOLUTION-TELEX"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-TTYTDD:CAPS" role="macro">
<title>EVC_X_TTYTDD</title>
<indexterm zone="EVC-X-TTYTDD:CAPS"><primary>EVC_X_TTYTDD</primary></indexterm>
<programlisting>#define EVC_X_TTYTDD		"X-EVOLUTION-TTYTDD"
</programlisting>
<para>
</para></refsect2>
<refsect2 id="EVC-X-VIDEO-URL:CAPS" role="macro">
<title>EVC_X_VIDEO_URL</title>
<indexterm zone="EVC-X-VIDEO-URL:CAPS"><primary>EVC_X_VIDEO_URL</primary></indexterm>
<programlisting>#define EVC_X_VIDEO_URL&#160;"X-EVOLUTION-VIDEO-URL"
</programlisting>
<para>
</para></refsect2>

</refsect1>
<refsect1 id="EVCard.see-also">
<title>See Also</title>
<para>
<link linkend="e-contact"><type>e-contact</type></link>
</para>
</refsect1>

</refentry>
