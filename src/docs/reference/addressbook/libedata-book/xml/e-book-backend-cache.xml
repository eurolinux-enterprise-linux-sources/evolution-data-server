<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="EBookBackendCache">
<refmeta>
<refentrytitle role="top_of_page" id="EBookBackendCache.top_of_page">EBookBackendCache</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBEDATA-BOOK Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>EBookBackendCache</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="EBookBackendCache.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>                    <link linkend="EBookBackendCache-struct">EBookBackendCache</link>;
<link linkend="EBookBackendCache"><returnvalue>EBookBackendCache</returnvalue></link>*  <link linkend="e-book-backend-cache-new">e_book_backend_cache_new</link>            (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);
<link linkend="EContact"><returnvalue>EContact</returnvalue></link>*           <link linkend="e-book-backend-cache-get-contact">e_book_backend_cache_get_contact</link>    (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-book-backend-cache-add-contact">e_book_backend_cache_add_contact</link>    (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter><link linkend="EContact"><type>EContact</type></link> *contact</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-book-backend-cache-remove-contact">e_book_backend_cache_remove_contact</link> (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-book-backend-cache-check-contact">e_book_backend_cache_check_contact</link>  (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link>*              <link linkend="e-book-backend-cache-get-contacts">e_book_backend_cache_get_contacts</link>   (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *query</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-book-backend-cache-exists">e_book_backend_cache_exists</link>         (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-book-backend-cache-set-populated">e_book_backend_cache_set_populated</link>  (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-book-backend-cache-is-populated">e_book_backend_cache_is_populated</link>   (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-book-backend-cache-set-time">e_book_backend_cache_set_time</link>       (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *t</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-book-backend-cache-get-time">e_book_backend_cache_get_time</link>       (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>);
<link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>*          <link linkend="e-book-backend-cache-search">e_book_backend_cache_search</link>         (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *query</parameter>);
</synopsis>
</refsynopsisdiv>
<refsect1 id="EBookBackendCache.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="EFileCache">EFileCache</link>
         +----EBookBackendCache
</synopsis>
</refsect1>
<refsect1 id="EBookBackendCache.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="EBookBackendCache--uri">uri</link>&quot;                      <link linkend="gchar"><type>gchar</type></link>*                : Read / Write / Construct Only
</synopsis>
</refsect1>

<refsect1 id="EBookBackendCache.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="EBookBackendCache.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="EBookBackendCache-struct" role="struct">
<title>EBookBackendCache</title>
<indexterm zone="EBookBackendCache-struct"><primary>EBookBackendCache</primary></indexterm>
<programlisting>typedef struct _EBookBackendCache EBookBackendCache;</programlisting>
<para>
</para></refsect2>
<refsect2 id="e-book-backend-cache-new" role="function">
<title>e_book_backend_cache_new ()</title>
<indexterm zone="e-book-backend-cache-new"><primary>e_book_backend_cache_new</primary></indexterm>
<programlisting><link linkend="EBookBackendCache"><returnvalue>EBookBackendCache</returnvalue></link>*  e_book_backend_cache_new            (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);</programlisting>
<para>
Creates a new <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> object, which implements a local
cache of <link linkend="EContact"><type>EContact</type></link> objects, useful for remote backends.</para>
<variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>URI of the backend to be cached.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A new <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-get-contact" role="function">
<title>e_book_backend_cache_get_contact ()</title>
<indexterm zone="e-book-backend-cache-get-contact"><primary>e_book_backend_cache_get_contact</primary></indexterm>
<programlisting><link linkend="EContact"><returnvalue>EContact</returnvalue></link>*           e_book_backend_cache_get_contact    (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);</programlisting>
<para>
Get a cached contact. Note that the returned <link linkend="EContact"><type>EContact</type></link> will be
newly created, and must be unreffed by the caller when no longer
needed.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>a unique contact ID
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A cached <link linkend="EContact"><type>EContact</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if <parameter>uid</parameter> is not cached.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-add-contact" role="function">
<title>e_book_backend_cache_add_contact ()</title>
<indexterm zone="e-book-backend-cache-add-contact"><primary>e_book_backend_cache_add_contact</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_book_backend_cache_add_contact    (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter><link linkend="EContact"><type>EContact</type></link> *contact</parameter>);</programlisting>
<para>
Adds <parameter>contact</parameter> to <parameter>cache</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>contact</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EContact"><type>EContact</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the contact was cached successfully, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-remove-contact" role="function">
<title>e_book_backend_cache_remove_contact ()</title>
<indexterm zone="e-book-backend-cache-remove-contact"><primary>e_book_backend_cache_remove_contact</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_book_backend_cache_remove_contact (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);</programlisting>
<para>
Removes the contact identified by <parameter>uid</parameter> from <parameter>cache</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>a unique contact ID
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the contact was found and removed, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-check-contact" role="function">
<title>e_book_backend_cache_check_contact ()</title>
<indexterm zone="e-book-backend-cache-check-contact"><primary>e_book_backend_cache_check_contact</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_book_backend_cache_check_contact  (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);</programlisting>
<para>
Checks if the contact identified by <parameter>uid</parameter> exists in <parameter>cache</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>a unique contact ID
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the cache contains the contact, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-get-contacts" role="function">
<title>e_book_backend_cache_get_contacts ()</title>
<indexterm zone="e-book-backend-cache-get-contacts"><primary>e_book_backend_cache_get_contacts</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link>*              e_book_backend_cache_get_contacts   (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *query</parameter>);</programlisting>
<para>
Returns a list of <link linkend="EContact"><type>EContact</type></link> elements from <parameter>cache</parameter> matching <parameter>query</parameter>.
When done with the list, the caller must unref the contacts and
free the list.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&#160;:</term>
<listitem><simpara>an s-expression
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GList"><type>GList</type></link> of pointers to <link linkend="EContact"><type>EContact</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-exists" role="function">
<title>e_book_backend_cache_exists ()</title>
<indexterm zone="e-book-backend-cache-exists"><primary>e_book_backend_cache_exists</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_book_backend_cache_exists         (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);</programlisting>
<para>
Checks if an <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> exists at <parameter>uri</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>URI for the cache
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if cache exists, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-set-populated" role="function">
<title>e_book_backend_cache_set_populated ()</title>
<indexterm zone="e-book-backend-cache-set-populated"><primary>e_book_backend_cache_set_populated</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_book_backend_cache_set_populated  (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>);</programlisting>
<para>
Flags <parameter>cache</parameter> as being populated - that is, it is up-to-date on the
contents of the book it's caching.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-is-populated" role="function">
<title>e_book_backend_cache_is_populated ()</title>
<indexterm zone="e-book-backend-cache-is-populated"><primary>e_book_backend_cache_is_populated</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_book_backend_cache_is_populated   (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>);</programlisting>
<para>
Checks if <parameter>cache</parameter> is populated.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>cache</parameter> is populated, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-set-time" role="function">
<title>e_book_backend_cache_set_time ()</title>
<indexterm zone="e-book-backend-cache-set-time"><primary>e_book_backend_cache_set_time</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_book_backend_cache_set_time       (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *t</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-get-time" role="function">
<title>e_book_backend_cache_get_time ()</title>
<indexterm zone="e-book-backend-cache-get-time"><primary>e_book_backend_cache_get_time</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_book_backend_cache_get_time       (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-book-backend-cache-search" role="function">
<title>e_book_backend_cache_search ()</title>
<indexterm zone="e-book-backend-cache-search"><primary>e_book_backend_cache_search</primary></indexterm>
<programlisting><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>*          e_book_backend_cache_search         (<parameter><link linkend="EBookBackendCache"><type>EBookBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *query</parameter>);</programlisting>
<para>
Returns an array of pointers to unique contact ID strings for contacts
in <parameter>cache</parameter> matching <parameter>query</parameter>. When done with the array, the caller must
free the ID strings and the array.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>an <link linkend="EBookBackendCache"><type>EBookBackendCache</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&#160;:</term>
<listitem><simpara>an s-expression
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GPtrArray"><type>GPtrArray</type></link> of pointers to contact ID strings.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="EBookBackendCache.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="EBookBackendCache--uri" role="property"><title>The <literal>&quot;uri&quot;</literal> property</title>
<indexterm zone="EBookBackendCache--uri"><primary>EBookBackendCache:uri</primary></indexterm>
<programlisting>  &quot;uri&quot;                      <link linkend="gchar"><type>gchar</type></link>*                : Read / Write / Construct Only</programlisting>
<para></para><para>Default value: ""</para>
</refsect2>
</refsect1>

</refentry>
