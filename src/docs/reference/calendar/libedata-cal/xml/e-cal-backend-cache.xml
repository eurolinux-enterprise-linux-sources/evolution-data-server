<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="ECalBackendCache">
<refmeta>
<refentrytitle role="top_of_page" id="ECalBackendCache.top_of_page">ECalBackendCache</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBEDATA-CAL Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ECalBackendCache</refname>
<refpurpose>Cache for calendar backends.</refpurpose>
</refnamediv>

<refsynopsisdiv id="ECalBackendCache.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>                    <link linkend="ECalBackendCache-struct">ECalBackendCache</link>;
<link linkend="ECalBackendCache"><returnvalue>ECalBackendCache</returnvalue></link> *  <link linkend="e-cal-backend-cache-new">e_cal_backend_cache_new</link>             (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter><link linkend="ECalSourceType"><type>ECalSourceType</type></link> source_type</parameter>);
<link linkend="ECalComponent"><returnvalue>ECalComponent</returnvalue></link> *     <link linkend="e-cal-backend-cache-get-component">e_cal_backend_cache_get_component</link>   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-backend-cache-put-component">e_cal_backend_cache_put_component</link>   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-backend-cache-remove-component">e_cal_backend_cache_remove_component</link>
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link> *             <link linkend="e-cal-backend-cache-get-components">e_cal_backend_cache_get_components</link>  (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);
<link linkend="GSList"><returnvalue>GSList</returnvalue></link> *            <link linkend="e-cal-backend-cache-get-components-by-uid">e_cal_backend_cache_get_components_by_uid</link>
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);
const <link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link> * <link linkend="e-cal-backend-cache-get-timezone">e_cal_backend_cache_get_timezone</link>   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-backend-cache-put-timezone">e_cal_backend_cache_put_timezone</link>    (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="icaltimezone"><type>icaltimezone</type></link> *zone</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-backend-cache-remove-timezone">e_cal_backend_cache_remove_timezone</link> (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-backend-cache-put-default-timezone">e_cal_backend_cache_put_default_timezone</link>
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter><link linkend="icaltimezone"><type>icaltimezone</type></link> *default_zone</parameter>);
<link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link> *      <link linkend="e-cal-backend-cache-get-default-timezone">e_cal_backend_cache_get_default_timezone</link>
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);
<link linkend="GSList"><returnvalue>GSList</returnvalue></link> *            <link linkend="e-cal-backend-cache-get-keys">e_cal_backend_cache_get_keys</link>        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="e-cal-backend-cache-get-marker">e_cal_backend_cache_get_marker</link>      (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-cache-set-marker">e_cal_backend_cache_set_marker</link>      (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-backend-cache-put-server-utc-time">e_cal_backend_cache_put_server_utc_time</link>
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *utc_str</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="e-cal-backend-cache-get-server-utc-time">e_cal_backend_cache_get_server_utc_time</link>
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-backend-cache-put-key-value">e_cal_backend_cache_put_key_value</link>   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="e-cal-backend-cache-get-key-value">e_cal_backend_cache_get_key_value</link>   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-backend-cache-remove">e_cal_backend_cache_remove</link>          (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter><link linkend="ECalSourceType"><type>ECalSourceType</type></link> source_type</parameter>);
</synopsis>
</refsynopsisdiv>
<refsect1 id="ECalBackendCache.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="EFileCache">EFileCache</link>
         +----ECalBackendCache
</synopsis>
</refsect1>
<refsect1 id="ECalBackendCache.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="ECalBackendCache--source-type">source-type</link>&quot;              <link linkend="ECalSourceTypeEnum"><type>ECalSourceTypeEnum</type></link>    : Read / Write / Construct Only
  &quot;<link linkend="ECalBackendCache--uri">uri</link>&quot;                      <link linkend="gchar"><type>gchar</type></link>*                : Read / Write / Construct Only
</synopsis>
</refsect1>

<refsect1 id="ECalBackendCache.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ECalBackendCache.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="ECalBackendCache-struct" role="struct">
<title>ECalBackendCache</title>
<indexterm zone="ECalBackendCache-struct"><primary>ECalBackendCache</primary></indexterm>
<programlisting>typedef struct _ECalBackendCache ECalBackendCache;</programlisting>
<para>
</para></refsect2>
<refsect2 id="e-cal-backend-cache-new" role="function">
<title>e_cal_backend_cache_new ()</title>
<indexterm zone="e-cal-backend-cache-new"><primary>e_cal_backend_cache_new</primary></indexterm>
<programlisting><link linkend="ECalBackendCache"><returnvalue>ECalBackendCache</returnvalue></link> *  e_cal_backend_cache_new             (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter><link linkend="ECalSourceType"><type>ECalSourceType</type></link> source_type</parameter>);</programlisting>
<para>
Creates a new <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object, which implements a cache of
calendar/tasks objects, very useful for remote backends.</para>
<variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>URI of the backend to be cached.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>source_type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The newly created object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-get-component" role="function">
<title>e_cal_backend_cache_get_component ()</title>
<indexterm zone="e-cal-backend-cache-get-component"><primary>e_cal_backend_cache_get_component</primary></indexterm>
<programlisting><link linkend="ECalComponent"><returnvalue>ECalComponent</returnvalue></link> *     e_cal_backend_cache_get_component   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>);</programlisting>
<para>
Gets a component from the <link linkend="ECalBackendCache"><literal>ECalBackendCache</literal></link> object.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>A <link linkend="ECalBackendCache"><literal>ECalBackendCache</literal></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>The UID of the component to retrieve.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rid</parameter>&#160;:</term>
<listitem><simpara>Recurrence ID of the specific detached recurrence to retrieve,
or NULL if the whole object is to be retrieved.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The <link linkend="ECalComponent"><literal>ECalComponent</literal></link> representing the component found,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if it was not found in the cache.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-put-component" role="function">
<title>e_cal_backend_cache_put_component ()</title>
<indexterm zone="e-cal-backend-cache-put-component"><primary>e_cal_backend_cache_put_component</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_backend_cache_put_component   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Puts the given calendar component in the given cache. This will add
the component if it does not exist or replace it if there was a
previous version of it.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>Component to put on the cache.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation was successful, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-remove-component" role="function">
<title>e_cal_backend_cache_remove_component ()</title>
<indexterm zone="e-cal-backend-cache-remove-component"><primary>e_cal_backend_cache_remove_component</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_backend_cache_remove_component
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>);</programlisting>
<para>
Removes a component from the cache.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>UID of the component to remove.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rid</parameter>&#160;:</term>
<listitem><simpara>Recurrence-ID of the component to remove. This is used when removing
detached instances of a recurring appointment.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the component was removed, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-get-components" role="function">
<title>e_cal_backend_cache_get_components ()</title>
<indexterm zone="e-cal-backend-cache-get-components"><primary>e_cal_backend_cache_get_components</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link> *             e_cal_backend_cache_get_components  (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);</programlisting>
<para>
Retrieves a list of all the components stored in the cache.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A list of all the components. Each item in the list is
an <link linkend="ECalComponent"><type>ECalComponent</type></link>, which should be freed when no longer needed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-get-components-by-uid" role="function">
<title>e_cal_backend_cache_get_components_by_uid ()</title>
<indexterm zone="e-cal-backend-cache-get-components-by-uid"><primary>e_cal_backend_cache_get_components_by_uid</primary></indexterm>
<programlisting><link linkend="GSList"><returnvalue>GSList</returnvalue></link> *            e_cal_backend_cache_get_components_by_uid
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);</programlisting>
<para>
Retrieves a ical components from the cache.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>ID of the component to retrieve.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The list of calendar components if found, or NULL otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-get-timezone" role="function">
<title>e_cal_backend_cache_get_timezone ()</title>
<indexterm zone="e-cal-backend-cache-get-timezone"><primary>e_cal_backend_cache_get_timezone</primary></indexterm>
<programlisting>const <link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link> * e_cal_backend_cache_get_timezone   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);</programlisting>
<para>
Retrieves a timezone component from the cache.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tzid</parameter>&#160;:</term>
<listitem><simpara>ID of the timezone to retrieve.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The timezone if found, or NULL otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-put-timezone" role="function">
<title>e_cal_backend_cache_put_timezone ()</title>
<indexterm zone="e-cal-backend-cache-put-timezone"><primary>e_cal_backend_cache_put_timezone</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_backend_cache_put_timezone    (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="icaltimezone"><type>icaltimezone</type></link> *zone</parameter>);</programlisting>
<para>
Puts the given timezone in the cache, adding it, if it did not exist, or
replacing it, if there was an older version.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>zone</parameter>&#160;:</term>
<listitem><simpara>The timezone to put on the cache.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the timezone was put on the cache, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-remove-timezone" role="function">
<title>e_cal_backend_cache_remove_timezone ()</title>
<indexterm zone="e-cal-backend-cache-remove-timezone"><primary>e_cal_backend_cache_remove_timezone</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_backend_cache_remove_timezone (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);</programlisting>
<para>
Removes a timezone component from the cache.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tzid</parameter>&#160;:</term>
<listitem><simpara>ID of the timezone to remove.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the timezone was removed, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-put-default-timezone" role="function">
<title>e_cal_backend_cache_put_default_timezone ()</title>
<indexterm zone="e-cal-backend-cache-put-default-timezone"><primary>e_cal_backend_cache_put_default_timezone</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_backend_cache_put_default_timezone
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter><link linkend="icaltimezone"><type>icaltimezone</type></link> *default_zone</parameter>);</programlisting>
<para>
Sets the default timezone on the cache.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_zone</parameter>&#160;:</term>
<listitem><simpara>The default timezone.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation was successful, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-get-default-timezone" role="function">
<title>e_cal_backend_cache_get_default_timezone ()</title>
<indexterm zone="e-cal-backend-cache-get-default-timezone"><primary>e_cal_backend_cache_get_default_timezone</primary></indexterm>
<programlisting><link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link> *      e_cal_backend_cache_get_default_timezone
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);</programlisting>
<para>
Retrieves the default timezone from the cache.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The default timezone, or NULL if no default timezone
has been set on the cache.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-get-keys" role="function">
<title>e_cal_backend_cache_get_keys ()</title>
<indexterm zone="e-cal-backend-cache-get-keys"><primary>e_cal_backend_cache_get_keys</primary></indexterm>
<programlisting><link linkend="GSList"><returnvalue>GSList</returnvalue></link> *            e_cal_backend_cache_get_keys        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);</programlisting>
<para>
Gets the list of unique keys in the cache file.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A list of all the keys. The items in the list are pointers
to internal data, so should not be freed, only the list should.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-get-marker" role="function">
<title>e_cal_backend_cache_get_marker ()</title>
<indexterm zone="e-cal-backend-cache-get-marker"><primary>e_cal_backend_cache_get_marker</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       e_cal_backend_cache_get_marker      (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);</programlisting>
<para>
Gets the marker of the cache. If this field is present, it means the
cache has been populated.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The value of the marker or NULL if the cache is still empty.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-set-marker" role="function">
<title>e_cal_backend_cache_set_marker ()</title>
<indexterm zone="e-cal-backend-cache-set-marker"><primary>e_cal_backend_cache_set_marker</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_cache_set_marker      (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);</programlisting>
<para>
Marks the cache as populated, to discriminate between an empty calendar
and an unpopulated one.</para>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-put-server-utc-time" role="function">
<title>e_cal_backend_cache_put_server_utc_time ()</title>
<indexterm zone="e-cal-backend-cache-put-server-utc-time"><primary>e_cal_backend_cache_put_server_utc_time</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_backend_cache_put_server_utc_time
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *utc_str</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>utc_str</parameter>&#160;:</term>
<listitem><simpara>UTC string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation was successful, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-get-server-utc-time" role="function">
<title>e_cal_backend_cache_get_server_utc_time ()</title>
<indexterm zone="e-cal-backend-cache-get-server-utc-time"><primary>e_cal_backend_cache_get_server_utc_time</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       e_cal_backend_cache_get_server_utc_time
                                                        (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The server's UTC string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-put-key-value" role="function">
<title>e_cal_backend_cache_put_key_value ()</title>
<indexterm zone="e-cal-backend-cache-put-key-value"><primary>e_cal_backend_cache_put_key_value</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_backend_cache_put_key_value   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the operation was successful, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-get-key-value" role="function">
<title>e_cal_backend_cache_get_key_value ()</title>
<indexterm zone="e-cal-backend-cache-get-key-value"><primary>e_cal_backend_cache_get_key_value</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       e_cal_backend_cache_get_key_value   (<parameter><link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> *cache</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackendCache"><type>ECalBackendCache</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-cache-remove" role="function">
<title>e_cal_backend_cache_remove ()</title>
<indexterm zone="e-cal-backend-cache-remove"><primary>e_cal_backend_cache_remove</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_backend_cache_remove          (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>,
                                                         <parameter><link linkend="ECalSourceType"><type>ECalSourceType</type></link> source_type</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>source_type</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="ECalBackendCache.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="ECalBackendCache--source-type" role="property"><title>The <literal>&quot;source-type&quot;</literal> property</title>
<indexterm zone="ECalBackendCache--source-type"><primary>ECalBackendCache:source-type</primary></indexterm>
<programlisting>  &quot;source-type&quot;              <link linkend="ECalSourceTypeEnum"><type>ECalSourceTypeEnum</type></link>    : Read / Write / Construct Only</programlisting>
<para></para><para>Default value: Event</para>
</refsect2>
<refsect2 id="ECalBackendCache--uri" role="property"><title>The <literal>&quot;uri&quot;</literal> property</title>
<indexterm zone="ECalBackendCache--uri"><primary>ECalBackendCache:uri</primary></indexterm>
<programlisting>  &quot;uri&quot;                      <link linkend="gchar"><type>gchar</type></link>*                : Read / Write / Construct Only</programlisting>
<para></para><para>Default value: ""</para>
</refsect2>
</refsect1>

</refentry>
