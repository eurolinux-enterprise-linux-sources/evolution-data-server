<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="ECalBackend">
<refmeta>
<refentrytitle role="top_of_page" id="ECalBackend.top_of_page">ECalBackend</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBEDATA-CAL Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ECalBackend</refname>
<refpurpose>Base class for calendar/tasks backend implementations.</refpurpose>
</refnamediv>

<refsynopsisdiv id="ECalBackend.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="ESource"><returnvalue>ESource</returnvalue></link> *           <link linkend="e-cal-backend-get-source">e_cal_backend_get_source</link>            (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="e-cal-backend-get-uri">e_cal_backend_get_uri</link>               (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);
<link linkend="icalcomponent-kind"><returnvalue>icalcomponent_kind</returnvalue></link>  <link linkend="e-cal-backend-get-kind">e_cal_backend_get_kind</link>              (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-add-client">e_cal_backend_add_client</link>            (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-remove-client">e_cal_backend_remove_client</link>         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-add-query">e_cal_backend_add_query</link>             (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>);
<link linkend="EList"><returnvalue>EList</returnvalue></link> *             <link linkend="e-cal-backend-get-queries">e_cal_backend_get_queries</link>           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-remove-query">e_cal_backend_remove_query</link>          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-is-read-only">e_cal_backend_is_read_only</link>          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-cal-address">e_cal_backend_get_cal_address</link>       (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-alarm-email-address">e_cal_backend_get_alarm_email_address</link>
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-ldap-attribute">e_cal_backend_get_ldap_attribute</link>    (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-static-capabilities">e_cal_backend_get_static_capabilities</link>
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-open">e_cal_backend_open</link>                  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> only_if_exists</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *username</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *password</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-remove">e_cal_backend_remove</link>                (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-create-object">e_cal_backend_create_object</link>         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-modify-object">e_cal_backend_modify_object</link>         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>,
                                                         <parameter><link linkend="CalObjModType"><type>CalObjModType</type></link> mod</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-remove-object">e_cal_backend_remove_object</link>         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>,
                                                         <parameter><link linkend="CalObjModType"><type>CalObjModType</type></link> mod</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-discard-alarm">e_cal_backend_discard_alarm</link>         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *auid</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-receive-objects">e_cal_backend_receive_objects</link>       (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-send-objects">e_cal_backend_send_objects</link>          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-default-object">e_cal_backend_get_default_object</link>    (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-object">e_cal_backend_get_object</link>            (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-object-list">e_cal_backend_get_object_list</link>       (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *sexp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-attachment-list">e_cal_backend_get_attachment_list</link>   (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-backend-is-loaded">e_cal_backend_is_loaded</link>             (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-start-query">e_cal_backend_start_query</link>           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>);
<link linkend="CalMode"><returnvalue>CalMode</returnvalue></link>             <link linkend="e-cal-backend-get-mode">e_cal_backend_get_mode</link>              (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-set-mode">e_cal_backend_set_mode</link>              (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="CalMode"><type>CalMode</type></link> mode</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-timezone">e_cal_backend_get_timezone</link>          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-add-timezone">e_cal_backend_add_timezone</link>          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *object</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-set-default-timezone">e_cal_backend_set_default_timezone</link>  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-set-default-zone">e_cal_backend_set_default_zone</link>      (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzobj</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-changes">e_cal_backend_get_changes</link>           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *change_id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-get-free-busy">e_cal_backend_get_free_busy</link>         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter><link linkend="GList"><type>GList</type></link> *users</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> start</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> end</parameter>);
<link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link>*       <link linkend="e-cal-backend-internal-get-default-timezone">e_cal_backend_internal_get_default_timezone</link>
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);
<link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link>*       <link linkend="e-cal-backend-internal-get-timezone">e_cal_backend_internal_get_timezone</link> (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-set-notification-proxy">e_cal_backend_set_notification_proxy</link>
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *proxy</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-object-created">e_cal_backend_notify_object_created</link> (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-object-modified">e_cal_backend_notify_object_modified</link>
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *old_object</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *object</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-object-removed">e_cal_backend_notify_object_removed</link> (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="ECalComponentId"><type>ECalComponentId</type></link> *id</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *old_object</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *object</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-mode">e_cal_backend_notify_mode</link>           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="GNOME-Evolution-Calendar-CalListener-SetModeStatus"><type>GNOME_Evolution_Calendar_CalListener_SetModeStatus</type></link> status</parameter>,
                                                         <parameter><link linkend="GNOME-Evolution-Calendar-CalMode"><type>GNOME_Evolution_Calendar_CalMode</type></link> mode</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-auth-required">e_cal_backend_notify_auth_required</link>  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-error">e_cal_backend_notify_error</link>          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *message</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-view-done">e_cal_backend_notify_view_done</link>      (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="GNOME-Evolution-Calendar-CallStatus"><type>GNOME_Evolution_Calendar_CallStatus</type></link> status</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-view-progress-start">e_cal_backend_notify_view_progress_start</link>
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-view-progress">e_cal_backend_notify_view_progress</link>  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *message</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> percent</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-readonly">e_cal_backend_notify_readonly</link>       (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> read_only</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-cal-address">e_cal_backend_notify_cal_address</link>    (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *address</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-objects-added">e_cal_backend_notify_objects_added</link>  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>,
                                                         <parameter>const <link linkend="GList"><type>GList</type></link> *objects</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-objects-removed">e_cal_backend_notify_objects_removed</link>
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>,
                                                         <parameter>const <link linkend="GList"><type>GList</type></link> *ids</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-notify-objects-modified">e_cal_backend_notify_objects_modified</link>
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>,
                                                         <parameter>const <link linkend="GList"><type>GList</type></link> *objects</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-backend-empty-cache">e_cal_backend_empty_cache</link>           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><type>struct _ECalBackendCache</type> *cache</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="ECalBackend.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ECalBackend.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="e-cal-backend-get-source" role="function">
<title>e_cal_backend_get_source ()</title>
<indexterm zone="e-cal-backend-get-source"><primary>e_cal_backend_get_source</primary></indexterm>
<programlisting><link linkend="ESource"><returnvalue>ESource</returnvalue></link> *           e_cal_backend_get_source            (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);</programlisting>
<para>
Gets the <link linkend="ESource"><type>ESource</type></link> associated with the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackend"><type>ECalBackend</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The <link linkend="ESource"><type>ESource</type></link> for the backend.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-uri" role="function">
<title>e_cal_backend_get_uri ()</title>
<indexterm zone="e-cal-backend-get-uri"><primary>e_cal_backend_get_uri</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       e_cal_backend_get_uri               (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);</programlisting>
<para>
Queries the URI of a calendar backend, which must already have an open
calendar.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The URI where the calendar is stored.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-kind" role="function">
<title>e_cal_backend_get_kind ()</title>
<indexterm zone="e-cal-backend-get-kind"><primary>e_cal_backend_get_kind</primary></indexterm>
<programlisting><link linkend="icalcomponent-kind"><returnvalue>icalcomponent_kind</returnvalue></link>  e_cal_backend_get_kind              (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);</programlisting>
<para>
Gets the kind of components the given backend stores.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackend"><type>ECalBackend</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The kind of components for this backend.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-add-client" role="function">
<title>e_cal_backend_add_client ()</title>
<indexterm zone="e-cal-backend-add-client"><primary>e_cal_backend_add_client</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_add_client            (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);</programlisting>
<para>
Adds a new client to the given backend. For any event, the backend will
notify all clients added via this function.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>An ECalBackend object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An EDataCal object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-remove-client" role="function">
<title>e_cal_backend_remove_client ()</title>
<indexterm zone="e-cal-backend-remove-client"><primary>e_cal_backend_remove_client</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_remove_client         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);</programlisting>
<para>
Removes a client from the list of connected clients to the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackend"><type>ECalBackend</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-add-query" role="function">
<title>e_cal_backend_add_query ()</title>
<indexterm zone="e-cal-backend-add-query"><primary>e_cal_backend_add_query</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_add_query             (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>);</programlisting>
<para>
Adds a query to the list of live queries being run by the given backend.
Doing so means that any listener on the query will get notified of any
change that affect the live query.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackend"><type>ECalBackend</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCalView"><type>EDataCalView</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-queries" role="function">
<title>e_cal_backend_get_queries ()</title>
<indexterm zone="e-cal-backend-get-queries"><primary>e_cal_backend_get_queries</primary></indexterm>
<programlisting><link linkend="EList"><returnvalue>EList</returnvalue></link> *             e_cal_backend_get_queries           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);</programlisting>
<para>
Gets the list of live queries being run on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackend"><type>ECalBackend</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The list of live queries.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-remove-query" role="function">
<title>e_cal_backend_remove_query ()</title>
<indexterm zone="e-cal-backend-remove-query"><primary>e_cal_backend_remove_query</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_remove_query          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>);</programlisting>
<para>
Removes query from the list of live queries for the backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackend"><type>ECalBackend</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCalView"><type>EDataCalView</type></link> object, previously added with <parameter>ref</parameter> e_cal_backend_add_query.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-is-read-only" role="function">
<title>e_cal_backend_is_read_only ()</title>
<indexterm zone="e-cal-backend-is-read-only"><primary>e_cal_backend_is_read_only</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_is_read_only          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);</programlisting>
<para>
Queries whether a calendar backend is read only or not.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-cal-address" role="function">
<title>e_cal_backend_get_cal_address ()</title>
<indexterm zone="e-cal-backend-get-cal-address"><primary>e_cal_backend_get_cal_address</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_cal_address       (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);</programlisting>
<para>
Queries the cal address associated with a calendar backend, which
must already have an open calendar.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-alarm-email-address" role="function">
<title>e_cal_backend_get_alarm_email_address ()</title>
<indexterm zone="e-cal-backend-get-alarm-email-address"><primary>e_cal_backend_get_alarm_email_address</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_alarm_email_address
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);</programlisting>
<para>
Calls the get_static_capabilities method on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="ECalBackend"><type>ECalBackend</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-ldap-attribute" role="function">
<title>e_cal_backend_get_ldap_attribute ()</title>
<indexterm zone="e-cal-backend-get-ldap-attribute"><primary>e_cal_backend_get_ldap_attribute</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_ldap_attribute    (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-static-capabilities" role="function">
<title>e_cal_backend_get_static_capabilities ()</title>
<indexterm zone="e-cal-backend-get-static-capabilities"><primary>e_cal_backend_get_static_capabilities</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_static_capabilities
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-open" role="function">
<title>e_cal_backend_open ()</title>
<indexterm zone="e-cal-backend-open"><primary>e_cal_backend_open</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_open                  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> only_if_exists</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *username</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *password</parameter>);</programlisting>
<para>
Opens a calendar backend with data from a calendar stored at the specified
URI.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>only_if_exists</parameter>&#160;:</term>
<listitem><simpara>Whether the calendar should be opened only if it already
exists.  If FALSE, a new calendar will be created when the specified <parameter>uri</parameter>
does not exist.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>username</parameter>&#160;:</term>
<listitem><simpara>User name to use for authentication (if needed).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&#160;:</term>
<listitem><simpara>Password for <parameter>username</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-remove" role="function">
<title>e_cal_backend_remove ()</title>
<indexterm zone="e-cal-backend-remove"><primary>e_cal_backend_remove</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_remove                (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);</programlisting>
<para>
Removes the calendar being accessed by the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-create-object" role="function">
<title>e_cal_backend_create_object ()</title>
<indexterm zone="e-cal-backend-create-object"><primary>e_cal_backend_create_object</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_create_object         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);</programlisting>
<para>
Calls the create_object method on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>calobj</parameter>&#160;:</term>
<listitem><simpara>The object to create.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-modify-object" role="function">
<title>e_cal_backend_modify_object ()</title>
<indexterm zone="e-cal-backend-modify-object"><primary>e_cal_backend_modify_object</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_modify_object         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>,
                                                         <parameter><link linkend="CalObjModType"><type>CalObjModType</type></link> mod</parameter>);</programlisting>
<para>
Calls the modify_object method on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>calobj</parameter>&#160;:</term>
<listitem><simpara>Object to be modified.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mod</parameter>&#160;:</term>
<listitem><simpara>Type of modification.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-remove-object" role="function">
<title>e_cal_backend_remove_object ()</title>
<indexterm zone="e-cal-backend-remove-object"><primary>e_cal_backend_remove_object</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_remove_object         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>,
                                                         <parameter><link linkend="CalObjModType"><type>CalObjModType</type></link> mod</parameter>);</programlisting>
<para>
Removes an object in a calendar backend.  The backend will notify all of its
clients about the change.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>Unique identifier of the object to remove.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rid</parameter>&#160;:</term>
<listitem><simpara>A recurrence ID.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mod</parameter>&#160;:</term>
<listitem><simpara>Type of removal.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-discard-alarm" role="function">
<title>e_cal_backend_discard_alarm ()</title>
<indexterm zone="e-cal-backend-discard-alarm"><primary>e_cal_backend_discard_alarm</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_discard_alarm         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *auid</parameter>);</programlisting>
<para>
Discards an alarm from the given component. This allows the specific backend
to do whatever is needed to really discard the alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>UID of the component to discard the alarm from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>auid</parameter>&#160;:</term>
<listitem><simpara>Alarm ID.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-receive-objects" role="function">
<title>e_cal_backend_receive_objects ()</title>
<indexterm zone="e-cal-backend-receive-objects"><primary>e_cal_backend_receive_objects</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_receive_objects       (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);</programlisting>
<para>
Calls the receive_objects method on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>calobj</parameter>&#160;:</term>
<listitem><simpara>iCalendar object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-send-objects" role="function">
<title>e_cal_backend_send_objects ()</title>
<indexterm zone="e-cal-backend-send-objects"><primary>e_cal_backend_send_objects</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_send_objects          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);</programlisting>
<para>
Calls the send_objects method on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>calobj</parameter>&#160;:</term>
<listitem><simpara>iCalendar object to be sent.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-default-object" role="function">
<title>e_cal_backend_get_default_object ()</title>
<indexterm zone="e-cal-backend-get-default-object"><primary>e_cal_backend_get_default_object</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_default_object    (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>);</programlisting>
<para>
Calls the get_default_object method on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-object" role="function">
<title>e_cal_backend_get_object ()</title>
<indexterm zone="e-cal-backend-get-object"><primary>e_cal_backend_get_object</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_object            (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>);</programlisting>
<para>
Queries a calendar backend for a calendar object based on its unique
identifier and its recurrence ID (if a recurrent appointment).</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>Unique identifier for a calendar object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rid</parameter>&#160;:</term>
<listitem><simpara>ID for the object's recurrence to get.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-object-list" role="function">
<title>e_cal_backend_get_object_list ()</title>
<indexterm zone="e-cal-backend-get-object-list"><primary>e_cal_backend_get_object_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_object_list       (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *sexp</parameter>);</programlisting>
<para>
Calls the get_object_list method on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sexp</parameter>&#160;:</term>
<listitem><simpara>Expression to search for.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-attachment-list" role="function">
<title>e_cal_backend_get_attachment_list ()</title>
<indexterm zone="e-cal-backend-get-attachment-list"><primary>e_cal_backend_get_attachment_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_attachment_list   (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *rid</parameter>);</programlisting>
<para>
Queries a calendar backend for attachments present in a calendar object based
on its unique identifier and its recurrence ID (if a recurrent appointment).</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>Unique identifier for a calendar object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rid</parameter>&#160;:</term>
<listitem><simpara>ID for the object's recurrence to get.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-is-loaded" role="function">
<title>e_cal_backend_is_loaded ()</title>
<indexterm zone="e-cal-backend-is-loaded"><primary>e_cal_backend_is_loaded</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_backend_is_loaded             (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);</programlisting>
<para>
Queries whether a calendar backend has been loaded yet.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the backend has been loaded with data, FALSE
otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-start-query" role="function">
<title>e_cal_backend_start_query ()</title>
<indexterm zone="e-cal-backend-start-query"><primary>e_cal_backend_start_query</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_start_query           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>);</programlisting>
<para>
Starts a new live query on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&#160;:</term>
<listitem><simpara>The query to be started.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-mode" role="function">
<title>e_cal_backend_get_mode ()</title>
<indexterm zone="e-cal-backend-get-mode"><primary>e_cal_backend_get_mode</primary></indexterm>
<programlisting><link linkend="CalMode"><returnvalue>CalMode</returnvalue></link>             e_cal_backend_get_mode              (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);</programlisting>
<para>
Queries whether a calendar backend is connected remotely.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The current mode the calendar is in
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-set-mode" role="function">
<title>e_cal_backend_set_mode ()</title>
<indexterm zone="e-cal-backend-set-mode"><primary>e_cal_backend_set_mode</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_set_mode              (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="CalMode"><type>CalMode</type></link> mode</parameter>);</programlisting>
<para>
Sets the mode of the calendar</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mode</parameter>&#160;:</term>
<listitem><simpara>Mode to change to
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-timezone" role="function">
<title>e_cal_backend_get_timezone ()</title>
<indexterm zone="e-cal-backend-get-timezone"><primary>e_cal_backend_get_timezone</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_timezone          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tzid</parameter>&#160;:</term>
<listitem><simpara>Unique identifier of a VTIMEZONE object. Note that this must not be
NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-add-timezone" role="function">
<title>e_cal_backend_add_timezone ()</title>
<indexterm zone="e-cal-backend-add-timezone"><primary>e_cal_backend_add_timezone</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_add_timezone          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *object</parameter>);</programlisting>
<para>
Add a timezone object to the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-set-default-timezone" role="function">
<title>e_cal_backend_set_default_timezone ()</title>
<indexterm zone="e-cal-backend-set-default-timezone"><primary>e_cal_backend_set_default_timezone</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_set_default_timezone  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);</programlisting>
<para>
Sets the default timezone for the calendar, which is used to resolve
DATE and floating DATE-TIME values.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tzid</parameter>&#160;:</term>
<listitem><simpara>The TZID identifying the timezone.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-set-default-zone" role="function">
<title>e_cal_backend_set_default_zone ()</title>
<indexterm zone="e-cal-backend-set-default-zone"><primary>e_cal_backend_set_default_zone</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_set_default_zone      (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzobj</parameter>);</programlisting>
<para>
Sets the default timezone for the calendar, which is used to resolve
DATE and floating DATE-TIME values.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tzobj</parameter>&#160;:</term>
<listitem><simpara>The timezone object, in a string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-changes" role="function">
<title>e_cal_backend_get_changes ()</title>
<indexterm zone="e-cal-backend-get-changes"><primary>e_cal_backend_get_changes</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_changes           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *change_id</parameter>);</programlisting>
<para>
Builds a sequence of objects and the type of change that occurred on them since
the last time the give change_id was seen</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>change_id</parameter>&#160;:</term>
<listitem><simpara>A unique uid for the callers change list
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-get-free-busy" role="function">
<title>e_cal_backend_get_free_busy ()</title>
<indexterm zone="e-cal-backend-get-free-busy"><primary>e_cal_backend_get_free_busy</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_get_free_busy         (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCal"><type>EDataCal</type></link> *cal</parameter>,
                                                         <parameter><link linkend="GList"><type>GList</type></link> *users</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> start</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> end</parameter>);</programlisting>
<para>
Gets a free/busy object for the given time interval</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cal</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="EDataCal"><type>EDataCal</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>users</parameter>&#160;:</term>
<listitem><simpara>List of users to get free/busy information for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start</parameter>&#160;:</term>
<listitem><simpara>Start time for query.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>end</parameter>&#160;:</term>
<listitem><simpara>End time for query.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-internal-get-default-timezone" role="function">
<title>e_cal_backend_internal_get_default_timezone ()</title>
<indexterm zone="e-cal-backend-internal-get-default-timezone"><primary>e_cal_backend_internal_get_default_timezone</primary></indexterm>
<programlisting><link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link>*       e_cal_backend_internal_get_default_timezone
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);</programlisting>
<para>
Calls the internal_get_default_timezone method on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-internal-get-timezone" role="function">
<title>e_cal_backend_internal_get_timezone ()</title>
<indexterm zone="e-cal-backend-internal-get-timezone"><primary>e_cal_backend_internal_get_timezone</primary></indexterm>
<programlisting><link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link>*       e_cal_backend_internal_get_timezone (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>);</programlisting>
<para>
Calls the internal_get_timezone method on the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tzid</parameter>&#160;:</term>
<listitem><simpara>ID of the timezone to get.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-set-notification-proxy" role="function">
<title>e_cal_backend_set_notification_proxy ()</title>
<indexterm zone="e-cal-backend-set-notification-proxy"><primary>e_cal_backend_set_notification_proxy</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_set_notification_proxy
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *proxy</parameter>);</programlisting>
<para>
Sets the backend that will act as notification proxy for the given backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara>The calendar backend to act as notification proxy.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-object-created" role="function">
<title>e_cal_backend_notify_object_created ()</title>
<indexterm zone="e-cal-backend-notify-object-created"><primary>e_cal_backend_notify_object_created</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_object_created (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);</programlisting>
<para>
Notifies each of the backend's listeners about a new object.
</para>
<para>
#<link linkend="e-data-cal-notify-object-created"><function>e_data_cal_notify_object_created()</function></link> calls this for you. You only need to
call <link linkend="e-cal-backend-notify-object-created"><function>e_cal_backend_notify_object_created()</function></link> yourself to report objects
created by non-EDS clients.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>calobj</parameter>&#160;:</term>
<listitem><simpara>iCalendar representation of new object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-object-modified" role="function">
<title>e_cal_backend_notify_object_modified ()</title>
<indexterm zone="e-cal-backend-notify-object-modified"><primary>e_cal_backend_notify_object_modified</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_object_modified
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *old_object</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *object</parameter>);</programlisting>
<para>
Notifies each of the backend's listeners about a modified object.
</para>
<para>
#<link linkend="e-data-cal-notify-object-modified"><function>e_data_cal_notify_object_modified()</function></link> calls this for you. You only need to
call <link linkend="e-cal-backend-notify-object-modified"><function>e_cal_backend_notify_object_modified()</function></link> yourself to report objects
modified by non-EDS clients.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>old_object</parameter>&#160;:</term>
<listitem><simpara>iCalendar representation of the original form of the object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara>iCalendar representation of the new form of the object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-object-removed" role="function">
<title>e_cal_backend_notify_object_removed ()</title>
<indexterm zone="e-cal-backend-notify-object-removed"><primary>e_cal_backend_notify_object_removed</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_object_removed (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="ECalComponentId"><type>ECalComponentId</type></link> *id</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *old_object</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *object</parameter>);</programlisting>
<para>
Notifies each of the backend's listeners about a removed object.
</para>
<para>
<link linkend="e-data-cal-notify-object-removed"><function>e_data_cal_notify_object_removed()</function></link> calls this for you. You only need to
call <link linkend="e-cal-backend-notify-object-removed"><function>e_cal_backend_notify_object_removed()</function></link> yourself to report objects
removed by non-EDS clients.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&#160;:</term>
<listitem><simpara>the Id of the removed object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>old_object</parameter>&#160;:</term>
<listitem><simpara>iCalendar representation of the removed object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-mode" role="function">
<title>e_cal_backend_notify_mode ()</title>
<indexterm zone="e-cal-backend-notify-mode"><primary>e_cal_backend_notify_mode</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_mode           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="GNOME-Evolution-Calendar-CalListener-SetModeStatus"><type>GNOME_Evolution_Calendar_CalListener_SetModeStatus</type></link> status</parameter>,
                                                         <parameter><link linkend="GNOME-Evolution-Calendar-CalMode"><type>GNOME_Evolution_Calendar_CalMode</type></link> mode</parameter>);</programlisting>
<para>
Notifies each of the backend's listeners about the results of a
setMode call.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara>Status of the mode set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mode</parameter>&#160;:</term>
<listitem><simpara>the current mode
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-auth-required" role="function">
<title>e_cal_backend_notify_auth_required ()</title>
<indexterm zone="e-cal-backend-notify-auth-required"><primary>e_cal_backend_notify_auth_required</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_auth_required  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);</programlisting>
<para>
Notifies each of the backend's listeners that authentication is required to
open the calendar.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-error" role="function">
<title>e_cal_backend_notify_error ()</title>
<indexterm zone="e-cal-backend-notify-error"><primary>e_cal_backend_notify_error</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_error          (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *message</parameter>);</programlisting>
<para>
Notifies each of the backend's listeners about an error</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&#160;:</term>
<listitem><simpara>Error message
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-view-done" role="function">
<title>e_cal_backend_notify_view_done ()</title>
<indexterm zone="e-cal-backend-notify-view-done"><primary>e_cal_backend_notify_view_done</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_view_done      (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="GNOME-Evolution-Calendar-CallStatus"><type>GNOME_Evolution_Calendar_CallStatus</type></link> status</parameter>);</programlisting>
<para>
Notifies each of the backend's listeners about the view_done in downloading the items.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara>returns the status once the view is fully populated.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-view-progress-start" role="function">
<title>e_cal_backend_notify_view_progress_start ()</title>
<indexterm zone="e-cal-backend-notify-view-progress-start"><primary>e_cal_backend_notify_view_progress_start</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_view_progress_start
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>);</programlisting>
<para>
This methods has to be used before e_cal_backend_notify_view_progress.
Sets last notified percent value to 0.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-view-progress" role="function">
<title>e_cal_backend_notify_view_progress ()</title>
<indexterm zone="e-cal-backend-notify-view-progress"><primary>e_cal_backend_notify_view_progress</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_view_progress  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *message</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> percent</parameter>);</programlisting>
<para>
Notifies each of the backend's listeners about the view_progress in downloading the items.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&#160;:</term>
<listitem><simpara>the UID of the removed object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>percent</parameter>&#160;:</term>
<listitem><simpara>percentage of the objects loaded in the view
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-readonly" role="function">
<title>e_cal_backend_notify_readonly ()</title>
<indexterm zone="e-cal-backend-notify-readonly"><primary>e_cal_backend_notify_readonly</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_readonly       (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> read_only</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>read_only</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-cal-address" role="function">
<title>e_cal_backend_notify_cal_address ()</title>
<indexterm zone="e-cal-backend-notify-cal-address"><primary>e_cal_backend_notify_cal_address</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_cal_address    (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> *address</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>address</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-objects-added" role="function">
<title>e_cal_backend_notify_objects_added ()</title>
<indexterm zone="e-cal-backend-notify-objects-added"><primary>e_cal_backend_notify_objects_added</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_objects_added  (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>,
                                                         <parameter>const <link linkend="GList"><type>GList</type></link> *objects</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>objects</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-objects-removed" role="function">
<title>e_cal_backend_notify_objects_removed ()</title>
<indexterm zone="e-cal-backend-notify-objects-removed"><primary>e_cal_backend_notify_objects_removed</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_objects_removed
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>,
                                                         <parameter>const <link linkend="GList"><type>GList</type></link> *ids</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ids</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-notify-objects-modified" role="function">
<title>e_cal_backend_notify_objects_modified ()</title>
<indexterm zone="e-cal-backend-notify-objects-modified"><primary>e_cal_backend_notify_objects_modified</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_notify_objects_modified
                                                        (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><link linkend="EDataCalView"><type>EDataCalView</type></link> *query</parameter>,
                                                         <parameter>const <link linkend="GList"><type>GList</type></link> *objects</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>objects</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-backend-empty-cache" role="function">
<title>e_cal_backend_empty_cache ()</title>
<indexterm zone="e-cal-backend-empty-cache"><primary>e_cal_backend_empty_cache</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_backend_empty_cache           (<parameter><link linkend="ECalBackend"><type>ECalBackend</type></link> *backend</parameter>,
                                                         <parameter><type>struct _ECalBackendCache</type> *cache</parameter>);</programlisting>
<para>
Empties backend's cache with all notifications and so on, thus all listening
will know there is nothing in this backend.</para>
<variablelist role="params">
<varlistentry><term><parameter>backend</parameter>&#160;:</term>
<listitem><simpara>A calendar backend.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cache</parameter>&#160;:</term>
<listitem><simpara>Backend's cache to empty.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
