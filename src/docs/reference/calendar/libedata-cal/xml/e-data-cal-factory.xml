<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="EDataCalFactory">
<refmeta>
<refentrytitle role="top_of_page" id="EDataCalFactory.top_of_page">EDataCalFactory</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBEDATA-CAL Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>EDataCalFactory</refname>
<refpurpose>Implementation of the calendar CORBA factory.</refpurpose>
</refnamediv>

<refsynopsisdiv id="EDataCalFactory.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>                    <link linkend="EDataCalFactory-struct">EDataCalFactory</link>;
<link linkend="EDataCalFactory"><returnvalue>EDataCalFactory</returnvalue></link> *   <link linkend="e-data-cal-factory-new">e_data_cal_factory_new</link>              (<parameter><type>void</type></parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-data-cal-factory-register-storage">e_data_cal_factory_register_storage</link> (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *iid</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-data-cal-factory-register-backend">e_data_cal_factory_register_backend</link> (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>,
                                                         <parameter><link linkend="ECalBackendFactory"><type>ECalBackendFactory</type></link> *backend_factory</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-data-cal-factory-register-backends">e_data_cal_factory_register_backends</link>
                                                        (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>);
<link linkend="gint"><returnvalue>gint</returnvalue></link>                <link linkend="e-data-cal-factory-get-n-backends">e_data_cal_factory_get_n_backends</link>   (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-data-cal-factory-dump-active-backends">e_data_cal_factory_dump_active_backends</link>
                                                        (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-data-cal-factory-set-backend-mode">e_data_cal_factory_set_backend_mode</link> (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> mode</parameter>);
</synopsis>
</refsynopsisdiv>
<refsect1 id="EDataCalFactory.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="BonoboObject">BonoboObject</link>
         +----EDataCalFactory
</synopsis>
</refsect1>
<refsect1 id="EDataCalFactory.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="EDataCalFactory-last-calendar-gone">last-calendar-gone</link>&quot;                             : Run First
</synopsis>
</refsect1>

<refsect1 id="EDataCalFactory.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="EDataCalFactory.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="EDataCalFactory-struct" role="struct">
<title>EDataCalFactory</title>
<indexterm zone="EDataCalFactory-struct"><primary>EDataCalFactory</primary></indexterm>
<programlisting>typedef struct _EDataCalFactory EDataCalFactory;</programlisting>
<para>
</para></refsect2>
<refsect2 id="e-data-cal-factory-new" role="function">
<title>e_data_cal_factory_new ()</title>
<indexterm zone="e-data-cal-factory-new"><primary>e_data_cal_factory_new</primary></indexterm>
<programlisting><link linkend="EDataCalFactory"><returnvalue>EDataCalFactory</returnvalue></link> *   e_data_cal_factory_new              (<parameter><type>void</type></parameter>);</programlisting>
<para>
Creates a new <link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> object.</para>
<variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly-created <link linkend="EDataCalFactory"><type>EDataCalFactory</type></link>, or NULL if its corresponding CORBA
object could not be created.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-data-cal-factory-register-storage" role="function">
<title>e_data_cal_factory_register_storage ()</title>
<indexterm zone="e-data-cal-factory-register-storage"><primary>e_data_cal_factory_register_storage</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_data_cal_factory_register_storage (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *iid</parameter>);</programlisting>
<para>
Registers a calendar factory with the OAF object activation daemon.  This
function must be called before any clients can activate the factory.</para>
<variablelist role="params">
<varlistentry><term><parameter>factory</parameter>&#160;:</term>
<listitem><simpara>A calendar factory.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iid</parameter>&#160;:</term>
<listitem><simpara>OAFIID for the factory to be registered.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-data-cal-factory-register-backend" role="function">
<title>e_data_cal_factory_register_backend ()</title>
<indexterm zone="e-data-cal-factory-register-backend"><primary>e_data_cal_factory_register_backend</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_data_cal_factory_register_backend (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>,
                                                         <parameter><link linkend="ECalBackendFactory"><type>ECalBackendFactory</type></link> *backend_factory</parameter>);</programlisting>
<para>
Registers an <link linkend="ECalBackend"><type>ECalBackend</type></link> subclass that will be used to handle URIs
with a particular method.  When the factory is asked to open a
particular URI, it will look in its list of registered methods and
create a backend of the appropriate type.</para>
<variablelist role="params">
<varlistentry><term><parameter>factory</parameter>&#160;:</term>
<listitem><simpara>A calendar factory.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>backend_factory</parameter>&#160;:</term>
<listitem><simpara>The object responsible for creating backends.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-data-cal-factory-register-backends" role="function">
<title>e_data_cal_factory_register_backends ()</title>
<indexterm zone="e-data-cal-factory-register-backends"><primary>e_data_cal_factory_register_backends</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_data_cal_factory_register_backends
                                                        (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>);</programlisting>
<para>
Register all backends for the given factory.</para>
<variablelist role="params">
<varlistentry><term><parameter>factory</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-data-cal-factory-get-n-backends" role="function">
<title>e_data_cal_factory_get_n_backends ()</title>
<indexterm zone="e-data-cal-factory-get-n-backends"><primary>e_data_cal_factory_get_n_backends</primary></indexterm>
<programlisting><link linkend="gint"><returnvalue>gint</returnvalue></link>                e_data_cal_factory_get_n_backends   (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>);</programlisting>
<para>
Get the number of backends currently active in the given factory.</para>
<variablelist role="params">
<varlistentry><term><parameter>factory</parameter>&#160;:</term>
<listitem><simpara>A calendar factory.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the number of backends.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-data-cal-factory-dump-active-backends" role="function">
<title>e_data_cal_factory_dump_active_backends ()</title>
<indexterm zone="e-data-cal-factory-dump-active-backends"><primary>e_data_cal_factory_dump_active_backends</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_data_cal_factory_dump_active_backends
                                                        (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>);</programlisting>
<para>
Dumps to standard output a list of all active backends for the given
factory.</para>
<variablelist role="params">
<varlistentry><term><parameter>factory</parameter>&#160;:</term>
<listitem><simpara>A calendar factory.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-data-cal-factory-set-backend-mode" role="function">
<title>e_data_cal_factory_set_backend_mode ()</title>
<indexterm zone="e-data-cal-factory-set-backend-mode"><primary>e_data_cal_factory_set_backend_mode</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_data_cal_factory_set_backend_mode (<parameter><link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *factory</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> mode</parameter>);</programlisting>
<para>
Sets the online mode for all backends created by the given factory.</para>
<variablelist role="params">
<varlistentry><term><parameter>factory</parameter>&#160;:</term>
<listitem><simpara>A calendar factory.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mode</parameter>&#160;:</term>
<listitem><simpara>Online mode to set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="EDataCalFactory.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="EDataCalFactory-last-calendar-gone" role="signal"><title>The <literal>&quot;last-calendar-gone&quot;</literal> signal</title>
<indexterm zone="EDataCalFactory-last-calendar-gone"><primary>EDataCalFactory::last-calendar-gone</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                user_function                      (<link linkend="EDataCalFactory"><type>EDataCalFactory</type></link> *edatacalfactory,
                                                        <link linkend="gpointer"><type>gpointer</type></link>         user_data)            : Run First</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>edatacalfactory</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>

</refentry>
