<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libecal-e-cal-recur">
<refmeta>
<refentrytitle role="top_of_page" id="libecal-e-cal-recur.top_of_page">e-cal-recur</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBECAL Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>e-cal-recur</refname>
<refpurpose>Functions to expand recurrences for recurrent appointments.</refpurpose>
</refnamediv>

<refsynopsisdiv id="libecal-e-cal-recur.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            (<link linkend="ECalRecurInstanceFn">*ECalRecurInstanceFn</link>)              (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> instance_start</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> instance_end</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);
<link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link> *      (<link linkend="ECalRecurResolveTimezoneFn">*ECalRecurResolveTimezoneFn</link>)       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-recur-generate-instances">e_cal_recur_generate_instances</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> start</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> end</parameter>,
                                                         <parameter><link linkend="ECalRecurInstanceFn"><type>ECalRecurInstanceFn</type></link> cb</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> cb_data</parameter>,
                                                         <parameter><link linkend="ECalRecurResolveTimezoneFn"><type>ECalRecurResolveTimezoneFn</type></link> tz_cb</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> tz_cb_data</parameter>,
                                                         <parameter><link linkend="icaltimezone"><type>icaltimezone</type></link> *default_timezone</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> **      <link linkend="e-cal-get-recur-nth">e_cal_get_recur_nth</link>                 (<parameter><type>void</type></parameter>);
#define             <link linkend="e-cal-recur-nth">e_cal_recur_nth</link>
</synopsis>
</refsynopsisdiv>

<refsect1 id="libecal-e-cal-recur.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="libecal-e-cal-recur.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="ECalRecurInstanceFn" role="function">
<title>ECalRecurInstanceFn ()</title>
<indexterm zone="ECalRecurInstanceFn"><primary>ECalRecurInstanceFn</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            (*ECalRecurInstanceFn)              (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> instance_start</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> instance_end</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>instance_start</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>instance_end</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ECalRecurResolveTimezoneFn" role="function">
<title>ECalRecurResolveTimezoneFn ()</title>
<indexterm zone="ECalRecurResolveTimezoneFn"><primary>ECalRecurResolveTimezoneFn</primary></indexterm>
<programlisting><link linkend="icaltimezone"><returnvalue>icaltimezone</returnvalue></link> *      (*ECalRecurResolveTimezoneFn)       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *tzid</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>tzid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-recur-generate-instances" role="function">
<title>e_cal_recur_generate_instances ()</title>
<indexterm zone="e-cal-recur-generate-instances"><primary>e_cal_recur_generate_instances</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_recur_generate_instances      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> start</parameter>,
                                                         <parameter><link linkend="time-t"><type>time_t</type></link> end</parameter>,
                                                         <parameter><link linkend="ECalRecurInstanceFn"><type>ECalRecurInstanceFn</type></link> cb</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> cb_data</parameter>,
                                                         <parameter><link linkend="ECalRecurResolveTimezoneFn"><type>ECalRecurResolveTimezoneFn</type></link> tz_cb</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> tz_cb_data</parameter>,
                                                         <parameter><link linkend="icaltimezone"><type>icaltimezone</type></link> *default_timezone</parameter>);</programlisting>
<para>
Calls the given callback function for each occurrence of the event that
intersects the range between the given <parameter>start</parameter> and <parameter>end</parameter> times (the end time is
not included). Note that the occurrences may start before the given start
time.
</para>
<para>
If the callback routine returns FALSE the occurrence generation stops.
</para>
<para>
Both start and end can be -1, in which case we start at the events first
instance and continue until it ends, or forever if it has no enddate.
</para>
<para>
The tz_cb is used to resolve references to timezones. It is passed a TZID
and should return the icaltimezone* corresponding to that TZID. We need to
do this as we access timezones in different ways on the client &amp; server.
</para>
<para>
The default_timezone argument is used for DTSTART or DTEND properties that
are DATE values or do not have a TZID (i.e. floating times).</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start</parameter>&#160;:</term>
<listitem><simpara>Range start time.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>end</parameter>&#160;:</term>
<listitem><simpara>Range end time.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cb</parameter>&#160;:</term>
<listitem><simpara>Callback function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cb_data</parameter>&#160;:</term>
<listitem><simpara>Closure data for the callback function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tz_cb</parameter>&#160;:</term>
<listitem><simpara>Callback for retrieving timezones.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tz_cb_data</parameter>&#160;:</term>
<listitem><simpara>Closure data for the timezone callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_timezone</parameter>&#160;:</term>
<listitem><simpara>Default timezone to use when a timezone cannot be
found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-get-recur-nth" role="function">
<title>e_cal_get_recur_nth ()</title>
<indexterm zone="e-cal-get-recur-nth"><primary>e_cal_get_recur_nth</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> **      e_cal_get_recur_nth                 (<parameter><type>void</type></parameter>);</programlisting>
<para>
Returns an array of 31 translated strings for each day of the month
(i.e. "1st", "2nd", and so on).</para>
<variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a pointer to an array of strings.  This array is static, do not free it.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-recur-nth" role="macro">
<title>e_cal_recur_nth</title>
<indexterm zone="e-cal-recur-nth"><primary>e_cal_recur_nth</primary></indexterm>
<programlisting>#define e_cal_recur_nth (e_cal_get_recur_nth ())
</programlisting>
<para>
An array of 31 translated strings for each day of the month (i.e. "1st",
"2nd", and so on).</para>
</refsect2>

</refsect1>

</refentry>
