<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="ECalComponent">
<refmeta>
<refentrytitle role="top_of_page" id="ECalComponent.top_of_page">ECalComponent</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBECAL Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ECalComponent</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="ECalComponent.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>                    <link linkend="ECalComponent-struct">ECalComponent</link>;
                    <link linkend="ECalComponentId">ECalComponentId</link>;
enum                <link linkend="ECalComponentVType">ECalComponentVType</link>;
enum                <link linkend="ECalComponentField">ECalComponentField</link>;
enum                <link linkend="ECalComponentClassification">ECalComponentClassification</link>;
                    <link linkend="ECalComponentDateTime">ECalComponentDateTime</link>;
enum                <link linkend="ECalComponentPeriodType">ECalComponentPeriodType</link>;
                    <link linkend="ECalComponentPeriod">ECalComponentPeriod</link>;
enum                <link linkend="ECalComponentRangeType">ECalComponentRangeType</link>;
                    <link linkend="ECalComponentRange">ECalComponentRange</link>;
                    <link linkend="ECalComponentText">ECalComponentText</link>;
enum                <link linkend="ECalComponentTransparency">ECalComponentTransparency</link>;
                    <link linkend="ECalComponentAttendee">ECalComponentAttendee</link>;
                    <link linkend="ECalComponentOrganizer">ECalComponentOrganizer</link>;
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-cal-component-gen-uid">e_cal_component_gen_uid</link>             (<parameter><type>void</type></parameter>);
<link linkend="ECalComponent"><returnvalue>ECalComponent</returnvalue></link> *     <link linkend="e-cal-component-new">e_cal_component_new</link>                 (<parameter><type>void</type></parameter>);
<link linkend="ECalComponent"><returnvalue>ECalComponent</returnvalue></link> *     <link linkend="e-cal-component-new-from-string">e_cal_component_new_from_string</link>     (<parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);
<link linkend="ECalComponent"><returnvalue>ECalComponent</returnvalue></link> *     <link linkend="e-cal-component-clone">e_cal_component_clone</link>               (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-new-vtype">e_cal_component_set_new_vtype</link>       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentVType"><type>ECalComponentVType</type></link> type</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-set-icalcomponent">e_cal_component_set_icalcomponent</link>   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="icalcomponent"><type>icalcomponent</type></link> *icalcomp</parameter>);
<link linkend="icalcomponent"><returnvalue>icalcomponent</returnvalue></link> *     <link linkend="e-cal-component-get-icalcomponent">e_cal_component_get_icalcomponent</link>   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-rescan">e_cal_component_rescan</link>              (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-strip-errors">e_cal_component_strip_errors</link>        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="ECalComponentVType"><returnvalue>ECalComponentVType</returnvalue></link>  <link linkend="e-cal-component-get-vtype">e_cal_component_get_vtype</link>           (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-cal-component-get-as-string">e_cal_component_get_as_string</link>       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-commit-sequence">e_cal_component_commit_sequence</link>     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-abort-sequence">e_cal_component_abort_sequence</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-uid">e_cal_component_get_uid</link>             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> **uid</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-uid">e_cal_component_set_uid</link>             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);
<link linkend="ECalComponentId"><returnvalue>ECalComponentId</returnvalue></link> *   <link linkend="e-cal-component-get-id">e_cal_component_get_id</link>              (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-id">e_cal_component_free_id</link>             (<parameter><link linkend="ECalComponentId"><type>ECalComponentId</type></link> *id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-categories">e_cal_component_get_categories</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> **categories</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-categories">e_cal_component_set_categories</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *categories</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-categories-list">e_cal_component_get_categories_list</link> (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **categ_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-categories-list">e_cal_component_set_categories_list</link> (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *categ_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-classification">e_cal_component_get_classification</link>  (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentClassification"><type>ECalComponentClassification</type></link> *classif</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-classification">e_cal_component_set_classification</link>  (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentClassification"><type>ECalComponentClassification</type></link> classif</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-comment-list">e_cal_component_get_comment_list</link>    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **text_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-comment-list">e_cal_component_set_comment_list</link>    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *text_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-completed">e_cal_component_get_completed</link>       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> **t</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-completed">e_cal_component_set_completed</link>       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-contact-list">e_cal_component_get_contact_list</link>    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **text_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-contact-list">e_cal_component_set_contact_list</link>    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *text_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-created">e_cal_component_get_created</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> **t</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-created">e_cal_component_set_created</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-description-list">e_cal_component_get_description_list</link>
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **text_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-description-list">e_cal_component_set_description_list</link>
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *text_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-dtend">e_cal_component_get_dtend</link>           (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-dtend">e_cal_component_set_dtend</link>           (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-dtstamp">e_cal_component_get_dtstamp</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-dtstamp">e_cal_component_set_dtstamp</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-dtstart">e_cal_component_get_dtstart</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-dtstart">e_cal_component_set_dtstart</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-due">e_cal_component_get_due</link>             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-due">e_cal_component_set_due</link>             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-exdate-list">e_cal_component_get_exdate_list</link>     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **exdate_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-exdate-list">e_cal_component_set_exdate_list</link>     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *exdate_list</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-exdates">e_cal_component_has_exdates</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-exrule-list">e_cal_component_get_exrule_list</link>     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **recur_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-exrule-property-list">e_cal_component_get_exrule_property_list</link>
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **recur_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-exrule-list">e_cal_component_set_exrule_list</link>     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *recur_list</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-exrules">e_cal_component_has_exrules</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-exceptions">e_cal_component_has_exceptions</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-geo">e_cal_component_get_geo</link>             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icalgeotype</type> **geo</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-geo">e_cal_component_set_geo</link>             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icalgeotype</type> *geo</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-last-modified">e_cal_component_get_last_modified</link>   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> **t</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-last-modified">e_cal_component_set_last_modified</link>   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-organizer">e_cal_component_get_organizer</link>       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentOrganizer"><type>ECalComponentOrganizer</type></link> *organizer</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-organizer">e_cal_component_set_organizer</link>       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentOrganizer"><type>ECalComponentOrganizer</type></link> *organizer</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-organizer">e_cal_component_has_organizer</link>       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="gint"><returnvalue>gint</returnvalue></link>                <link linkend="e-cal-component-get-percent-as-int">e_cal_component_get_percent_as_int</link>  (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-percent-as-int">e_cal_component_set_percent_as_int</link>  (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> percent</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-percent">e_cal_component_get_percent</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> **percent</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-percent">e_cal_component_set_percent</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *percent</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-priority">e_cal_component_get_priority</link>        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> **priority</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-priority">e_cal_component_set_priority</link>        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *priority</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-recurid">e_cal_component_get_recurid</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentRange"><type>ECalComponentRange</type></link> *recur_id</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-cal-component-get-recurid-as-string">e_cal_component_get_recurid_as_string</link>
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-recurid">e_cal_component_set_recurid</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentRange"><type>ECalComponentRange</type></link> *recur_id</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-rdate-list">e_cal_component_get_rdate_list</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **period_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-rdate-list">e_cal_component_set_rdate_list</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *period_list</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-rdates">e_cal_component_has_rdates</link>          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-rrule-list">e_cal_component_get_rrule_list</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **recur_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-rrule-property-list">e_cal_component_get_rrule_property_list</link>
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **recur_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-rrule-list">e_cal_component_set_rrule_list</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *recur_list</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-rrules">e_cal_component_has_rrules</link>          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-recurrences">e_cal_component_has_recurrences</link>     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-simple-recurrence">e_cal_component_has_simple_recurrence</link>
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-is-instance">e_cal_component_is_instance</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-sequence">e_cal_component_get_sequence</link>        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> **sequence</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-sequence">e_cal_component_set_sequence</link>        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *sequence</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-status">e_cal_component_get_status</link>          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="icalproperty-status"><type>icalproperty_status</type></link> *status</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-status">e_cal_component_set_status</link>          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="icalproperty-status"><type>icalproperty_status</type></link> status</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-summary">e_cal_component_get_summary</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentText"><type>ECalComponentText</type></link> *summary</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-summary">e_cal_component_set_summary</link>         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentText"><type>ECalComponentText</type></link> *summary</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-transparency">e_cal_component_get_transparency</link>    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentTransparency"><type>ECalComponentTransparency</type></link> *transp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-transparency">e_cal_component_set_transparency</link>    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentTransparency"><type>ECalComponentTransparency</type></link> transp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-url">e_cal_component_get_url</link>             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> **url</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-url">e_cal_component_set_url</link>             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *url</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-attendee-list">e_cal_component_get_attendee_list</link>   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **attendee_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-attendee-list">e_cal_component_set_attendee_list</link>   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *attendee_list</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-attendees">e_cal_component_has_attendees</link>       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-location">e_cal_component_get_location</link>        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> **location</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-location">e_cal_component_set_location</link>        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *location</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-get-attachment-list">e_cal_component_get_attachment_list</link> (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **attachment_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-set-attachment-list">e_cal_component_set_attachment_list</link> (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *attachment_list</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-attachments">e_cal_component_has_attachments</link>     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="gint"><returnvalue>gint</returnvalue></link>                <link linkend="e-cal-component-get-num-attachments">e_cal_component_get_num_attachments</link> (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-event-dates-match">e_cal_component_event_dates_match</link>   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp1</parameter>,
                                                         <parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp2</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-categories-list">e_cal_component_free_categories_list</link>
                                                        (<parameter><link linkend="GSList"><type>GSList</type></link> *categ_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-datetime">e_cal_component_free_datetime</link>       (<parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-range">e_cal_component_free_range</link>          (<parameter><link linkend="ECalComponentRange"><type>ECalComponentRange</type></link> *range</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-exdate-list">e_cal_component_free_exdate_list</link>    (<parameter><link linkend="GSList"><type>GSList</type></link> *exdate_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-geo">e_cal_component_free_geo</link>            (<parameter><type>struct icalgeotype</type> *geo</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-icaltimetype">e_cal_component_free_icaltimetype</link>   (<parameter><type>struct icaltimetype</type> *t</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-percent">e_cal_component_free_percent</link>        (<parameter><link linkend="gint"><type>gint</type></link> *percent</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-priority">e_cal_component_free_priority</link>       (<parameter><link linkend="gint"><type>gint</type></link> *priority</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-period-list">e_cal_component_free_period_list</link>    (<parameter><link linkend="GSList"><type>GSList</type></link> *period_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-recur-list">e_cal_component_free_recur_list</link>     (<parameter><link linkend="GSList"><type>GSList</type></link> *recur_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-sequence">e_cal_component_free_sequence</link>       (<parameter><link linkend="gint"><type>gint</type></link> *sequence</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-text-list">e_cal_component_free_text_list</link>      (<parameter><link linkend="GSList"><type>GSList</type></link> *text_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-free-attendee-list">e_cal_component_free_attendee_list</link>  (<parameter><link linkend="GSList"><type>GSList</type></link> *attendee_list</parameter>);
                    <link linkend="ECalComponentAlarm">ECalComponentAlarm</link>;
                    <link linkend="ECalComponentAlarmInstance">ECalComponentAlarmInstance</link>;
                    <link linkend="ECalComponentAlarms">ECalComponentAlarms</link>;
enum                <link linkend="ECalComponentAlarmAction">ECalComponentAlarmAction</link>;
enum                <link linkend="ECalComponentAlarmTriggerType">ECalComponentAlarmTriggerType</link>;
                    <link linkend="ECalComponentAlarmTrigger">ECalComponentAlarmTrigger</link>;
                    <link linkend="ECalComponentAlarmRepeat">ECalComponentAlarmRepeat</link>;
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-has-alarms">e_cal_component_has_alarms</link>          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-add-alarm">e_cal_component_add_alarm</link>           (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-remove-alarm">e_cal_component_remove_alarm</link>        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *auid</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-remove-all-alarms">e_cal_component_remove_all_alarms</link>   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="GList"><returnvalue>GList</returnvalue></link> *             <link linkend="e-cal-component-get-alarm-uids">e_cal_component_get_alarm_uids</link>      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);
<link linkend="ECalComponentAlarm"><returnvalue>ECalComponentAlarm</returnvalue></link> * <link linkend="e-cal-component-get-alarm">e_cal_component_get_alarm</link>          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *auid</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarms-free">e_cal_component_alarms_free</link>         (<parameter><link linkend="ECalComponentAlarms"><type>ECalComponentAlarms</type></link> *alarms</parameter>);
<link linkend="ECalComponentAlarm"><returnvalue>ECalComponentAlarm</returnvalue></link> * <link linkend="e-cal-component-alarm-new">e_cal_component_alarm_new</link>          (<parameter><type>void</type></parameter>);
<link linkend="ECalComponentAlarm"><returnvalue>ECalComponentAlarm</returnvalue></link> * <link linkend="e-cal-component-alarm-clone">e_cal_component_alarm_clone</link>        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-free">e_cal_component_alarm_free</link>          (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="e-cal-component-alarm-get-uid">e_cal_component_alarm_get_uid</link>       (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-get-action">e_cal_component_alarm_get_action</link>    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmAction"><type>ECalComponentAlarmAction</type></link> *action</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-set-action">e_cal_component_alarm_set_action</link>    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmAction"><type>ECalComponentAlarmAction</type></link> action</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-get-attach">e_cal_component_alarm_get_attach</link>    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="icalattach"><type>icalattach</type></link> **attach</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-set-attach">e_cal_component_alarm_set_attach</link>    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="icalattach"><type>icalattach</type></link> *attach</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-get-description">e_cal_component_alarm_get_description</link>
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentText"><type>ECalComponentText</type></link> *description</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-set-description">e_cal_component_alarm_set_description</link>
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentText"><type>ECalComponentText</type></link> *description</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-get-repeat">e_cal_component_alarm_get_repeat</link>    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmRepeat"><type>ECalComponentAlarmRepeat</type></link> *repeat</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-set-repeat">e_cal_component_alarm_set_repeat</link>    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmRepeat"><type>ECalComponentAlarmRepeat</type></link> repeat</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-get-trigger">e_cal_component_alarm_get_trigger</link>   (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmTrigger"><type>ECalComponentAlarmTrigger</type></link> *trigger</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-set-trigger">e_cal_component_alarm_set_trigger</link>   (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmTrigger"><type>ECalComponentAlarmTrigger</type></link> trigger</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-get-attendee-list">e_cal_component_alarm_get_attendee_list</link>
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **attendee_list</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-cal-component-alarm-set-attendee-list">e_cal_component_alarm_set_attendee_list</link>
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *attendee_list</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-cal-component-alarm-has-attendees">e_cal_component_alarm_has_attendees</link> (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);
<link linkend="icalcomponent"><returnvalue>icalcomponent</returnvalue></link> *     <link linkend="e-cal-component-alarm-get-icalcomponent">e_cal_component_alarm_get_icalcomponent</link>
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);
</synopsis>
</refsynopsisdiv>
<refsect1 id="ECalComponent.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----ECalComponent
</synopsis>
</refsect1>

<refsect1 id="ECalComponent.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="ECalComponent.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="ECalComponent-struct" role="struct">
<title>ECalComponent</title>
<indexterm zone="ECalComponent-struct"><primary>ECalComponent</primary></indexterm>
<programlisting>typedef struct _ECalComponent ECalComponent;</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentId" role="struct">
<title>ECalComponentId</title>
<indexterm zone="ECalComponentId"><primary>ECalComponentId</primary></indexterm>
<programlisting>typedef struct {
	gchar *uid;
	gchar *rid;
} ECalComponentId;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentVType" role="enum">
<title>enum ECalComponentVType</title>
<indexterm zone="ECalComponentVType"><primary>ECalComponentVType</primary></indexterm>
<programlisting>typedef enum {
	E_CAL_COMPONENT_NO_TYPE,
	E_CAL_COMPONENT_EVENT,
	E_CAL_COMPONENT_TODO,
	E_CAL_COMPONENT_JOURNAL,
	E_CAL_COMPONENT_FREEBUSY,
	E_CAL_COMPONENT_TIMEZONE
} ECalComponentVType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentField" role="enum">
<title>enum ECalComponentField</title>
<indexterm zone="ECalComponentField"><primary>ECalComponentField</primary></indexterm>
<programlisting>typedef enum {
	E_CAL_COMPONENT_FIELD_CATEGORIES,		/* concatenation of the categories list */
	E_CAL_COMPONENT_FIELD_CLASSIFICATION,
	E_CAL_COMPONENT_FIELD_COMPLETED,
	E_CAL_COMPONENT_FIELD_DTEND,
	E_CAL_COMPONENT_FIELD_DTSTART,
	E_CAL_COMPONENT_FIELD_DUE,
	E_CAL_COMPONENT_FIELD_GEO,
	E_CAL_COMPONENT_FIELD_PERCENT,
	E_CAL_COMPONENT_FIELD_PRIORITY,
	E_CAL_COMPONENT_FIELD_SUMMARY,
	E_CAL_COMPONENT_FIELD_TRANSPARENCY,
	E_CAL_COMPONENT_FIELD_URL,
	E_CAL_COMPONENT_FIELD_HAS_ALARMS,		/* not a real field */
	E_CAL_COMPONENT_FIELD_ICON,		/* not a real field */
	E_CAL_COMPONENT_FIELD_COMPLETE,		/* not a real field */
	E_CAL_COMPONENT_FIELD_RECURRING,		/* not a real field */
	E_CAL_COMPONENT_FIELD_OVERDUE,		/* not a real field */
	E_CAL_COMPONENT_FIELD_COLOR,		/* not a real field */
	E_CAL_COMPONENT_FIELD_STATUS,
	E_CAL_COMPONENT_FIELD_COMPONENT,		/* not a real field */
	E_CAL_COMPONENT_FIELD_LOCATION,
	E_CAL_COMPONENT_FIELD_NUM_FIELDS
} ECalComponentField;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentClassification" role="enum">
<title>enum ECalComponentClassification</title>
<indexterm zone="ECalComponentClassification"><primary>ECalComponentClassification</primary></indexterm>
<programlisting>typedef enum {
	E_CAL_COMPONENT_CLASS_NONE,
	E_CAL_COMPONENT_CLASS_PUBLIC,
	E_CAL_COMPONENT_CLASS_PRIVATE,
	E_CAL_COMPONENT_CLASS_CONFIDENTIAL,
	E_CAL_COMPONENT_CLASS_UNKNOWN
} ECalComponentClassification;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentDateTime" role="struct">
<title>ECalComponentDateTime</title>
<indexterm zone="ECalComponentDateTime"><primary>ECalComponentDateTime</primary></indexterm>
<programlisting>typedef struct {
	/* Actual date/time value */
	struct icaltimetype *value;

	/* Timezone ID */
	const gchar *tzid;
} ECalComponentDateTime;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentPeriodType" role="enum">
<title>enum ECalComponentPeriodType</title>
<indexterm zone="ECalComponentPeriodType"><primary>ECalComponentPeriodType</primary></indexterm>
<programlisting>typedef enum {
	E_CAL_COMPONENT_PERIOD_DATETIME,
	E_CAL_COMPONENT_PERIOD_DURATION
} ECalComponentPeriodType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentPeriod" role="struct">
<title>ECalComponentPeriod</title>
<indexterm zone="ECalComponentPeriod"><primary>ECalComponentPeriod</primary></indexterm>
<programlisting>typedef struct {
	ECalComponentPeriodType type;

	struct icaltimetype start;

	union {
		struct icaltimetype end;
		struct icaldurationtype duration;
	} u;
} ECalComponentPeriod;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentRangeType" role="enum">
<title>enum ECalComponentRangeType</title>
<indexterm zone="ECalComponentRangeType"><primary>ECalComponentRangeType</primary></indexterm>
<programlisting>typedef enum {
	E_CAL_COMPONENT_RANGE_SINGLE,
	E_CAL_COMPONENT_RANGE_THISPRIOR,
	E_CAL_COMPONENT_RANGE_THISFUTURE
} ECalComponentRangeType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentRange" role="struct">
<title>ECalComponentRange</title>
<indexterm zone="ECalComponentRange"><primary>ECalComponentRange</primary></indexterm>
<programlisting>typedef struct {
	ECalComponentRangeType type;

	ECalComponentDateTime datetime;
} ECalComponentRange;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentText" role="struct">
<title>ECalComponentText</title>
<indexterm zone="ECalComponentText"><primary>ECalComponentText</primary></indexterm>
<programlisting>typedef struct {
	/* Description string */
	const gchar *value;

	/* Alternate representation URI */
	const gchar *altrep;
} ECalComponentText;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentTransparency" role="enum">
<title>enum ECalComponentTransparency</title>
<indexterm zone="ECalComponentTransparency"><primary>ECalComponentTransparency</primary></indexterm>
<programlisting>typedef enum {
	E_CAL_COMPONENT_TRANSP_NONE,
	E_CAL_COMPONENT_TRANSP_TRANSPARENT,
	E_CAL_COMPONENT_TRANSP_OPAQUE,
	E_CAL_COMPONENT_TRANSP_UNKNOWN
} ECalComponentTransparency;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentAttendee" role="struct">
<title>ECalComponentAttendee</title>
<indexterm zone="ECalComponentAttendee"><primary>ECalComponentAttendee</primary></indexterm>
<programlisting>typedef struct {
	const gchar *value;

	const gchar *member;
	icalparameter_cutype cutype;
	icalparameter_role role;
	icalparameter_partstat status;
	gboolean rsvp;

	const gchar *delto;
	const gchar *delfrom;
	const gchar *sentby;
	const gchar *cn;
	const gchar *language;
} ECalComponentAttendee;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentOrganizer" role="struct">
<title>ECalComponentOrganizer</title>
<indexterm zone="ECalComponentOrganizer"><primary>ECalComponentOrganizer</primary></indexterm>
<programlisting>typedef struct {
	const gchar *value;
	const gchar *sentby;
	const gchar *cn;
	const gchar *language;
} ECalComponentOrganizer;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="e-cal-component-gen-uid" role="function">
<title>e_cal_component_gen_uid ()</title>
<indexterm zone="e-cal-component-gen-uid"><primary>e_cal_component_gen_uid</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_cal_component_gen_uid             (<parameter><type>void</type></parameter>);</programlisting>
<para>
Generates a unique identifier suitable for calendar components.</para>
<variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A unique identifier string.  Every time this function is called
a different string is returned.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-new" role="function">
<title>e_cal_component_new ()</title>
<indexterm zone="e-cal-component-new"><primary>e_cal_component_new</primary></indexterm>
<programlisting><link linkend="ECalComponent"><returnvalue>ECalComponent</returnvalue></link> *     e_cal_component_new                 (<parameter><type>void</type></parameter>);</programlisting>
<para>
Creates a new empty calendar component object.  Once created, you should set it from an
existing <link linkend="icalcomponent"><type>icalcomponent</type></link> structure by using <link linkend="e-cal-component-set-icalcomponent"><function>e_cal_component_set_icalcomponent()</function></link> or with a
new empty component type by using <link linkend="e-cal-component-set-new-vtype"><function>e_cal_component_set_new_vtype()</function></link>.</para>
<variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly-created calendar component object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-new-from-string" role="function">
<title>e_cal_component_new_from_string ()</title>
<indexterm zone="e-cal-component-new-from-string"><primary>e_cal_component_new_from_string</primary></indexterm>
<programlisting><link linkend="ECalComponent"><returnvalue>ECalComponent</returnvalue></link> *     e_cal_component_new_from_string     (<parameter>const <link linkend="gchar"><type>gchar</type></link> *calobj</parameter>);</programlisting>
<para>
Creates a new calendar component object from the given iCalendar string.</para>
<variablelist role="params">
<varlistentry><term><parameter>calobj</parameter>&#160;:</term>
<listitem><simpara>A string representation of an iCalendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A calendar component representing the given iCalendar string on
success, NULL if there was an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-clone" role="function">
<title>e_cal_component_clone ()</title>
<indexterm zone="e-cal-component-clone"><primary>e_cal_component_clone</primary></indexterm>
<programlisting><link linkend="ECalComponent"><returnvalue>ECalComponent</returnvalue></link> *     e_cal_component_clone               (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Creates a new calendar component object by copying the information from
another one.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly-created calendar component with the same values as the
original one.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-new-vtype" role="function">
<title>e_cal_component_set_new_vtype ()</title>
<indexterm zone="e-cal-component-set-new-vtype"><primary>e_cal_component_set_new_vtype</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_new_vtype       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentVType"><type>ECalComponentVType</type></link> type</parameter>);</programlisting>
<para>
Clears any existing component data from a calendar component object and
creates a new <link linkend="icalcomponent"><type>icalcomponent</type></link> of the specified type for it.  The only property
that will be set in the new component will be its unique identifier.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>Type of calendar component to create.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-icalcomponent" role="function">
<title>e_cal_component_set_icalcomponent ()</title>
<indexterm zone="e-cal-component-set-icalcomponent"><primary>e_cal_component_set_icalcomponent</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_set_icalcomponent   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="icalcomponent"><type>icalcomponent</type></link> *icalcomp</parameter>);</programlisting>
<para>
Sets the contents of a calendar component object from an <link linkend="icalcomponent"><type>icalcomponent</type></link>
structure.  If the <parameter>comp</parameter> already had an <link linkend="icalcomponent"><type>icalcomponent</type></link> set into it, it will
will be freed automatically if the <link linkend="icalcomponent"><type>icalcomponent</type></link> does not have a parent
component itself.
</para>
<para>
Supported component types are VEVENT, VTODO, VJOURNAL, VFREEBUSY, and VTIMEZONE.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icalcomp</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="icalcomponent"><type>icalcomponent</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE on success, FALSE if <parameter>icalcomp</parameter> is an unsupported component
type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-icalcomponent" role="function">
<title>e_cal_component_get_icalcomponent ()</title>
<indexterm zone="e-cal-component-get-icalcomponent"><primary>e_cal_component_get_icalcomponent</primary></indexterm>
<programlisting><link linkend="icalcomponent"><returnvalue>icalcomponent</returnvalue></link> *     e_cal_component_get_icalcomponent   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries the <link linkend="icalcomponent"><type>icalcomponent</type></link> structure that a calendar component object is
wrapping.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> An <link linkend="icalcomponent"><type>icalcomponent</type></link> structure, or NULL if the <parameter>comp</parameter> has no
<link linkend="icalcomponent"><type>icalcomponent</type></link> set to it.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-rescan" role="function">
<title>e_cal_component_rescan ()</title>
<indexterm zone="e-cal-component-rescan"><primary>e_cal_component_rescan</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_rescan              (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Rescans the <link linkend="icalcomponent"><type>icalcomponent</type></link> being wrapped by the given calendar component. This
would replace any value that was changed in the wrapped <link linkend="icalcomponent"><type>icalcomponent</type></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-strip-errors" role="function">
<title>e_cal_component_strip_errors ()</title>
<indexterm zone="e-cal-component-strip-errors"><primary>e_cal_component_strip_errors</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_strip_errors        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Strips all error messages from the calendar component. Those error messages are
added to the iCalendar string representation whenever an invalid is used for
one of its fields.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-vtype" role="function">
<title>e_cal_component_get_vtype ()</title>
<indexterm zone="e-cal-component-get-vtype"><primary>e_cal_component_get_vtype</primary></indexterm>
<programlisting><link linkend="ECalComponentVType"><returnvalue>ECalComponentVType</returnvalue></link>  e_cal_component_get_vtype           (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries the type of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The type of the component, as defined by RFC 2445.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-as-string" role="function">
<title>e_cal_component_get_as_string ()</title>
<indexterm zone="e-cal-component-get-as-string"><primary>e_cal_component_get_as_string</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_cal_component_get_as_string       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Gets the iCalendar string representation of a calendar component.  You should
call <link linkend="e-cal-component-commit-sequence"><function>e_cal_component_commit_sequence()</function></link> before this function to ensure that the
component's sequence number is consistent with the state of the object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> String representation of the calendar component according to
RFC 2445.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-commit-sequence" role="function">
<title>e_cal_component_commit_sequence ()</title>
<indexterm zone="e-cal-component-commit-sequence"><primary>e_cal_component_commit_sequence</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_commit_sequence     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Increments the sequence number property in a calendar component object if it
needs it.  This needs to be done when any of a number of properties listed in
RFC 2445 change values, such as the start and end dates of a component.
</para>
<para>
This function must be called before calling <link linkend="e-cal-component-get-as-string"><function>e_cal_component_get_as_string()</function></link> to
ensure that the component is fully consistent.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-abort-sequence" role="function">
<title>e_cal_component_abort_sequence ()</title>
<indexterm zone="e-cal-component-abort-sequence"><primary>e_cal_component_abort_sequence</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_abort_sequence      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Aborts the sequence change needed in the given calendar component, which
means it will not require a sequence commit (via <link linkend="e-cal-component-commit-sequence"><type>e_cal_component_commit_sequence</type></link>)
even if the changes done require a sequence increment.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-uid" role="function">
<title>e_cal_component_get_uid ()</title>
<indexterm zone="e-cal-component-get-uid"><primary>e_cal_component_get_uid</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_uid             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> **uid</parameter>);</programlisting>
<para>
Queries the unique identifier of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>Return value for the UID string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-uid" role="function">
<title>e_cal_component_set_uid ()</title>
<indexterm zone="e-cal-component-set-uid"><primary>e_cal_component_set_uid</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_uid             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uid</parameter>);</programlisting>
<para>
Sets the unique identifier string of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&#160;:</term>
<listitem><simpara>Unique identifier.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-id" role="function">
<title>e_cal_component_get_id ()</title>
<indexterm zone="e-cal-component-get-id"><primary>e_cal_component_get_id</primary></indexterm>
<programlisting><link linkend="ECalComponentId"><returnvalue>ECalComponentId</returnvalue></link> *   e_cal_component_get_id              (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Get the ID of the component as a <link linkend="ECalComponentId"><type>ECalComponentId</type></link>.  The return value should
be freed with <link linkend="e-cal-component-free-id"><function>e_cal_component_free_id()</function></link> when you have finished with it.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the id of the component
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-id" role="function">
<title>e_cal_component_free_id ()</title>
<indexterm zone="e-cal-component-free-id"><primary>e_cal_component_free_id</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_id             (<parameter><link linkend="ECalComponentId"><type>ECalComponentId</type></link> *id</parameter>);</programlisting>
<para>
Frees the id.</para>
<variablelist role="params">
<varlistentry><term><parameter>id</parameter>&#160;:</term>
<listitem><simpara>Component ID
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-categories" role="function">
<title>e_cal_component_get_categories ()</title>
<indexterm zone="e-cal-component-get-categories"><primary>e_cal_component_get_categories</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_categories      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> **categories</parameter>);</programlisting>
<para>
Queries the categories of the given calendar component. The categories
are returned in the <parameter>categories</parameter> argument, which, on success, will contain
a comma-separated list of all categories set in the component.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categories</parameter>&#160;:</term>
<listitem><simpara>Return holder for the categories.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-categories" role="function">
<title>e_cal_component_set_categories ()</title>
<indexterm zone="e-cal-component-set-categories"><primary>e_cal_component_set_categories</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_categories      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *categories</parameter>);</programlisting>
<para>
Sets the list of categories for a calendar component.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categories</parameter>&#160;:</term>
<listitem><simpara>Comma-separated list of categories.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-categories-list" role="function">
<title>e_cal_component_get_categories_list ()</title>
<indexterm zone="e-cal-component-get-categories-list"><primary>e_cal_component_get_categories_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_categories_list (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **categ_list</parameter>);</programlisting>
<para>
Queries the list of categories of a calendar component object.  Each element
in the returned categ_list is a string with the corresponding category.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categ_list</parameter>&#160;:</term>
<listitem><simpara>Return value for the list of strings, where each string is a
category. This should be freed using <link linkend="e-cal-component-free-categories-list"><function>e_cal_component_free_categories_list()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-categories-list" role="function">
<title>e_cal_component_set_categories_list ()</title>
<indexterm zone="e-cal-component-set-categories-list"><primary>e_cal_component_set_categories_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_categories_list (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *categ_list</parameter>);</programlisting>
<para>
Sets the list of categories of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categ_list</parameter>&#160;:</term>
<listitem><simpara>List of strings, one for each category.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-classification" role="function">
<title>e_cal_component_get_classification ()</title>
<indexterm zone="e-cal-component-get-classification"><primary>e_cal_component_get_classification</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_classification  (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentClassification"><type>ECalComponentClassification</type></link> *classif</parameter>);</programlisting>
<para>
Queries the classification of a calendar component object.  If the
classification property is not set on this component, this function returns
<link linkend="E-CAL-COMPONENT-CLASS-NONE:CAPS"><type>E_CAL_COMPONENT_CLASS_NONE</type></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>classif</parameter>&#160;:</term>
<listitem><simpara>Return value for the classification.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-classification" role="function">
<title>e_cal_component_set_classification ()</title>
<indexterm zone="e-cal-component-set-classification"><primary>e_cal_component_set_classification</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_classification  (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentClassification"><type>ECalComponentClassification</type></link> classif</parameter>);</programlisting>
<para>
Sets the classification property of a calendar component object.  To unset
the property, specify E_CAL_COMPONENT_CLASS_NONE for <parameter>classif</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>classif</parameter>&#160;:</term>
<listitem><simpara>Classification to use.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-comment-list" role="function">
<title>e_cal_component_get_comment_list ()</title>
<indexterm zone="e-cal-component-get-comment-list"><primary>e_cal_component_get_comment_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_comment_list    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **text_list</parameter>);</programlisting>
<para>
Queries the comments of a calendar component object.  The comment property can
appear several times inside a calendar component, and so a list of
<link linkend="ECalComponentText"><type>ECalComponentText</type></link> is returned.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&#160;:</term>
<listitem><simpara>Return value for the comment properties and their parameters, as
a list of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-text-list"><function>e_cal_component_free_text_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-comment-list" role="function">
<title>e_cal_component_set_comment_list ()</title>
<indexterm zone="e-cal-component-set-comment-list"><primary>e_cal_component_set_comment_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_comment_list    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *text_list</parameter>);</programlisting>
<para>
Sets the comments of a calendar component object.  The comment property can
appear several times inside a calendar component, and so a list of
<link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures is used.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&#160;:</term>
<listitem><simpara>List of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-completed" role="function">
<title>e_cal_component_get_completed ()</title>
<indexterm zone="e-cal-component-get-completed"><primary>e_cal_component_get_completed</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_completed       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> **t</parameter>);</programlisting>
<para>
Queries the date at which a calendar compoment object was completed.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>Return value for the completion date.  This should be freed using the
<link linkend="e-cal-component-free-icaltimetype"><function>e_cal_component_free_icaltimetype()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-completed" role="function">
<title>e_cal_component_set_completed ()</title>
<indexterm zone="e-cal-component-set-completed"><primary>e_cal_component_set_completed</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_completed       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);</programlisting>
<para>
Sets the date at which a calendar component object was completed.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>Value for the completion date.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-contact-list" role="function">
<title>e_cal_component_get_contact_list ()</title>
<indexterm zone="e-cal-component-get-contact-list"><primary>e_cal_component_get_contact_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_contact_list    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **text_list</parameter>);</programlisting>
<para>
Queries the contact of a calendar component object.  The contact property can
appear several times inside a calendar component, and so a list of
<link linkend="ECalComponentText"><type>ECalComponentText</type></link> is returned.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&#160;:</term>
<listitem><simpara>Return value for the contact properties and their parameters, as
a list of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-text-list"><function>e_cal_component_free_text_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-contact-list" role="function">
<title>e_cal_component_set_contact_list ()</title>
<indexterm zone="e-cal-component-set-contact-list"><primary>e_cal_component_set_contact_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_contact_list    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *text_list</parameter>);</programlisting>
<para>
Sets the contact of a calendar component object.  The contact property can
appear several times inside a calendar component, and so a list of
<link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures is used.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&#160;:</term>
<listitem><simpara>List of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-created" role="function">
<title>e_cal_component_get_created ()</title>
<indexterm zone="e-cal-component-get-created"><primary>e_cal_component_get_created</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_created         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> **t</parameter>);</programlisting>
<para>
Queries the date in which a calendar component object was created in the
calendar store.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>Return value for the creation date.  This should be freed using the
<link linkend="e-cal-component-free-icaltimetype"><function>e_cal_component_free_icaltimetype()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-created" role="function">
<title>e_cal_component_set_created ()</title>
<indexterm zone="e-cal-component-set-created"><primary>e_cal_component_set_created</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_created         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);</programlisting>
<para>
Sets the date in which a calendar component object is created in the calendar
store.  This should only be used inside a calendar store application, i.e.
not by calendar user agents.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>Value for the creation date.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-description-list" role="function">
<title>e_cal_component_get_description_list ()</title>
<indexterm zone="e-cal-component-get-description-list"><primary>e_cal_component_get_description_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_description_list
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **text_list</parameter>);</programlisting>
<para>
Queries the description of a calendar component object.  Journal components
may have more than one description, and as such this function returns a list
of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  All other types of components can have at
most one description.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&#160;:</term>
<listitem><simpara>Return value for the description properties and their parameters,
as a list of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-text-list"><function>e_cal_component_free_text_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-description-list" role="function">
<title>e_cal_component_set_description_list ()</title>
<indexterm zone="e-cal-component-set-description-list"><primary>e_cal_component_set_description_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_description_list
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *text_list</parameter>);</programlisting>
<para>
Sets the description of a calendar component object.  Journal components may
have more than one description, and as such this function takes in a list of
<link linkend="ECalComponentDescription"><type>ECalComponentDescription</type></link> structures.  All other types of components can have
at most one description.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&#160;:</term>
<listitem><simpara>List of <link linkend="ECalComponentSummary"><type>ECalComponentSummary</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-dtend" role="function">
<title>e_cal_component_get_dtend ()</title>
<indexterm zone="e-cal-component-get-dtend"><primary>e_cal_component_get_dtend</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_dtend           (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);</programlisting>
<para>
Queries the date/time end of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&#160;:</term>
<listitem><simpara>Return value for the date/time end.  This should be freed with the
<link linkend="e-cal-component-free-datetime"><function>e_cal_component_free_datetime()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-dtend" role="function">
<title>e_cal_component_set_dtend ()</title>
<indexterm zone="e-cal-component-set-dtend"><primary>e_cal_component_set_dtend</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_dtend           (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);</programlisting>
<para>
Sets the date/time end property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&#160;:</term>
<listitem><simpara>End date/time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-dtstamp" role="function">
<title>e_cal_component_get_dtstamp ()</title>
<indexterm zone="e-cal-component-get-dtstamp"><primary>e_cal_component_get_dtstamp</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_dtstamp         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);</programlisting>
<para>
Queries the date/timestamp property of a calendar component object, which is
the last time at which the object was modified by a calendar user agent.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>A value for the date/timestamp.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-dtstamp" role="function">
<title>e_cal_component_set_dtstamp ()</title>
<indexterm zone="e-cal-component-set-dtstamp"><primary>e_cal_component_set_dtstamp</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_dtstamp         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);</programlisting>
<para>
Sets the date/timestamp of a calendar component object.  This should be
called whenever a calendar user agent makes a change to a component's
properties.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>Date/timestamp value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-dtstart" role="function">
<title>e_cal_component_get_dtstart ()</title>
<indexterm zone="e-cal-component-get-dtstart"><primary>e_cal_component_get_dtstart</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_dtstart         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);</programlisting>
<para>
Queries the date/time start of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&#160;:</term>
<listitem><simpara>Return value for the date/time start.  This should be freed with the
<link linkend="e-cal-component-free-datetime"><function>e_cal_component_free_datetime()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-dtstart" role="function">
<title>e_cal_component_set_dtstart ()</title>
<indexterm zone="e-cal-component-set-dtstart"><primary>e_cal_component_set_dtstart</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_dtstart         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);</programlisting>
<para>
Sets the date/time start property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&#160;:</term>
<listitem><simpara>Start date/time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-due" role="function">
<title>e_cal_component_get_due ()</title>
<indexterm zone="e-cal-component-get-due"><primary>e_cal_component_get_due</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_due             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);</programlisting>
<para>
Queries the due date/time of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&#160;:</term>
<listitem><simpara>Return value for the due date/time.  This should be freed with the
<link linkend="e-cal-component-free-datetime"><function>e_cal_component_free_datetime()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-due" role="function">
<title>e_cal_component_set_due ()</title>
<indexterm zone="e-cal-component-set-due"><primary>e_cal_component_set_due</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_due             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);</programlisting>
<para>
Sets the due date/time property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&#160;:</term>
<listitem><simpara>End date/time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-exdate-list" role="function">
<title>e_cal_component_get_exdate_list ()</title>
<indexterm zone="e-cal-component-get-exdate-list"><primary>e_cal_component_get_exdate_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_exdate_list     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **exdate_list</parameter>);</programlisting>
<para>
Queries the list of exception date properties in a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>exdate_list</parameter>&#160;:</term>
<listitem><simpara>Return value for the list of exception dates, as a list of
<link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-exdate-list"><function>e_cal_component_free_exdate_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-exdate-list" role="function">
<title>e_cal_component_set_exdate_list ()</title>
<indexterm zone="e-cal-component-set-exdate-list"><primary>e_cal_component_set_exdate_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_exdate_list     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *exdate_list</parameter>);</programlisting>
<para>
Sets the list of exception dates in a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>exdate_list</parameter>&#160;:</term>
<listitem><simpara>List of <link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-exdates" role="function">
<title>e_cal_component_has_exdates ()</title>
<indexterm zone="e-cal-component-has-exdates"><primary>e_cal_component_has_exdates</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_exdates         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries whether a calendar component object has any exception dates defined
for it.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the component has exception dates, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-exrule-list" role="function">
<title>e_cal_component_get_exrule_list ()</title>
<indexterm zone="e-cal-component-get-exrule-list"><primary>e_cal_component_get_exrule_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_exrule_list     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **recur_list</parameter>);</programlisting>
<para>
Queries the list of exception rule properties of a calendar component
object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&#160;:</term>
<listitem><simpara>List of exception rules as struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link>
structures.  This should be freed using the <link linkend="e-cal-component-free-recur-list"><function>e_cal_component_free_recur_list()</function></link>
function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-exrule-property-list" role="function">
<title>e_cal_component_get_exrule_property_list ()</title>
<indexterm zone="e-cal-component-get-exrule-property-list"><primary>e_cal_component_get_exrule_property_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_exrule_property_list
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **recur_list</parameter>);</programlisting>
<para>
Queries the list of exception rule properties of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&#160;:</term>
<listitem><simpara>Returns a list of exception rule properties.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-exrule-list" role="function">
<title>e_cal_component_set_exrule_list ()</title>
<indexterm zone="e-cal-component-set-exrule-list"><primary>e_cal_component_set_exrule_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_exrule_list     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *recur_list</parameter>);</programlisting>
<para>
Sets the list of exception rules in a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&#160;:</term>
<listitem><simpara>List of struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-exrules" role="function">
<title>e_cal_component_has_exrules ()</title>
<indexterm zone="e-cal-component-has-exrules"><primary>e_cal_component_has_exrules</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_exrules         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries whether a calendar component object has any exception rules defined
for it.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the component has exception rules, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-exceptions" role="function">
<title>e_cal_component_has_exceptions ()</title>
<indexterm zone="e-cal-component-has-exceptions"><primary>e_cal_component_has_exceptions</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_exceptions      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries whether a calendar component object has any exception dates
or exception rules.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the component has exceptions, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-geo" role="function">
<title>e_cal_component_get_geo ()</title>
<indexterm zone="e-cal-component-get-geo"><primary>e_cal_component_get_geo</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_geo             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icalgeotype</type> **geo</parameter>);</programlisting>
<para>
Gets the geographic position property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>geo</parameter>&#160;:</term>
<listitem><simpara>Return value for the geographic position property.  This should be
freed using the <link linkend="e-cal-component-free-geo"><function>e_cal_component_free_geo()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-geo" role="function">
<title>e_cal_component_set_geo ()</title>
<indexterm zone="e-cal-component-set-geo"><primary>e_cal_component_set_geo</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_geo             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icalgeotype</type> *geo</parameter>);</programlisting>
<para>
Sets the geographic position property on a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>geo</parameter>&#160;:</term>
<listitem><simpara>Value for the geographic position property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-last-modified" role="function">
<title>e_cal_component_get_last_modified ()</title>
<indexterm zone="e-cal-component-get-last-modified"><primary>e_cal_component_get_last_modified</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_last_modified   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> **t</parameter>);</programlisting>
<para>
Queries the time at which a calendar component object was last modified in
the calendar store.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>Return value for the last modified time value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-last-modified" role="function">
<title>e_cal_component_set_last_modified ()</title>
<indexterm zone="e-cal-component-set-last-modified"><primary>e_cal_component_set_last_modified</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_last_modified   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><type>struct icaltimetype</type> *t</parameter>);</programlisting>
<para>
Sets the time at which a calendar component object was last stored in the
calendar store.  This should not be called by plain calendar user agents.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>Value for the last time modified.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-organizer" role="function">
<title>e_cal_component_get_organizer ()</title>
<indexterm zone="e-cal-component-get-organizer"><primary>e_cal_component_get_organizer</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_organizer       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentOrganizer"><type>ECalComponentOrganizer</type></link> *organizer</parameter>);</programlisting>
<para>
Queries the organizer property of a calendar component object</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>organizer</parameter>&#160;:</term>
<listitem><simpara>A value for the organizer
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-organizer" role="function">
<title>e_cal_component_set_organizer ()</title>
<indexterm zone="e-cal-component-set-organizer"><primary>e_cal_component_set_organizer</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_organizer       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentOrganizer"><type>ECalComponentOrganizer</type></link> *organizer</parameter>);</programlisting>
<para>
Sets the organizer of a calendar component object</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>organizer</parameter>&#160;:</term>
<listitem><simpara>Value for the organizer property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-organizer" role="function">
<title>e_cal_component_has_organizer ()</title>
<indexterm zone="e-cal-component-has-organizer"><primary>e_cal_component_has_organizer</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_organizer       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Check whether a calendar component object has an organizer or not.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if there is an organizer, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-percent-as-int" role="function">
<title>e_cal_component_get_percent_as_int ()</title>
<indexterm zone="e-cal-component-get-percent-as-int"><primary>e_cal_component_get_percent_as_int</primary></indexterm>
<programlisting><link linkend="gint"><returnvalue>gint</returnvalue></link>                e_cal_component_get_percent_as_int  (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-percent-as-int" role="function">
<title>e_cal_component_set_percent_as_int ()</title>
<indexterm zone="e-cal-component-set-percent-as-int"><primary>e_cal_component_set_percent_as_int</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_percent_as_int  (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> percent</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>percent</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-percent" role="function">
<title>e_cal_component_get_percent ()</title>
<indexterm zone="e-cal-component-get-percent"><primary>e_cal_component_get_percent</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_percent         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> **percent</parameter>);</programlisting>
<para>
Queries the percent-complete property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>percent</parameter>&#160;:</term>
<listitem><simpara>Return value for the percent-complete property.  This should be
freed using the <link linkend="e-cal-component-free-percent"><function>e_cal_component_free_percent()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-percent" role="function">
<title>e_cal_component_set_percent ()</title>
<indexterm zone="e-cal-component-set-percent"><primary>e_cal_component_set_percent</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_percent         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *percent</parameter>);</programlisting>
<para>
Sets the percent-complete property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>percent</parameter>&#160;:</term>
<listitem><simpara>Value for the percent-complete property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-priority" role="function">
<title>e_cal_component_get_priority ()</title>
<indexterm zone="e-cal-component-get-priority"><primary>e_cal_component_get_priority</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_priority        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> **priority</parameter>);</programlisting>
<para>
Queries the priority property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>Return value for the priority property.  This should be freed using
the <link linkend="e-cal-component-free-priority"><function>e_cal_component_free_priority()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-priority" role="function">
<title>e_cal_component_set_priority ()</title>
<indexterm zone="e-cal-component-set-priority"><primary>e_cal_component_set_priority</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_priority        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *priority</parameter>);</programlisting>
<para>
Sets the priority property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>Value for the priority property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-recurid" role="function">
<title>e_cal_component_get_recurid ()</title>
<indexterm zone="e-cal-component-get-recurid"><primary>e_cal_component_get_recurid</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_recurid         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentRange"><type>ECalComponentRange</type></link> *recur_id</parameter>);</programlisting>
<para>
Queries the recurrence id property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_id</parameter>&#160;:</term>
<listitem><simpara>Return value for the recurrence id property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-recurid-as-string" role="function">
<title>e_cal_component_get_recurid_as_string ()</title>
<indexterm zone="e-cal-component-get-recurid-as-string"><primary>e_cal_component_get_recurid_as_string</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_cal_component_get_recurid_as_string
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Gets the recurrence ID property as a string.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the recurrence ID as a string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-recurid" role="function">
<title>e_cal_component_set_recurid ()</title>
<indexterm zone="e-cal-component-set-recurid"><primary>e_cal_component_set_recurid</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_recurid         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentRange"><type>ECalComponentRange</type></link> *recur_id</parameter>);</programlisting>
<para>
Sets the recurrence id property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_id</parameter>&#160;:</term>
<listitem><simpara>Value for the recurrence id property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-rdate-list" role="function">
<title>e_cal_component_get_rdate_list ()</title>
<indexterm zone="e-cal-component-get-rdate-list"><primary>e_cal_component_get_rdate_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_rdate_list      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **period_list</parameter>);</programlisting>
<para>
Queries the list of recurrence date properties in a calendar component
object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>period_list</parameter>&#160;:</term>
<listitem><simpara>Return value for the list of recurrence dates, as a list of
<link linkend="ECalComponentPeriod"><type>ECalComponentPeriod</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-period-list"><function>e_cal_component_free_period_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-rdate-list" role="function">
<title>e_cal_component_set_rdate_list ()</title>
<indexterm zone="e-cal-component-set-rdate-list"><primary>e_cal_component_set_rdate_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_rdate_list      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *period_list</parameter>);</programlisting>
<para>
Sets the list of recurrence dates in a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>period_list</parameter>&#160;:</term>
<listitem><simpara>List of <link linkend="ECalComponentPeriod"><type>ECalComponentPeriod</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-rdates" role="function">
<title>e_cal_component_has_rdates ()</title>
<indexterm zone="e-cal-component-has-rdates"><primary>e_cal_component_has_rdates</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_rdates          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries whether a calendar component object has any recurrence dates defined
for it.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the component has recurrence dates, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-rrule-list" role="function">
<title>e_cal_component_get_rrule_list ()</title>
<indexterm zone="e-cal-component-get-rrule-list"><primary>e_cal_component_get_rrule_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_rrule_list      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **recur_list</parameter>);</programlisting>
<para>
Queries the list of recurrence rule properties of a calendar component
object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&#160;:</term>
<listitem><simpara>List of recurrence rules as struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link>
structures.  This should be freed using the <link linkend="e-cal-component-free-recur-list"><function>e_cal_component_free_recur_list()</function></link>
function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-rrule-property-list" role="function">
<title>e_cal_component_get_rrule_property_list ()</title>
<indexterm zone="e-cal-component-get-rrule-property-list"><primary>e_cal_component_get_rrule_property_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_rrule_property_list
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **recur_list</parameter>);</programlisting>
<para>
Queries a list of recurrence rule properties of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&#160;:</term>
<listitem><simpara>Returns a list of recurrence rule properties.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-rrule-list" role="function">
<title>e_cal_component_set_rrule_list ()</title>
<indexterm zone="e-cal-component-set-rrule-list"><primary>e_cal_component_set_rrule_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_rrule_list      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *recur_list</parameter>);</programlisting>
<para>
Sets the list of recurrence rules in a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&#160;:</term>
<listitem><simpara>List of struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-rrules" role="function">
<title>e_cal_component_has_rrules ()</title>
<indexterm zone="e-cal-component-has-rrules"><primary>e_cal_component_has_rrules</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_rrules          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries whether a calendar component object has any recurrence rules defined
for it.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the component has recurrence rules, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-recurrences" role="function">
<title>e_cal_component_has_recurrences ()</title>
<indexterm zone="e-cal-component-has-recurrences"><primary>e_cal_component_has_recurrences</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_recurrences     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries whether a calendar component object has any recurrence dates or
recurrence rules.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the component has recurrences, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-simple-recurrence" role="function">
<title>e_cal_component_has_simple_recurrence ()</title>
<indexterm zone="e-cal-component-has-simple-recurrence"><primary>e_cal_component_has_simple_recurrence</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_simple_recurrence
                                                        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Checks whether the given calendar component object has simple recurrence
rules or more complicated ones.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if it has a simple recurrence rule, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-is-instance" role="function">
<title>e_cal_component_is_instance ()</title>
<indexterm zone="e-cal-component-is-instance"><primary>e_cal_component_is_instance</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_is_instance         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Checks whether a calendar component object is an instance of a recurring
event.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if it is an instance, FALSE if not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-sequence" role="function">
<title>e_cal_component_get_sequence ()</title>
<indexterm zone="e-cal-component-get-sequence"><primary>e_cal_component_get_sequence</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_sequence        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> **sequence</parameter>);</programlisting>
<para>
Queries the sequence number of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sequence</parameter>&#160;:</term>
<listitem><simpara>Return value for the sequence number.  This should be freed using
<link linkend="e-cal-component-free-sequence"><function>e_cal_component_free_sequence()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-sequence" role="function">
<title>e_cal_component_set_sequence ()</title>
<indexterm zone="e-cal-component-set-sequence"><primary>e_cal_component_set_sequence</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_sequence        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="gint"><type>gint</type></link> *sequence</parameter>);</programlisting>
<para>
Sets the sequence number of a calendar component object.  Normally this
function should not be called, since the sequence number is incremented
automatically at the proper times.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sequence</parameter>&#160;:</term>
<listitem><simpara>Sequence number value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-status" role="function">
<title>e_cal_component_get_status ()</title>
<indexterm zone="e-cal-component-get-status"><primary>e_cal_component_get_status</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_status          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="icalproperty-status"><type>icalproperty_status</type></link> *status</parameter>);</programlisting>
<para>
Queries the status property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara>Return value for the status value.  It is set to <link linkend="ICAL-STATUS-NONE:CAPS"><type>ICAL_STATUS_NONE</type></link>
if the component has no status property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-status" role="function">
<title>e_cal_component_set_status ()</title>
<indexterm zone="e-cal-component-set-status"><primary>e_cal_component_set_status</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_status          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="icalproperty-status"><type>icalproperty_status</type></link> status</parameter>);</programlisting>
<para>
Sets the status property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>status</parameter>&#160;:</term>
<listitem><simpara>Status value.  You should use <link linkend="ICAL-STATUS-NONE:CAPS"><type>ICAL_STATUS_NONE</type></link> if you want to unset
this property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-summary" role="function">
<title>e_cal_component_get_summary ()</title>
<indexterm zone="e-cal-component-get-summary"><primary>e_cal_component_get_summary</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_summary         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentText"><type>ECalComponentText</type></link> *summary</parameter>);</programlisting>
<para>
Queries the summary of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>summary</parameter>&#160;:</term>
<listitem><simpara>Return value for the summary property and its parameters.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-summary" role="function">
<title>e_cal_component_set_summary ()</title>
<indexterm zone="e-cal-component-set-summary"><primary>e_cal_component_set_summary</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_summary         (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentText"><type>ECalComponentText</type></link> *summary</parameter>);</programlisting>
<para>
Sets the summary of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>summary</parameter>&#160;:</term>
<listitem><simpara>Summary property and its parameters.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-transparency" role="function">
<title>e_cal_component_get_transparency ()</title>
<indexterm zone="e-cal-component-get-transparency"><primary>e_cal_component_get_transparency</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_transparency    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentTransparency"><type>ECalComponentTransparency</type></link> *transp</parameter>);</programlisting>
<para>
Queries the time transparency of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transp</parameter>&#160;:</term>
<listitem><simpara>Return value for the time transparency.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-transparency" role="function">
<title>e_cal_component_set_transparency ()</title>
<indexterm zone="e-cal-component-set-transparency"><primary>e_cal_component_set_transparency</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_transparency    (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentTransparency"><type>ECalComponentTransparency</type></link> transp</parameter>);</programlisting>
<para>
Sets the time transparency of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transp</parameter>&#160;:</term>
<listitem><simpara>Time transparency value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-url" role="function">
<title>e_cal_component_get_url ()</title>
<indexterm zone="e-cal-component-get-url"><primary>e_cal_component_get_url</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_url             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> **url</parameter>);</programlisting>
<para>
Queries the uniform resource locator property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>url</parameter>&#160;:</term>
<listitem><simpara>Return value for the URL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-url" role="function">
<title>e_cal_component_set_url ()</title>
<indexterm zone="e-cal-component-set-url"><primary>e_cal_component_set_url</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_url             (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *url</parameter>);</programlisting>
<para>
Sets the uniform resource locator property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>url</parameter>&#160;:</term>
<listitem><simpara>URL value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-attendee-list" role="function">
<title>e_cal_component_get_attendee_list ()</title>
<indexterm zone="e-cal-component-get-attendee-list"><primary>e_cal_component_get_attendee_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_attendee_list   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **attendee_list</parameter>);</programlisting>
<para>
Queries the attendee properties of the calendar component object</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attendee_list</parameter>&#160;:</term>
<listitem><simpara>Return value for the attendee property.
This should be freed using the <link linkend="e-cal-component-free-attendee-list"><function>e_cal_component_free_attendee_list()</function></link>
function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-attendee-list" role="function">
<title>e_cal_component_set_attendee_list ()</title>
<indexterm zone="e-cal-component-set-attendee-list"><primary>e_cal_component_set_attendee_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_attendee_list   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *attendee_list</parameter>);</programlisting>
<para>
Sets the attendees of a calendar component object</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attendee_list</parameter>&#160;:</term>
<listitem><simpara>Values for attendee properties
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-attendees" role="function">
<title>e_cal_component_has_attendees ()</title>
<indexterm zone="e-cal-component-has-attendees"><primary>e_cal_component_has_attendees</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_attendees       (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries a calendar component object for the existence of attendees.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if there are attendees, FALSE if not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-location" role="function">
<title>e_cal_component_get_location ()</title>
<indexterm zone="e-cal-component-get-location"><primary>e_cal_component_get_location</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_location        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> **location</parameter>);</programlisting>
<para>
Queries the location property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>location</parameter>&#160;:</term>
<listitem><simpara>Return value for the location.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-location" role="function">
<title>e_cal_component_set_location ()</title>
<indexterm zone="e-cal-component-set-location"><primary>e_cal_component_set_location</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_location        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *location</parameter>);</programlisting>
<para>
Sets the location property of a calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>location</parameter>&#160;:</term>
<listitem><simpara>Location value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-attachment-list" role="function">
<title>e_cal_component_get_attachment_list ()</title>
<indexterm zone="e-cal-component-get-attachment-list"><primary>e_cal_component_get_attachment_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_get_attachment_list (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **attachment_list</parameter>);</programlisting>
<para>
Queries the attachment properties of the calendar component object. When done,
the <parameter>attachment_list</parameter> should be freed by calling <link linkend="g-slist-free"><type>g_slist_free</type></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attachment_list</parameter>&#160;:</term>
<listitem><simpara>Return list of URLS to attachments.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-set-attachment-list" role="function">
<title>e_cal_component_set_attachment_list ()</title>
<indexterm zone="e-cal-component-set-attachment-list"><primary>e_cal_component_set_attachment_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_set_attachment_list (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *attachment_list</parameter>);</programlisting>
<para>
This currently handles only attachments that are urls
in the file system - not inline binaries.
</para>
<para>
Sets the attachments of a calendar component object</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attachment_list</parameter>&#160;:</term>
<listitem><simpara>list of urls to attachment pointers.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-has-attachments" role="function">
<title>e_cal_component_has_attachments ()</title>
<indexterm zone="e-cal-component-has-attachments"><primary>e_cal_component_has_attachments</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_attachments     (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Queries the component to see if it has attachments.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if there are attachments, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-num-attachments" role="function">
<title>e_cal_component_get_num_attachments ()</title>
<indexterm zone="e-cal-component-get-num-attachments"><primary>e_cal_component_get_num_attachments</primary></indexterm>
<programlisting><link linkend="gint"><returnvalue>gint</returnvalue></link>                e_cal_component_get_num_attachments (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Get the number of attachments to this calendar component object.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the number of attachments.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-event-dates-match" role="function">
<title>e_cal_component_event_dates_match ()</title>
<indexterm zone="e-cal-component-event-dates-match"><primary>e_cal_component_event_dates_match</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_event_dates_match   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp1</parameter>,
                                                         <parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp2</parameter>);</programlisting>
<para>
Checks if the DTSTART and DTEND properties of the 2 components match.
Note that the events may have different recurrence properties which are not
taken into account here.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp1</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>comp2</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the DTSTART and DTEND properties of the 2 components match.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-categories-list" role="function">
<title>e_cal_component_free_categories_list ()</title>
<indexterm zone="e-cal-component-free-categories-list"><primary>e_cal_component_free_categories_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_categories_list
                                                        (<parameter><link linkend="GSList"><type>GSList</type></link> *categ_list</parameter>);</programlisting>
<para>
Frees a list of category strings.</para>
<variablelist role="params">
<varlistentry><term><parameter>categ_list</parameter>&#160;:</term>
<listitem><simpara>List of category strings.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-datetime" role="function">
<title>e_cal_component_free_datetime ()</title>
<indexterm zone="e-cal-component-free-datetime"><primary>e_cal_component_free_datetime</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_datetime       (<parameter><link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> *dt</parameter>);</programlisting>
<para>
Frees a date/time structure.</para>
<variablelist role="params">
<varlistentry><term><parameter>dt</parameter>&#160;:</term>
<listitem><simpara>A date/time structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-range" role="function">
<title>e_cal_component_free_range ()</title>
<indexterm zone="e-cal-component-free-range"><primary>e_cal_component_free_range</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_range          (<parameter><link linkend="ECalComponentRange"><type>ECalComponentRange</type></link> *range</parameter>);</programlisting>
<para>
Frees an <link linkend="ECalComponentRange"><type>ECalComponentRange</type></link> structure.</para>
<variablelist role="params">
<varlistentry><term><parameter>range</parameter>&#160;:</term>
<listitem><simpara>A <link linkend="ECalComponentRange"><type>ECalComponentRange</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-exdate-list" role="function">
<title>e_cal_component_free_exdate_list ()</title>
<indexterm zone="e-cal-component-free-exdate-list"><primary>e_cal_component_free_exdate_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_exdate_list    (<parameter><link linkend="GSList"><type>GSList</type></link> *exdate_list</parameter>);</programlisting>
<para>
Frees a list of <link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> structures as returned by the
<link linkend="e-cal-component-get-exdate-list"><function>e_cal_component_get_exdate_list()</function></link> function.</para>
<variablelist role="params">
<varlistentry><term><parameter>exdate_list</parameter>&#160;:</term>
<listitem><simpara>List of <link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-geo" role="function">
<title>e_cal_component_free_geo ()</title>
<indexterm zone="e-cal-component-free-geo"><primary>e_cal_component_free_geo</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_geo            (<parameter><type>struct icalgeotype</type> *geo</parameter>);</programlisting>
<para>
Frees a struct <link linkend="icalgeotype"><type>icalgeotype</type></link> structure as returned by the calendar component
functions.</para>
<variablelist role="params">
<varlistentry><term><parameter>geo</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="icalgeotype"><type>icalgeotype</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-icaltimetype" role="function">
<title>e_cal_component_free_icaltimetype ()</title>
<indexterm zone="e-cal-component-free-icaltimetype"><primary>e_cal_component_free_icaltimetype</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_icaltimetype   (<parameter><type>struct icaltimetype</type> *t</parameter>);</programlisting>
<para>
Frees a struct <link linkend="icaltimetype"><type>icaltimetype</type></link> value as returned by the calendar component
functions.</para>
<variablelist role="params">
<varlistentry><term><parameter>t</parameter>&#160;:</term>
<listitem><simpara>An <link linkend="icaltimetype"><type>icaltimetype</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-percent" role="function">
<title>e_cal_component_free_percent ()</title>
<indexterm zone="e-cal-component-free-percent"><primary>e_cal_component_free_percent</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_percent        (<parameter><link linkend="gint"><type>gint</type></link> *percent</parameter>);</programlisting>
<para>
Frees a percent value as returned by the <link linkend="e-cal-component-get-percent"><function>e_cal_component_get_percent()</function></link>
function.</para>
<variablelist role="params">
<varlistentry><term><parameter>percent</parameter>&#160;:</term>
<listitem><simpara>Percent value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-priority" role="function">
<title>e_cal_component_free_priority ()</title>
<indexterm zone="e-cal-component-free-priority"><primary>e_cal_component_free_priority</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_priority       (<parameter><link linkend="gint"><type>gint</type></link> *priority</parameter>);</programlisting>
<para>
Frees a priority value as returned by the <link linkend="e-cal-component-get-priority"><function>e_cal_component_get_priority()</function></link>
function.</para>
<variablelist role="params">
<varlistentry><term><parameter>priority</parameter>&#160;:</term>
<listitem><simpara>Priority value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-period-list" role="function">
<title>e_cal_component_free_period_list ()</title>
<indexterm zone="e-cal-component-free-period-list"><primary>e_cal_component_free_period_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_period_list    (<parameter><link linkend="GSList"><type>GSList</type></link> *period_list</parameter>);</programlisting>
<para>
Frees a list of <link linkend="ECalComponentPeriod"><type>ECalComponentPeriod</type></link> structures.</para>
<variablelist role="params">
<varlistentry><term><parameter>period_list</parameter>&#160;:</term>
<listitem><simpara>List of <link linkend="ECalComponentPeriod"><type>ECalComponentPeriod</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-recur-list" role="function">
<title>e_cal_component_free_recur_list ()</title>
<indexterm zone="e-cal-component-free-recur-list"><primary>e_cal_component_free_recur_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_recur_list     (<parameter><link linkend="GSList"><type>GSList</type></link> *recur_list</parameter>);</programlisting>
<para>
Frees a list of struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link> structures.</para>
<variablelist role="params">
<varlistentry><term><parameter>recur_list</parameter>&#160;:</term>
<listitem><simpara>List of struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-sequence" role="function">
<title>e_cal_component_free_sequence ()</title>
<indexterm zone="e-cal-component-free-sequence"><primary>e_cal_component_free_sequence</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_sequence       (<parameter><link linkend="gint"><type>gint</type></link> *sequence</parameter>);</programlisting>
<para>
Frees a sequence number value.</para>
<variablelist role="params">
<varlistentry><term><parameter>sequence</parameter>&#160;:</term>
<listitem><simpara>Sequence number value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-text-list" role="function">
<title>e_cal_component_free_text_list ()</title>
<indexterm zone="e-cal-component-free-text-list"><primary>e_cal_component_free_text_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_text_list      (<parameter><link linkend="GSList"><type>GSList</type></link> *text_list</parameter>);</programlisting>
<para>
Frees a list of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  This function should only be
used to free lists of text values as returned by the other getter functions
of <link linkend="ECalComponent"><type>ECalComponent</type></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>text_list</parameter>&#160;:</term>
<listitem><simpara>List of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-free-attendee-list" role="function">
<title>e_cal_component_free_attendee_list ()</title>
<indexterm zone="e-cal-component-free-attendee-list"><primary>e_cal_component_free_attendee_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_free_attendee_list  (<parameter><link linkend="GSList"><type>GSList</type></link> *attendee_list</parameter>);</programlisting>
<para>
Frees a list of <link linkend="ECalComponentAttendee"><type>ECalComponentAttendee</type></link> structures.</para>
<variablelist role="params">
<varlistentry><term><parameter>attendee_list</parameter>&#160;:</term>
<listitem><simpara>List of attendees.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="ECalComponentAlarm" role="struct">
<title>ECalComponentAlarm</title>
<indexterm zone="ECalComponentAlarm"><primary>ECalComponentAlarm</primary></indexterm>
<programlisting>typedef struct _ECalComponentAlarm ECalComponentAlarm;</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentAlarmInstance" role="struct">
<title>ECalComponentAlarmInstance</title>
<indexterm zone="ECalComponentAlarmInstance"><primary>ECalComponentAlarmInstance</primary></indexterm>
<programlisting>typedef struct {
	/* UID of the alarm that triggered */
	gchar *auid;

	/* Trigger time, i.e. "5 minutes before the appointment" */
	time_t trigger;

	/* Actual event occurrence to which this trigger corresponds */
	time_t occur_start;
	time_t occur_end;
} ECalComponentAlarmInstance;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentAlarms" role="struct">
<title>ECalComponentAlarms</title>
<indexterm zone="ECalComponentAlarms"><primary>ECalComponentAlarms</primary></indexterm>
<programlisting>typedef struct {
	/* The actual component */
	ECalComponent *comp;

	/* List of ECalComponentAlarmInstance structures */
	GSList *alarms;
} ECalComponentAlarms;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentAlarmAction" role="enum">
<title>enum ECalComponentAlarmAction</title>
<indexterm zone="ECalComponentAlarmAction"><primary>ECalComponentAlarmAction</primary></indexterm>
<programlisting>typedef enum {
	E_CAL_COMPONENT_ALARM_NONE,
	E_CAL_COMPONENT_ALARM_AUDIO,
	E_CAL_COMPONENT_ALARM_DISPLAY,
	E_CAL_COMPONENT_ALARM_EMAIL,
	E_CAL_COMPONENT_ALARM_PROCEDURE,
	E_CAL_COMPONENT_ALARM_UNKNOWN
} ECalComponentAlarmAction;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentAlarmTriggerType" role="enum">
<title>enum ECalComponentAlarmTriggerType</title>
<indexterm zone="ECalComponentAlarmTriggerType"><primary>ECalComponentAlarmTriggerType</primary></indexterm>
<programlisting>typedef enum {
	E_CAL_COMPONENT_ALARM_TRIGGER_NONE,
	E_CAL_COMPONENT_ALARM_TRIGGER_RELATIVE_START,
	E_CAL_COMPONENT_ALARM_TRIGGER_RELATIVE_END,
	E_CAL_COMPONENT_ALARM_TRIGGER_ABSOLUTE
} ECalComponentAlarmTriggerType;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentAlarmTrigger" role="struct">
<title>ECalComponentAlarmTrigger</title>
<indexterm zone="ECalComponentAlarmTrigger"><primary>ECalComponentAlarmTrigger</primary></indexterm>
<programlisting>typedef struct {
	ECalComponentAlarmTriggerType type;

	union {
		struct icaldurationtype rel_duration;
		struct icaltimetype abs_time;
	} u;
} ECalComponentAlarmTrigger;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="ECalComponentAlarmRepeat" role="struct">
<title>ECalComponentAlarmRepeat</title>
<indexterm zone="ECalComponentAlarmRepeat"><primary>ECalComponentAlarmRepeat</primary></indexterm>
<programlisting>typedef struct {
	/* Number of extra repetitions, zero for none */
	gint repetitions;

	/* Interval between repetitions */
	struct icaldurationtype duration;
} ECalComponentAlarmRepeat;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="e-cal-component-has-alarms" role="function">
<title>e_cal_component_has_alarms ()</title>
<indexterm zone="e-cal-component-has-alarms"><primary>e_cal_component_has_alarms</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_has_alarms          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Checks whether the component has any alarms.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the component has any alarms.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-add-alarm" role="function">
<title>e_cal_component_add_alarm ()</title>
<indexterm zone="e-cal-component-add-alarm"><primary>e_cal_component_add_alarm</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_add_alarm           (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);</programlisting>
<para>
Adds an alarm subcomponent to a calendar component.  You should have created
the <parameter>alarm</parameter> by using <link linkend="e-cal-component-alarm-new"><function>e_cal_component_alarm_new()</function></link>; it is invalid to use a
<link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> structure that came from <link linkend="e-cal-component-get-alarm"><function>e_cal_component_get_alarm()</function></link>.  After
adding the alarm, the <parameter>alarm</parameter> structure is no longer valid because the
internal structures may change and you should get rid of it by using
<link linkend="e-cal-component-alarm-free"><function>e_cal_component_alarm_free()</function></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-remove-alarm" role="function">
<title>e_cal_component_remove_alarm ()</title>
<indexterm zone="e-cal-component-remove-alarm"><primary>e_cal_component_remove_alarm</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_remove_alarm        (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *auid</parameter>);</programlisting>
<para>
Removes an alarm subcomponent from a calendar component.  If the alarm that
corresponds to the specified <parameter>auid</parameter> had been fetched with
<link linkend="e-cal-component-get-alarm"><function>e_cal_component_get_alarm()</function></link>, then those alarm structures will be invalid; you
should get rid of them with <link linkend="e-cal-component-alarm-free"><function>e_cal_component_alarm_free()</function></link> before using this
function.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>auid</parameter>&#160;:</term>
<listitem><simpara>UID of the alarm to remove.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-remove-all-alarms" role="function">
<title>e_cal_component_remove_all_alarms ()</title>
<indexterm zone="e-cal-component-remove-all-alarms"><primary>e_cal_component_remove_all_alarms</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_remove_all_alarms   (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Remove all alarms from the calendar component</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-alarm-uids" role="function">
<title>e_cal_component_get_alarm_uids ()</title>
<indexterm zone="e-cal-component-get-alarm-uids"><primary>e_cal_component_get_alarm_uids</primary></indexterm>
<programlisting><link linkend="GList"><returnvalue>GList</returnvalue></link> *             e_cal_component_get_alarm_uids      (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>);</programlisting>
<para>
Builds a list of the unique identifiers of the alarm subcomponents inside a
calendar component.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> List of unique identifiers for alarms.  This should be freed
using <link linkend="cal-obj-uid-list-free"><function>cal_obj_uid_list_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-get-alarm" role="function">
<title>e_cal_component_get_alarm ()</title>
<indexterm zone="e-cal-component-get-alarm"><primary>e_cal_component_get_alarm</primary></indexterm>
<programlisting><link linkend="ECalComponentAlarm"><returnvalue>ECalComponentAlarm</returnvalue></link> * e_cal_component_get_alarm          (<parameter><link linkend="ECalComponent"><type>ECalComponent</type></link> *comp</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *auid</parameter>);</programlisting>
<para>
Queries a particular alarm subcomponent of a calendar component.</para>
<variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&#160;:</term>
<listitem><simpara>A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>auid</parameter>&#160;:</term>
<listitem><simpara>Unique identifier for the sought alarm subcomponent.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The alarm subcomponent that corresponds to the specified <parameter>auid</parameter>,
or <link linkend="NULL:CAPS"><type>NULL</type></link> if no alarm exists with that UID.  This should be freed using
<link linkend="e-cal-component-alarm-free"><function>e_cal_component_alarm_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarms-free" role="function">
<title>e_cal_component_alarms_free ()</title>
<indexterm zone="e-cal-component-alarms-free"><primary>e_cal_component_alarms_free</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarms_free         (<parameter><link linkend="ECalComponentAlarms"><type>ECalComponentAlarms</type></link> *alarms</parameter>);</programlisting>
<para>
Frees a <link linkend="ECalComponentAlarms"><type>ECalComponentAlarms</type></link> structure.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarms</parameter>&#160;:</term>
<listitem><simpara>Component alarms structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-new" role="function">
<title>e_cal_component_alarm_new ()</title>
<indexterm zone="e-cal-component-alarm-new"><primary>e_cal_component_alarm_new</primary></indexterm>
<programlisting><link linkend="ECalComponentAlarm"><returnvalue>ECalComponentAlarm</returnvalue></link> * e_cal_component_alarm_new          (<parameter><type>void</type></parameter>);</programlisting>
<para>
Create a new alarm object.</para>
<variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new alarm component
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-clone" role="function">
<title>e_cal_component_alarm_clone ()</title>
<indexterm zone="e-cal-component-alarm-clone"><primary>e_cal_component_alarm_clone</primary></indexterm>
<programlisting><link linkend="ECalComponentAlarm"><returnvalue>ECalComponentAlarm</returnvalue></link> * e_cal_component_alarm_clone        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);</programlisting>
<para>
Creates a new alarm subcomponent by copying the information from another one.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm subcomponent.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A newly-created alarm subcomponent with the same values as the
original one.  Should be freed with <link linkend="e-cal-component-alarm-free"><function>e_cal_component_alarm_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-free" role="function">
<title>e_cal_component_alarm_free ()</title>
<indexterm zone="e-cal-component-alarm-free"><primary>e_cal_component_alarm_free</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_free          (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);</programlisting>
<para>
Frees an alarm structure.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>A calendar alarm.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-get-uid" role="function">
<title>e_cal_component_alarm_get_uid ()</title>
<indexterm zone="e-cal-component-alarm-get-uid"><primary>e_cal_component_alarm_get_uid</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       e_cal_component_alarm_get_uid       (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);</programlisting>
<para>
Queries the unique identifier of an alarm subcomponent.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm subcomponent.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> UID of the alarm.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-get-action" role="function">
<title>e_cal_component_alarm_get_action ()</title>
<indexterm zone="e-cal-component-alarm-get-action"><primary>e_cal_component_alarm_get_action</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_get_action    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmAction"><type>ECalComponentAlarmAction</type></link> *action</parameter>);</programlisting>
<para>
Queries the action type of an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>action</parameter>&#160;:</term>
<listitem><simpara>Return value for the alarm's action type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-set-action" role="function">
<title>e_cal_component_alarm_set_action ()</title>
<indexterm zone="e-cal-component-alarm-set-action"><primary>e_cal_component_alarm_set_action</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_set_action    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmAction"><type>ECalComponentAlarmAction</type></link> action</parameter>);</programlisting>
<para>
Sets the action type for an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>action</parameter>&#160;:</term>
<listitem><simpara>Action type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-get-attach" role="function">
<title>e_cal_component_alarm_get_attach ()</title>
<indexterm zone="e-cal-component-alarm-get-attach"><primary>e_cal_component_alarm_get_attach</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_get_attach    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="icalattach"><type>icalattach</type></link> **attach</parameter>);</programlisting>
<para>
Queries the attachment property of an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attach</parameter>&#160;:</term>
<listitem><simpara>Return value for the attachment; should be freed using <link linkend="icalattach-unref"><function>icalattach_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-set-attach" role="function">
<title>e_cal_component_alarm_set_attach ()</title>
<indexterm zone="e-cal-component-alarm-set-attach"><primary>e_cal_component_alarm_set_attach</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_set_attach    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="icalattach"><type>icalattach</type></link> *attach</parameter>);</programlisting>
<para>
Sets the attachment property of an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attach</parameter>&#160;:</term>
<listitem><simpara>Attachment property or NULL to remove an existing property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-get-description" role="function">
<title>e_cal_component_alarm_get_description ()</title>
<indexterm zone="e-cal-component-alarm-get-description"><primary>e_cal_component_alarm_get_description</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_get_description
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentText"><type>ECalComponentText</type></link> *description</parameter>);</programlisting>
<para>
Queries the description property of an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>description</parameter>&#160;:</term>
<listitem><simpara>Return value for the description property and its parameters.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-set-description" role="function">
<title>e_cal_component_alarm_set_description ()</title>
<indexterm zone="e-cal-component-alarm-set-description"><primary>e_cal_component_alarm_set_description</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_set_description
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentText"><type>ECalComponentText</type></link> *description</parameter>);</programlisting>
<para>
Sets the description property of an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>description</parameter>&#160;:</term>
<listitem><simpara>Description property and its parameters, or NULL for no description.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-get-repeat" role="function">
<title>e_cal_component_alarm_get_repeat ()</title>
<indexterm zone="e-cal-component-alarm-get-repeat"><primary>e_cal_component_alarm_get_repeat</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_get_repeat    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmRepeat"><type>ECalComponentAlarmRepeat</type></link> *repeat</parameter>);</programlisting>
<para>
Queries the repeat/duration properties of an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>repeat</parameter>&#160;:</term>
<listitem><simpara>Return value for the repeat/duration properties.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-set-repeat" role="function">
<title>e_cal_component_alarm_set_repeat ()</title>
<indexterm zone="e-cal-component-alarm-set-repeat"><primary>e_cal_component_alarm_set_repeat</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_set_repeat    (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmRepeat"><type>ECalComponentAlarmRepeat</type></link> repeat</parameter>);</programlisting>
<para>
Sets the repeat/duration values for an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>repeat</parameter>&#160;:</term>
<listitem><simpara>Repeat/duration values.  To remove any repetitions from the alarm,
set the <parameter>repeat.repetitions</parameter> to 0.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-get-trigger" role="function">
<title>e_cal_component_alarm_get_trigger ()</title>
<indexterm zone="e-cal-component-alarm-get-trigger"><primary>e_cal_component_alarm_get_trigger</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_get_trigger   (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmTrigger"><type>ECalComponentAlarmTrigger</type></link> *trigger</parameter>);</programlisting>
<para>
Queries the trigger time for an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trigger</parameter>&#160;:</term>
<listitem><simpara>Return value for the trigger time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-set-trigger" role="function">
<title>e_cal_component_alarm_set_trigger ()</title>
<indexterm zone="e-cal-component-alarm-set-trigger"><primary>e_cal_component_alarm_set_trigger</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_set_trigger   (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="ECalComponentAlarmTrigger"><type>ECalComponentAlarmTrigger</type></link> trigger</parameter>);</programlisting>
<para>
Sets the trigger time of an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trigger</parameter>&#160;:</term>
<listitem><simpara>Trigger time structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-get-attendee-list" role="function">
<title>e_cal_component_alarm_get_attendee_list ()</title>
<indexterm zone="e-cal-component-alarm-get-attendee-list"><primary>e_cal_component_alarm_get_attendee_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_get_attendee_list
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> **attendee_list</parameter>);</programlisting>
<para>
Gets the list of attendees associated with an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attendee_list</parameter>&#160;:</term>
<listitem><simpara>Return value for the list of attendees.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-set-attendee-list" role="function">
<title>e_cal_component_alarm_set_attendee_list ()</title>
<indexterm zone="e-cal-component-alarm-set-attendee-list"><primary>e_cal_component_alarm_set_attendee_list</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_cal_component_alarm_set_attendee_list
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>,
                                                         <parameter><link linkend="GSList"><type>GSList</type></link> *attendee_list</parameter>);</programlisting>
<para>
Sets the list of attendees for an alarm.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attendee_list</parameter>&#160;:</term>
<listitem><simpara>List of attendees.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-has-attendees" role="function">
<title>e_cal_component_alarm_has_attendees ()</title>
<indexterm zone="e-cal-component-alarm-has-attendees"><primary>e_cal_component_alarm_has_attendees</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_cal_component_alarm_has_attendees (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);</programlisting>
<para>
Queries an alarm to see if it has attendees associated with it.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if there are attendees in the alarm, FALSE if not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-cal-component-alarm-get-icalcomponent" role="function">
<title>e_cal_component_alarm_get_icalcomponent ()</title>
<indexterm zone="e-cal-component-alarm-get-icalcomponent"><primary>e_cal_component_alarm_get_icalcomponent</primary></indexterm>
<programlisting><link linkend="icalcomponent"><returnvalue>icalcomponent</returnvalue></link> *     e_cal_component_alarm_get_icalcomponent
                                                        (<parameter><link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> *alarm</parameter>);</programlisting>
<para>
Get the icalcomponent associated with the given <link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&#160;:</term>
<listitem><simpara>An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the icalcomponent.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
