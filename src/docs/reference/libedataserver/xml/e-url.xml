<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libedataserver-e-url">
<refmeta>
<refentrytitle role="top_of_page" id="libedataserver-e-url.top_of_page">EUrl</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBEDATASERVER Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>EUrl</refname>
<refpurpose>A URI data structure and associated functions.</refpurpose>
</refnamediv>

<refsynopsisdiv id="libedataserver-e-url.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-url-shroud">e_url_shroud</link>                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *url</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-url-equal">e_url_equal</link>                         (<parameter>const <link linkend="gchar"><type>gchar</type></link> *url1</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *url2</parameter>);
                    <link linkend="EUri">EUri</link>;
<link linkend="EUri"><returnvalue>EUri</returnvalue></link> *              <link linkend="e-uri-new">e_uri_new</link>                           (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri_string</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-uri-free">e_uri_free</link>                          (<parameter><link linkend="EUri"><type>EUri</type></link> *uri</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="e-uri-get-param">e_uri_get_param</link>                     (<parameter><link linkend="EUri"><type>EUri</type></link> *uri</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);
<link linkend="EUri"><returnvalue>EUri</returnvalue></link> *              <link linkend="e-uri-copy">e_uri_copy</link>                          (<parameter><link linkend="EUri"><type>EUri</type></link> *uri</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="e-uri-to-string">e_uri_to_string</link>                     (<parameter><link linkend="EUri"><type>EUri</type></link> *uri</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> show_password</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="libedataserver-e-url.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="libedataserver-e-url.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="e-url-shroud" role="function">
<title>e_url_shroud ()</title>
<indexterm zone="e-url-shroud"><primary>e_url_shroud</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_url_shroud                        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *url</parameter>);</programlisting>
<para>
Removes the moniker (i.e. mailto:) from a url.</para>
<variablelist role="params">
<varlistentry><term><parameter>url</parameter>&#160;:</term>
<listitem><simpara>The url to shroud.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The newly-allocated shrouded url.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-url-equal" role="function">
<title>e_url_equal ()</title>
<indexterm zone="e-url-equal"><primary>e_url_equal</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_url_equal                         (<parameter>const <link linkend="gchar"><type>gchar</type></link> *url1</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *url2</parameter>);</programlisting>
<para>
Checks two urls for equality, after first removing any monikers on
the urls.</para>
<variablelist role="params">
<varlistentry><term><parameter>url1</parameter>&#160;:</term>
<listitem><simpara>The first url to compare.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>url2</parameter>&#160;:</term>
<listitem><simpara>The second url to compare.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the urls are equal, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> if they are not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="EUri" role="struct">
<title>EUri</title>
<indexterm zone="EUri"><primary>EUri</primary></indexterm>
<programlisting>typedef struct {
	gchar  *protocol;
	gchar  *user;
	gchar  *authmech;
	gchar  *passwd;
	gchar  *host;
	gint    port;
	gchar  *path;
	GData *params;
	gchar  *query;
	gchar  *fragment;
} EUri;
</programlisting>
<para>
A structure representing a URI.</para>
<variablelist role="struct">
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="EUri.protocol">protocol</structfield>;</term>
<listitem><simpara>The protocol to use.
</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="EUri.user">user</structfield>;</term>
<listitem><simpara>A user name.
</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="EUri.authmech">authmech</structfield>;</term>
<listitem><simpara>The authentication mechanism.
</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="EUri.passwd">passwd</structfield>;</term>
<listitem><simpara>The connection password.
</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="EUri.host">host</structfield>;</term>
<listitem><simpara>The host name.
</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gint"><type>gint</type></link>&#160;<structfield id="EUri.port">port</structfield>;</term>
<listitem><simpara>The port number.
</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="EUri.path">path</structfield>;</term>
<listitem><simpara>The file path on the host.
</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="GData"><type>GData</type></link>&#160;*<structfield id="EUri.params">params</structfield>;</term>
<listitem><simpara>Additional parameters.
</simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="EUri.query">query</structfield>;</term>
<listitem><simpara></simpara></listitem>
</varlistentry>
<varlistentry><term><link linkend="gchar"><type>gchar</type></link>&#160;*<structfield id="EUri.fragment">fragment</structfield>;</term>
<listitem><simpara></simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="e-uri-new" role="function">
<title>e_uri_new ()</title>
<indexterm zone="e-uri-new"><primary>e_uri_new</primary></indexterm>
<programlisting><link linkend="EUri"><returnvalue>EUri</returnvalue></link> *              e_uri_new                           (<parameter>const <link linkend="gchar"><type>gchar</type></link> *uri_string</parameter>);</programlisting>
<para>
Creates an <link linkend="EUri"><type>EUri</type></link> representation of the uri given in <parameter>uri_string</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>uri_string</parameter>&#160;:</term>
<listitem><simpara>The uri to represent as an <link linkend="EUri"><type>EUri</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The newly-allocated <link linkend="EUri"><type>EUri</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-uri-free" role="function">
<title>e_uri_free ()</title>
<indexterm zone="e-uri-free"><primary>e_uri_free</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_uri_free                          (<parameter><link linkend="EUri"><type>EUri</type></link> *uri</parameter>);</programlisting>
<para>
Frees the memory of an <link linkend="EUri"><type>EUri</type></link> structure.</para>
<variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>A pointer to the <link linkend="EUri"><type>EUri</type></link> to free.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-uri-get-param" role="function">
<title>e_uri_get_param ()</title>
<indexterm zone="e-uri-get-param"><primary>e_uri_get_param</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       e_uri_get_param                     (<parameter><link linkend="EUri"><type>EUri</type></link> *uri</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
<para>
Retrieves the value of the parameter associated with <parameter>name</parameter> in <parameter>uri</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>The <link linkend="EUri"><type>EUri</type></link> to get the parameter from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>The name of the parameter to get.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The value of the parameter.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-uri-copy" role="function">
<title>e_uri_copy ()</title>
<indexterm zone="e-uri-copy"><primary>e_uri_copy</primary></indexterm>
<programlisting><link linkend="EUri"><returnvalue>EUri</returnvalue></link> *              e_uri_copy                          (<parameter><link linkend="EUri"><type>EUri</type></link> *uri</parameter>);</programlisting>
<para>
Makes a copy of <parameter>uri</parameter>.</para>
<variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>The <link linkend="EUri"><type>EUri</type></link> to copy.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The newly-allocated copy of <parameter>uri</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-uri-to-string" role="function">
<title>e_uri_to_string ()</title>
<indexterm zone="e-uri-to-string"><primary>e_uri_to_string</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             e_uri_to_string                     (<parameter><link linkend="EUri"><type>EUri</type></link> *uri</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> show_password</parameter>);</programlisting>
<para>
Creates a string representation of <parameter>uri</parameter>. The password will only be
included in the string if <parameter>show_password</parameter> is set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
<variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>The <link linkend="EUri"><type>EUri</type></link> to convert to a string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>show_password</parameter>&#160;:</term>
<listitem><simpara>Whether or not to show the password in the string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The string representation of <parameter>uri</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
