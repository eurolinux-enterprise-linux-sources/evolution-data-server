<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libedataserver-EProxy">
<refmeta>
<refentrytitle role="top_of_page" id="libedataserver-EProxy.top_of_page">EProxy</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBEDATASERVER Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>EProxy</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libedataserver-EProxy.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>                    <link linkend="EProxy">EProxy</link>;
<link linkend="EProxy"><returnvalue>EProxy</returnvalue></link>*             <link linkend="e-proxy-new">e_proxy_new</link>                         (<parameter><type>void</type></parameter>);
<link linkend="SoupURI"><returnvalue>SoupURI</returnvalue></link>*            <link linkend="e-proxy-peek-uri-for">e_proxy_peek_uri_for</link>                (<parameter><link linkend="EProxy"><type>EProxy</type></link> *proxy</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-proxy-setup-proxy">e_proxy_setup_proxy</link>                 (<parameter><link linkend="EProxy"><type>EProxy</type></link> *proxy</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-proxy-require-proxy-for-uri">e_proxy_require_proxy_for_uri</link>       (<parameter><link linkend="EProxy"><type>EProxy</type></link> *proxy</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="libedataserver-EProxy.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="libedataserver-EProxy.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="EProxy" role="struct">
<title>EProxy</title>
<indexterm zone="EProxy"><primary>EProxy</primary></indexterm>
<programlisting>typedef struct {
	GObject parent;
	EProxyPrivate *priv;
} EProxy;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="e-proxy-new" role="function">
<title>e_proxy_new ()</title>
<indexterm zone="e-proxy-new"><primary>e_proxy_new</primary></indexterm>
<programlisting><link linkend="EProxy"><returnvalue>EProxy</returnvalue></link>*             e_proxy_new                         (<parameter><type>void</type></parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-proxy-peek-uri-for" role="function">
<title>e_proxy_peek_uri_for ()</title>
<indexterm zone="e-proxy-peek-uri-for"><primary>e_proxy_peek_uri_for</primary></indexterm>
<programlisting><link linkend="SoupURI"><returnvalue>SoupURI</returnvalue></link>*            e_proxy_peek_uri_for                (<parameter><link linkend="EProxy"><type>EProxy</type></link> *proxy</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-proxy-setup-proxy" role="function">
<title>e_proxy_setup_proxy ()</title>
<indexterm zone="e-proxy-setup-proxy"><primary>e_proxy_setup_proxy</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_proxy_setup_proxy                 (<parameter><link linkend="EProxy"><type>EProxy</type></link> *proxy</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-proxy-require-proxy-for-uri" role="function">
<title>e_proxy_require_proxy_for_uri ()</title>
<indexterm zone="e-proxy-require-proxy-for-uri"><primary>e_proxy_require_proxy_for_uri</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_proxy_require_proxy_for_uri       (<parameter><link linkend="EProxy"><type>EProxy</type></link> *proxy</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *uri</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>proxy</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
