<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="EIterator">
<refmeta>
<refentrytitle role="top_of_page" id="EIterator.top_of_page">EIterator</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  LIBEDATASERVER Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>EIterator</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="EIterator.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>                    <link linkend="EIterator-struct">EIterator</link>;
const <link linkend="void"><returnvalue>void</returnvalue></link> *        <link linkend="e-iterator-get">e_iterator_get</link>                      (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-iterator-reset">e_iterator_reset</link>                    (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-iterator-last">e_iterator_last</link>                     (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-iterator-next">e_iterator_next</link>                     (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-iterator-prev">e_iterator_prev</link>                     (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-iterator-delete">e_iterator_delete</link>                   (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-iterator-insert">e_iterator_insert</link>                   (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>,
                                                         <parameter><link linkend="gconstpointer"><type>gconstpointer</type></link> object</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> before</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-iterator-set">e_iterator_set</link>                      (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>,
                                                         <parameter><link linkend="gconstpointer"><type>gconstpointer</type></link> object</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="e-iterator-is-valid">e_iterator_is_valid</link>                 (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="e-iterator-invalidate">e_iterator_invalidate</link>               (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);
</synopsis>
</refsynopsisdiv>
<refsect1 id="EIterator.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----EIterator
         +----<link linkend="EListIterator">EListIterator</link>
</synopsis>
</refsect1>
<refsect1 id="EIterator.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="EIterator-invalidate">invalidate</link>&quot;                                     : Run Last
</synopsis>
</refsect1>

<refsect1 id="EIterator.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="EIterator.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="EIterator-struct" role="struct">
<title>EIterator</title>
<indexterm zone="EIterator-struct"><primary>EIterator</primary></indexterm>
<programlisting>typedef struct _EIterator EIterator;</programlisting>
<para>
</para></refsect2>
<refsect2 id="e-iterator-get" role="function">
<title>e_iterator_get ()</title>
<indexterm zone="e-iterator-get"><primary>e_iterator_get</primary></indexterm>
<programlisting>const <link linkend="void"><returnvalue>void</returnvalue></link> *        e_iterator_get                      (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-iterator-reset" role="function">
<title>e_iterator_reset ()</title>
<indexterm zone="e-iterator-reset"><primary>e_iterator_reset</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_iterator_reset                    (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-iterator-last" role="function">
<title>e_iterator_last ()</title>
<indexterm zone="e-iterator-last"><primary>e_iterator_last</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_iterator_last                     (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-iterator-next" role="function">
<title>e_iterator_next ()</title>
<indexterm zone="e-iterator-next"><primary>e_iterator_next</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_iterator_next                     (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-iterator-prev" role="function">
<title>e_iterator_prev ()</title>
<indexterm zone="e-iterator-prev"><primary>e_iterator_prev</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_iterator_prev                     (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-iterator-delete" role="function">
<title>e_iterator_delete ()</title>
<indexterm zone="e-iterator-delete"><primary>e_iterator_delete</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_iterator_delete                   (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-iterator-insert" role="function">
<title>e_iterator_insert ()</title>
<indexterm zone="e-iterator-insert"><primary>e_iterator_insert</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_iterator_insert                   (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>,
                                                         <parameter><link linkend="gconstpointer"><type>gconstpointer</type></link> object</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> before</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>before</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-iterator-set" role="function">
<title>e_iterator_set ()</title>
<indexterm zone="e-iterator-set"><primary>e_iterator_set</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_iterator_set                      (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>,
                                                         <parameter><link linkend="gconstpointer"><type>gconstpointer</type></link> object</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-iterator-is-valid" role="function">
<title>e_iterator_is_valid ()</title>
<indexterm zone="e-iterator-is-valid"><primary>e_iterator_is_valid</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            e_iterator_is_valid                 (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="e-iterator-invalidate" role="function">
<title>e_iterator_invalidate ()</title>
<indexterm zone="e-iterator-invalidate"><primary>e_iterator_invalidate</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                e_iterator_invalidate               (<parameter><link linkend="EIterator"><type>EIterator</type></link> *iterator</parameter>);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>iterator</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="EIterator.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="EIterator-invalidate" role="signal"><title>The <literal>&quot;invalidate&quot;</literal> signal</title>
<indexterm zone="EIterator-invalidate"><primary>EIterator::invalidate</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                user_function                      (<link linkend="EIterator"><type>EIterator</type></link> *eiterator,
                                                        <link linkend="gpointer"><type>gpointer</type></link>   user_data)      : Run Last</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>eiterator</parameter>&#160;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>

</refentry>
