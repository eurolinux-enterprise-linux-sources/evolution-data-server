Contains multiple fixes:
.   Avoid crash in e-cal-backend-http.c:webcal_to_http_method
.   7d00b444443233ced4629a32749e7e5085c61720
.
.   Bug 662068 - Crash in e-cal-backend-http.c:retrieval_done
.   608fae262c7421257ef1a4d5b62724b2e24d40d5
.
.   Fix a memory leak
.   Inspired by commit 66c2c5c1fc045d0c2b81554f91f95ac0edb30d18
.
.   Fix an issue found by Coverity Scan
.   b9ad01ba73afb402f194c2f66a90432e47003091

diff -up evolution-data-server-2.32.3/calendar/backends/http/e-cal-backend-http.c.crash-http-cal-retrieval-done evolution-data-server-2.32.3/calendar/backends/http/e-cal-backend-http.c
--- evolution-data-server-2.32.3/calendar/backends/http/e-cal-backend-http.c.crash-http-cal-retrieval-done	2013-06-13 18:03:02.986991350 +0200
+++ evolution-data-server-2.32.3/calendar/backends/http/e-cal-backend-http.c	2013-06-13 18:03:03.009991350 +0200
@@ -108,11 +108,22 @@ e_cal_backend_http_dispose (GObject *obj
 	priv->username = NULL;
 	priv->password = NULL;
 
+	if (priv->reload_timeout_id) {
+		g_source_remove (priv->reload_timeout_id);
+		priv->reload_timeout_id = 0;
+	}
+
 	if (priv->source_changed_id) {
 		g_signal_handler_disconnect (e_cal_backend_get_source (E_CAL_BACKEND (cbhttp)), priv->source_changed_id);
 		priv->source_changed_id = 0;
 	}
 
+	if (priv->soup_session) {
+		soup_session_abort (priv->soup_session);
+		g_object_unref (priv->soup_session);
+		priv->soup_session = NULL;
+	}
+
 	if (G_OBJECT_CLASS (parent_class)->dispose)
 		(* G_OBJECT_CLASS (parent_class)->dispose) (object);
 }
@@ -147,17 +158,6 @@ e_cal_backend_http_finalize (GObject *ob
 		priv->default_zone = NULL;
 	}
 
-	if (priv->soup_session) {
-		soup_session_abort (priv->soup_session);
-		g_object_unref (priv->soup_session);
-		priv->soup_session = NULL;
-	}
-
-	if (priv->reload_timeout_id) {
-		g_source_remove (priv->reload_timeout_id);
-		priv->reload_timeout_id = 0;
-	}
-
 	g_free (priv);
 	cbhttp->priv = NULL;
 
@@ -380,6 +380,12 @@ retrieval_done (SoupSession *session, So
 	GHashTable *old_cache;
 	GSList *comps_in_cache;
 
+	if (!msg || msg->status_code == SOUP_STATUS_CANCELLED) {
+		/* the backend probably gone in this case, thus just return */
+		g_object_unref (cbhttp);
+		return;
+	}
+
 	priv = cbhttp->priv;
 
 	priv->is_loading = FALSE;
@@ -388,12 +394,14 @@ retrieval_done (SoupSession *session, So
 	if (!priv->uri) {
 		/* uri changed meanwhile, retrieve again */
 		begin_retrieval_cb (cbhttp);
+		g_object_unref (cbhttp);
 		return;
 	}
 
 	if (msg->status_code == SOUP_STATUS_NOT_MODIFIED) {
 		/* attempts with ETag can result in 304 status code */
 		priv->opened = TRUE;
+		g_object_unref (cbhttp);
 		return;
 	}
 
@@ -405,23 +413,25 @@ retrieval_done (SoupSession *session, So
 		d(g_message ("Redirected from %s to %s\n", priv->uri, newuri));
 
 		if (newuri) {
+			gchar *to_free = NULL;
 			if (newuri[0]=='/') {
-				g_warning ("Hey! Relative URI returned! Working around...\n");
-
 				uri_parsed = soup_uri_new (priv->uri);
 				soup_uri_set_path (uri_parsed, newuri);
 				soup_uri_set_query (uri_parsed, NULL);
-				// g_free(newuri);
+				/* g_free(newuri); */
 
-				newuri = soup_uri_to_string (uri_parsed, FALSE);
-				g_message ("Translated URI: %s\n", newuri);
+				to_free = soup_uri_to_string (uri_parsed, FALSE);
 				soup_uri_free (uri_parsed);
+
+				newuri = to_free;
 			}
 
 			g_free (priv->uri);
 
 			priv->uri = webcal_to_http_method (newuri, FALSE);
 			begin_retrieval_cb (cbhttp);
+
+			g_free (to_free);
 		} else {
 			if (!priv->opened) {
 				e_cal_backend_notify_error (E_CAL_BACKEND (cbhttp),
@@ -429,6 +439,7 @@ retrieval_done (SoupSession *session, So
 			}
 		}
 
+		g_object_unref (cbhttp);
 		return;
 	}
 
@@ -440,6 +451,7 @@ retrieval_done (SoupSession *session, So
 		}
 
 		empty_cache (cbhttp);
+		g_object_unref (cbhttp);
 		return;
 	}
 
@@ -459,6 +471,7 @@ retrieval_done (SoupSession *session, So
 		if (!priv->opened)
 			e_cal_backend_notify_error (E_CAL_BACKEND (cbhttp), _("Bad file format."));
 		empty_cache (cbhttp);
+		g_object_unref (cbhttp);
 		return;
 	}
 
@@ -467,6 +480,7 @@ retrieval_done (SoupSession *session, So
 			e_cal_backend_notify_error (E_CAL_BACKEND (cbhttp), _("Not a calendar."));
 		icalcomponent_free (icalcomp);
 		empty_cache (cbhttp);
+		g_object_unref (cbhttp);
 		return;
 	}
 
@@ -549,6 +563,8 @@ retrieval_done (SoupSession *session, So
 
 	priv->opened = TRUE;
 
+	g_object_unref (cbhttp);
+
 	d(g_message ("Retrieval really done.\n"));
 }
 
@@ -656,7 +672,7 @@ begin_retrieval_cb (ECalBackendHttp *cbh
 	}
 
 	soup_session_queue_message (priv->soup_session, soup_message,
-				    (SoupSessionCallback) retrieval_done, cbhttp);
+				    (SoupSessionCallback) retrieval_done, g_object_ref (cbhttp));
 
 	d(g_message ("Retrieval started.\n"));
 	return FALSE;
@@ -1211,8 +1227,6 @@ create_user_free_busy (ECalBackendHttp *
 
         if (!obj_sexp)
                 return vfb;
-        if (!obj_sexp)
-                return vfb;
 
         slist = e_cal_backend_store_get_components(store);
 
