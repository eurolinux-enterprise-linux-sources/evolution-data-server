commit cda531c64c0e2a4d9040b3c7cb2b2bdafada2753
Author: Matthew Barnes <mbarnes@redhat.com>
Date:   Mon Jan 10 12:38:06 2011 -0500

    evolution-data-server-2.28.3-vfolder-unread-counts.patch

diff --git a/camel/camel-folder-summary.c b/camel/camel-folder-summary.c
index 043a6c3..8e85eda 100644
--- a/camel/camel-folder-summary.c
+++ b/camel/camel-folder-summary.c
@@ -1977,45 +1977,53 @@ camel_folder_summary_insert (CamelFolderSummary *s, CamelMessageInfo *info, gboo
 	CAMEL_SUMMARY_UNLOCK(s, summary_lock);
 }
 
-static void
-update_summary (CamelFolderSummary *summary, CamelMessageInfoBase *info)
+void
+camel_folder_summary_update_counts_by_flags (CamelFolderSummary *summary,
+                                             guint32 flags,
+                                             gboolean subtract)
 {
 	gint unread=0, deleted=0, junk=0;
-	guint32 flags = info->flags;
+
+	g_return_if_fail (summary != NULL);
 
 	if (!(flags & CAMEL_MESSAGE_SEEN))
-		unread = 1;
+		unread = subtract ? -1 : 1;
 
 	if (flags & CAMEL_MESSAGE_DELETED)
-		deleted = 1;
+		deleted = subtract ? -1 : 1;
 
 	if (flags & CAMEL_MESSAGE_JUNK)
-		junk = 1;
+		junk = subtract ? -1 : 1;
 
 	dd(printf("%p: %d %d %d | %d %d %d \n", (gpointer) summary, unread, deleted, junk, summary->unread_count, summary->visible_count, summary->saved_count));
-	info->flags |= CAMEL_MESSAGE_FOLDER_FLAGGED;
-	info->dirty = TRUE;
-
-	if (summary) {
 
-		if (unread)
-			summary->unread_count += unread;
-		if (deleted)
-			summary->deleted_count += deleted;
-		if (junk)
-			summary->junk_count += junk;
-		if (junk && !deleted)
-			summary->junk_not_deleted_count += junk;
-		summary->visible_count++;
-		if (junk ||  deleted)
-			summary->visible_count -= junk ? junk : deleted;
+	if (unread)
+		summary->unread_count += unread;
+	if (deleted)
+		summary->deleted_count += deleted;
+	if (junk)
+		summary->junk_count += junk;
+	if (junk && !deleted)
+		summary->junk_not_deleted_count += junk;
+	if (!junk && !deleted)
+		summary->visible_count += subtract ? -1 : 1;
 
-		summary->saved_count++;
-		camel_folder_summary_touch(summary);
-	}
+	summary->saved_count += subtract ? -1 : 1;
+	camel_folder_summary_touch (summary);
 
 	dd(printf("%p: %d %d %d | %d %d %d\n", (gpointer) summary, unread, deleted, junk, summary->unread_count, summary->visible_count, summary->saved_count));
+}
 
+static void
+update_summary (CamelFolderSummary *summary,
+                CamelMessageInfoBase *info)
+{
+	g_return_if_fail (summary != NULL);
+	g_return_if_fail (info != NULL);
+
+	camel_folder_summary_update_counts_by_flags (summary, info->flags, FALSE);
+	info->flags |= CAMEL_MESSAGE_FOLDER_FLAGGED;
+	info->dirty = TRUE;
 }
 
 /**
@@ -2285,7 +2293,12 @@ camel_folder_summary_clear(CamelFolderSummary *s)
 	g_ptr_array_foreach (s->uids, (GFunc) camel_pstring_free, NULL);
 	g_ptr_array_free (s->uids, TRUE);
 	s->uids = g_ptr_array_new ();
-	s->visible_count = s->deleted_count = s->unread_count = 0;
+	s->saved_count = 0;
+	s->unread_count = 0;
+	s->deleted_count = 0;
+	s->junk_count = 0;
+	s->junk_not_deleted_count = 0;
+	s->visible_count = 0;
 
 	g_hash_table_destroy(s->loaded_infos);
 	s->loaded_infos = g_hash_table_new(g_str_hash, g_str_equal);
@@ -2318,7 +2331,12 @@ camel_folder_summary_clear_db (CamelFolderSummary *s)
 	g_ptr_array_foreach (s->uids, (GFunc) camel_pstring_free, NULL);
 	g_ptr_array_free (s->uids, TRUE);
 	s->uids = g_ptr_array_new ();
-	s->visible_count = s->deleted_count = s->unread_count = 0;
+	s->saved_count = 0;
+	s->unread_count = 0;
+	s->deleted_count = 0;
+	s->junk_count = 0;
+	s->junk_not_deleted_count = 0;
+	s->visible_count = 0;
 
 	g_hash_table_destroy(s->loaded_infos);
 	s->loaded_infos = g_hash_table_new(g_str_hash, g_str_equal);
diff --git a/camel/camel-folder-summary.h b/camel/camel-folder-summary.h
index 54adcd4..0b1c349 100644
--- a/camel/camel-folder-summary.h
+++ b/camel/camel-folder-summary.h
@@ -395,6 +395,9 @@ void camel_folder_summary_remove_range(CamelFolderSummary *summary, gint start,
 void camel_folder_summary_clear(CamelFolderSummary *summary);
 void camel_folder_summary_clear_db (CamelFolderSummary *s);
 
+/* update visible/unread/... counts based on message flags */
+void camel_folder_summary_update_counts_by_flags (CamelFolderSummary *summary, guint32 flags, gboolean subtract);
+
 /* lookup functions */
 guint camel_folder_summary_count(CamelFolderSummary *summary);
 CamelMessageInfo *camel_folder_summary_index(CamelFolderSummary *summary, gint index);
diff --git a/camel/camel-vee-folder.c b/camel/camel-vee-folder.c
index 4a9e6c2..b14ea5a 100644
--- a/camel/camel-vee-folder.c
+++ b/camel/camel-vee-folder.c
@@ -619,6 +619,8 @@ vee_sync(CamelFolder *folder, gboolean expunge, CamelException *ex)
 			CamelVeeMessageInfo *mi = (CamelVeeMessageInfo *)camel_folder_summary_index (folder->summary, i);
 			if (mi->old_flags & CAMEL_MESSAGE_DELETED) {
 				del = g_slist_prepend (del, (gpointer) camel_pstring_strdup(((CamelMessageInfo *)mi)->uid));
+				camel_folder_summary_update_counts_by_flags (
+					folder->summary, mi->old_flags, TRUE);
 				camel_folder_summary_remove_index_fast (folder->summary, i);
 				count--;
 				i--;
@@ -926,6 +928,9 @@ vee_folder_remove_folder(CamelVeeFolder *vf, CamelFolder *source)
 				if (mi) {
 					if (mi->summary == ssummary) {
 						camel_folder_change_info_remove_uid(folder_unmatched->changes, camel_message_info_uid(mi));
+						camel_folder_summary_update_counts_by_flags (
+							CAMEL_FOLDER (folder_unmatched)->summary,
+							mi->old_flags, TRUE);
 						if (last == -1) {
 							last = start = i;
 						} else if (last+1 == i) {
@@ -955,6 +960,8 @@ vee_folder_remove_folder(CamelVeeFolder *vf, CamelFolder *source)
 				const gchar *uid = camel_message_info_uid(mi);
 
 				camel_folder_change_info_remove_uid(vf->changes, uid);
+				camel_folder_summary_update_counts_by_flags (
+					folder->summary, mi->old_flags, TRUE);
 
 				if (last == -1) {
 					last = start = i;
@@ -1049,6 +1056,9 @@ unmatched_check_uid(gchar *uidin, gpointer value, struct _update_data *u)
 		CamelVeeMessageInfo *mi = (CamelVeeMessageInfo *)camel_folder_summary_uid(((CamelFolder *)u->folder_unmatched)->summary, uid);
 		if (mi) {
 			CamelException ex = CAMEL_EXCEPTION_INITIALISER;
+			camel_folder_summary_update_counts_by_flags (
+				CAMEL_FOLDER (u->folder_unmatched)->summary,
+				mi->old_flags, TRUE);
 			camel_db_delete_uid_from_vfolder_transaction (((CamelFolder *)u->folder_unmatched)->parent_store->cdb_w, ((CamelFolder *)u->folder_unmatched)->full_name, uid, &ex);
 			camel_folder_summary_remove_uid_fast (((CamelFolder *)u->folder_unmatched)->summary, uid);
 			camel_folder_change_info_remove_uid(u->folder_unmatched->changes, uid);
@@ -1205,9 +1215,12 @@ vee_rebuild_folder(CamelVeeFolder *vf, CamelFolder *source, CamelException *ex)
 					} else {
 						camel_folder_summary_remove_range(folder->summary, start, last);
 						i -= (last-start)+1;
+						count -= (last - start) + 1;
 						start = last = i;
 					}
 					camel_folder_change_info_remove_uid(vf->changes, camel_message_info_uid(mi));
+					camel_folder_summary_update_counts_by_flags (
+						folder->summary, mi->old_flags, TRUE);
 					if (!CAMEL_IS_VEE_FOLDER(source)
 					    && unmatched_uids != NULL
 					    && g_hash_table_lookup_extended(unmatched_uids, uid, (gpointer *)&oldkey, &oldval)) {
@@ -1248,10 +1261,22 @@ vee_rebuild_folder(CamelVeeFolder *vf, CamelFolder *source, CamelException *ex)
 			if (uid) {
 				if (strncmp (uid, u.hash, 8) == 0) {
 					if (g_hash_table_lookup(allhash, uid+8) == NULL) {
+						CamelVeeMessageInfo *vinfo;
+
+						vinfo = (CamelVeeMessageInfo *)
+							camel_folder_summary_index (
+							CAMEL_FOLDER (folder_unmatched)->summary, i);
+						if (vinfo) {
+							camel_folder_summary_update_counts_by_flags (
+								CAMEL_FOLDER (folder_unmatched)->summary,
+								vinfo->old_flags, TRUE);
+							camel_message_info_free (vinfo);
+						}
 						/* no longer exists at all, just remove it entirely */
 						camel_folder_summary_remove_index_fast(((CamelFolder *)folder_unmatched)->summary, i);
 						camel_folder_change_info_remove_uid(folder_unmatched->changes, uid);
 						i--;
+						count--;
 					} else {
 						g_hash_table_remove(allhash, uid+8);
 					}
@@ -1352,6 +1377,9 @@ folder_changed_add_uid(CamelFolder *sub, const gchar *uid, const gchar hash[8],
 		vinfo = (CamelVeeMessageInfo *)camel_folder_get_message_info((CamelFolder *)folder_unmatched, vuid);
 		if (vinfo) {
 			CamelException ex = CAMEL_EXCEPTION_INITIALISER;
+			camel_folder_summary_update_counts_by_flags (
+				CAMEL_FOLDER (folder_unmatched)->summary,
+				vinfo->old_flags, TRUE);
 			camel_folder_change_info_remove_uid(folder_unmatched->changes, vuid);
 			camel_db_delete_uid_from_vfolder_transaction (folder->parent_store->cdb_w, ((CamelFolder *)folder_unmatched)->full_name, vuid, &ex);
 			camel_folder_summary_remove_uid_fast(((CamelFolder *)folder_unmatched)->summary, vuid);
@@ -1376,6 +1404,14 @@ folder_changed_remove_uid(CamelFolder *sub, const gchar *uid, const gchar hash[8
 	memcpy(vuid, hash, 8);
 	strcpy(vuid+8, uid);
 
+	vinfo = (CamelVeeMessageInfo *) camel_folder_summary_uid (
+		folder->summary, vuid);
+	if (vinfo) {
+		camel_folder_summary_update_counts_by_flags (
+			folder->summary, vinfo->old_flags, TRUE);
+		camel_message_info_free ((CamelMessageInfo *) vinfo);
+	}
+
 	camel_folder_change_info_remove_uid(vf->changes, vuid);
 	if (use_db) {
 		/* FIXME[disk-summary] Handle exception */
@@ -1410,6 +1446,9 @@ folder_changed_remove_uid(CamelFolder *sub, const gchar *uid, const gchar hash[8
 			vinfo = (CamelVeeMessageInfo *)camel_folder_get_message_info((CamelFolder *)folder_unmatched, vuid);
 			if (vinfo) {
 				CamelException ex = CAMEL_EXCEPTION_INITIALISER;
+				camel_folder_summary_update_counts_by_flags (
+					CAMEL_FOLDER (folder_unmatched)->summary,
+					vinfo->old_flags, TRUE);
 				camel_folder_change_info_remove_uid(folder_unmatched->changes, vuid);
 				camel_db_delete_uid_from_vfolder_transaction (folder->parent_store->cdb_w, ((CamelFolder *)folder_unmatched)->full_name, vuid, &ex);
 				camel_folder_summary_remove_uid_fast(((CamelFolder *)folder_unmatched)->summary, vuid);
@@ -1421,6 +1460,21 @@ folder_changed_remove_uid(CamelFolder *sub, const gchar *uid, const gchar hash[8
 }
 
 static void
+update_old_flags (CamelFolderSummary *summary,
+                  CamelVeeMessageInfo *vinfo)
+{
+	g_return_if_fail (summary != NULL);
+	g_return_if_fail (vinfo != NULL);
+
+	camel_folder_summary_update_counts_by_flags (
+		summary, vinfo->old_flags, TRUE);
+	vinfo->old_flags = camel_message_info_flags (
+		(CamelMessageInfo *) vinfo);
+	camel_folder_summary_update_counts_by_flags (
+		summary, vinfo->old_flags, FALSE);
+}
+
+static void
 folder_changed_change_uid(CamelFolder *sub, const gchar *uid, const gchar hash[8], CamelVeeFolder *vf, gboolean use_db)
 {
 	gchar *vuid;
@@ -1441,11 +1495,14 @@ folder_changed_change_uid(CamelFolder *sub, const gchar *uid, const gchar hash[8
 		if (info) {
 			if (vinfo) {
 				camel_folder_change_info_change_uid(vf->changes, vuid);
+				update_old_flags (folder->summary, vinfo);
 				camel_message_info_free((CamelMessageInfo *)vinfo);
 			}
 
 			if (uinfo) {
 				camel_folder_change_info_change_uid(folder_unmatched->changes, vuid);
+				update_old_flags (
+					CAMEL_FOLDER (folder_unmatched)->summary, uinfo);
 				camel_message_info_free((CamelMessageInfo *)uinfo);
 			}
 
@@ -1822,6 +1879,8 @@ subfolder_renamed_update(CamelVeeFolder *vf, CamelFolder *sub, gchar hash[8])
 			gpointer oldval;
 
 			camel_folder_change_info_remove_uid(vf->changes, uid);
+			camel_folder_summary_update_counts_by_flags (
+				CAMEL_FOLDER (vf)->summary, mi->old_flags, TRUE);
 			camel_folder_summary_remove(((CamelFolder *)vf)->summary, (CamelMessageInfo *)mi);
 
 			/* works since we always append on the end */
@@ -1982,11 +2041,6 @@ vee_set_expression(CamelVeeFolder *vf, const gchar *query)
 		camel_folder_summary_clear (s);
 		camel_db_recreate_vfolder (((CamelFolder *) vf)->parent_store->cdb_w, ((CamelFolder *) vf)->full_name, &ex);
 		camel_exception_clear (&ex);
-		s->junk_count = 0;
-		s->deleted_count = 0;
-		s->unread_count = 0;
-		s->visible_count = 0;
-		s->junk_not_deleted_count = 0;
 	}
 
 	g_free(vf->expression);
diff --git a/camel/camel-vee-summary.c b/camel/camel-vee-summary.c
index f9e5390..d1228f2 100644
--- a/camel/camel-vee-summary.c
+++ b/camel/camel-vee-summary.c
@@ -94,8 +94,6 @@ vee_info_uint32(const CamelMessageInfo *mi, gint id)
 
 	HANDLE_NULL_INFO(0);
 	ret = camel_message_info_uint32 (rmi, id);
-	if (id == CAMEL_MESSAGE_INFO_FLAGS)
-		((CamelVeeMessageInfo *) mi)->old_flags = camel_message_info_flags (rmi);
 	camel_message_info_free (rmi);
 
 	return ret;
@@ -290,14 +288,12 @@ vee_info_set_flags(CamelMessageInfo *mi, guint32 flags, guint32 set)
 		if (hacked_unread_folder && !vsummary->fake_visible_count)
 			vsummary->fake_visible_count = mi->summary->visible_count;
 
-#if 0
 		/* Keep the summary in sync */
 		mi->summary->unread_count += unread - old_unread;
 		mi->summary->deleted_count += deleted - old_deleted;
 		mi->summary->junk_count += junked - old_junked;
 		mi->summary->junk_not_deleted_count += junked_not_deleted - old_junked_not_deleted;
 		mi->summary->visible_count += visible - old_visible;
-#endif
 
 		if (vsummary->fake_visible_count || hacked_unread_folder)
 			vsummary->fake_visible_count += visible - old_visible;
@@ -458,8 +454,6 @@ camel_vee_summary_new(CamelFolder *parent)
 	 * VTrash instead of .#evolution/Junk-or-whatever */
 	camel_db_create_vfolder (parent->parent_store->cdb_w, parent->full_name, NULL);
 
-	/* FIXME[disk-summary] handle excep and ret */
-	camel_folder_summary_header_load_from_db ((CamelFolderSummary *)s, parent->parent_store, parent->full_name, NULL);
 	return &s->summary;
 }
 
@@ -482,8 +476,8 @@ CamelVeeMessageInfo *
 camel_vee_summary_add(CamelVeeSummary *s, CamelFolderSummary *summary, const gchar *uid, const gchar hash[8])
 {
 	CamelVeeMessageInfo *mi;
+	CamelMessageInfo *rmi;
 	gchar *vuid;
-	GHashTable * fcache;
 	vuid = g_malloc(strlen(uid)+9);
 	memcpy(vuid, hash, 8);
 	strcpy(vuid+8, uid);
@@ -507,20 +501,20 @@ camel_vee_summary_add(CamelVeeSummary *s, CamelFolderSummary *summary, const gch
 
 	mi = (CamelVeeMessageInfo *)camel_message_info_new(&s->summary);
 	mi->summary = summary;
-	fcache = camel_folder_summary_get_flag_cache(summary);
-	mi->old_flags = GPOINTER_TO_UINT(g_hash_table_lookup (fcache, uid));
-	/* We would do lazy loading of flags, when the folders are loaded to memory through folder_reloaded signal */
 	camel_object_ref (summary);
 	mi->info.uid = (gchar *) camel_pstring_strdup (vuid);
 	g_free (vuid);
 	camel_message_info_ref (mi);
-	/* Get the flags and store it. We can use it a lot * /
+	/* Get actual flags and store it */
 	rmi = camel_folder_summary_uid (summary, uid);
 	if (rmi) {
 		mi->old_flags = camel_message_info_flags (rmi);
 		camel_message_info_free (rmi);
-	}*/
+	}
 	camel_folder_summary_insert(&s->summary, (CamelMessageInfo *)mi, FALSE);
 
+	camel_folder_summary_update_counts_by_flags (
+		&s->summary, camel_message_info_flags (mi), FALSE);
+
 	return mi;
 }
