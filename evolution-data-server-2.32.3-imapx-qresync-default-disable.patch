diff -up evolution-data-server-2.32.3/camel/providers/imapx/camel-imapx-provider.c.imapx-qresync-default-disable evolution-data-server-2.32.3/camel/providers/imapx/camel-imapx-provider.c
--- evolution-data-server-2.32.3/camel/providers/imapx/camel-imapx-provider.c.imapx-qresync-default-disable	2011-04-21 21:35:36.000000000 +0200
+++ evolution-data-server-2.32.3/camel/providers/imapx/camel-imapx-provider.c	2013-07-24 07:51:38.927435245 +0200
@@ -39,7 +39,7 @@ CamelProviderConfEntry imapx_conf_entrie
 		{ CAMEL_PROVIDER_CONF_SECTION_START, "mailcheck", NULL,
 	  N_("Checking for New Mail") },
 	{ CAMEL_PROVIDER_CONF_CHECKBOX, "use_qresync", NULL,
-	  N_("Use _Quick Resync if the server supports it"), "1" },
+	  N_("Use _Quick Resync if the server supports it"), "0" },
 	{ CAMEL_PROVIDER_CONF_CHECKBOX, "use_idle", NULL,
 	  N_("Use I_dle if the server supports it"), "1" },
 	{ CAMEL_PROVIDER_CONF_CHECKBOX, "check_all", NULL,
diff -up evolution-data-server-2.32.3/camel/providers/imapx/camel-imapx-server.c.imapx-qresync-default-disable evolution-data-server-2.32.3/camel/providers/imapx/camel-imapx-server.c
--- evolution-data-server-2.32.3/camel/providers/imapx/camel-imapx-server.c.imapx-qresync-default-disable	2013-07-24 07:51:38.888435245 +0200
+++ evolution-data-server-2.32.3/camel/providers/imapx/camel-imapx-server.c	2013-07-24 07:51:38.926435245 +0200
@@ -2493,6 +2493,131 @@ imapx_command_select_done (CamelIMAPXSer
 	g_signal_emit (is, signals[SELECT_CHANGED], 0, selected_folder);
 }
 
+static gboolean
+camel_imapx_command_add_qresync_parameter (CamelIMAPXCommand *ic,
+                                           CamelFolder *folder)
+{
+	/* See RFC 5162 Section 3.1 */
+
+	CamelIMAPXFolder *imapx_folder;
+	CamelIMAPXSummary *imapx_summary;
+	guint64 last_known_uidvalidity;
+	guint64 last_known_modsequence;
+	guint32 last_known_message_cnt;
+	guint32 sequence_limit;
+	gchar *known_uid_set = NULL;
+	gint summary_total;
+	gboolean parameter_added = FALSE;
+
+	g_return_val_if_fail (ic != NULL, FALSE);
+	g_return_val_if_fail (CAMEL_IS_IMAPX_FOLDER (folder), FALSE);
+
+	imapx_folder = CAMEL_IMAPX_FOLDER (folder);
+	imapx_summary = CAMEL_IMAPX_SUMMARY (folder->summary);
+
+	last_known_uidvalidity = imapx_folder->uidvalidity_on_server;
+	last_known_modsequence = imapx_summary->modseq;
+	last_known_message_cnt = imapx_folder->exists_on_server;
+
+	/* XXX This should return an unsigned integer to
+	 *     avoid the possibility of a negative count. */
+	summary_total = camel_folder_summary_count (folder->summary);
+	g_return_val_if_fail (summary_total >= 0, FALSE);
+
+	if (summary_total > 0) {
+		guint last = summary_total - 1;
+		gchar *begin, *end;
+
+		begin = camel_folder_summary_uid_from_index (folder->summary, 0);
+		end = camel_folder_summary_uid_from_index (folder->summary, last);
+
+		if (begin != NULL && end != NULL)
+			known_uid_set = g_strconcat (begin, ":", end, NULL);
+
+		g_free (begin);
+		g_free (end);
+	}
+
+	/* Make sure we have valid QRESYNC arguments. */
+
+	if (last_known_uidvalidity == 0)
+		goto exit;
+
+	if (last_known_modsequence == 0)
+		goto exit;
+
+	if (known_uid_set == NULL)
+		goto exit;
+
+	camel_imapx_command_add (
+		ic, " (QRESYNC (%"
+		G_GUINT64_FORMAT " %"
+		G_GUINT64_FORMAT " %s",
+		last_known_uidvalidity,
+		last_known_modsequence,
+		known_uid_set);
+
+	/* Add message sequence match data if we have enough messages. */
+
+	/* XXX Some IMAP servers like Zimbra can't handle invalid sequence
+	 *     numbers in the optional seq/uid list.  So limit the list to
+	 *     the lesser of the last known message count according to the
+	 *     server and our own summary count. */
+	sequence_limit = MIN (last_known_message_cnt, summary_total);
+
+	if (sequence_limit > 10) {
+		GString *seqs;
+		GString *uids;
+		guint32 ii = 3;
+
+		seqs = g_string_sized_new (256);
+		uids = g_string_sized_new (256);
+
+		/* Include some seq/uid pairs to avoid a huge VANISHED list.
+		 * Work backwards exponentially from the end of the mailbox,
+		 * starting with message 9 from the end, then 27 from the
+		 * end, then 81 from the end, etc. */
+		do {
+			guint32 summary_index;
+			gchar buf[10];
+			gchar *uid;
+
+			ii = MIN (ii * 3, sequence_limit);
+			summary_index = sequence_limit - ii;
+
+			if (seqs->len > 0)
+				g_string_prepend_c (seqs, ',');
+
+			if (uids->len > 0)
+				g_string_prepend_c (uids, ',');
+
+			/* IMAP sequence numbers are 1-based,
+			 * but our folder summary is 0-based. */
+			sprintf (buf, "%" G_GUINT32_FORMAT, summary_index + 1);
+
+			uid = camel_folder_summary_uid_from_index (
+				folder->summary, summary_index);
+			if (uid != NULL) {
+				g_string_prepend (seqs, buf);
+				g_string_prepend (uids, uid);
+				g_free (uid);
+			}
+		} while (ii < sequence_limit);
+
+		camel_imapx_command_add (
+			ic, " (%s %s)", seqs->str, uids->str);
+	}
+
+	camel_imapx_command_add (ic, "))");
+
+	parameter_added = TRUE;
+
+exit:
+	g_free (known_uid_set);
+
+	return parameter_added;
+}
+
 /* Should have a queue lock. TODO Change the way select is written */
 static gboolean
 imapx_select (CamelIMAPXServer *is, CamelFolder *folder, gboolean forced, GError **error)
@@ -2548,77 +2673,8 @@ imapx_select (CamelIMAPXServer *is, Came
 
 	ic = camel_imapx_command_new(is, "SELECT", NULL, "SELECT %f", folder);
 
-	if (is->use_qresync) {
-		CamelIMAPXSummary *isum = (CamelIMAPXSummary *)folder->summary;
-		CamelIMAPXFolder *ifolder = (CamelIMAPXFolder *)folder;
-		gint total = camel_folder_summary_count (folder->summary);
-		gchar *firstuid, *lastuid;
-
-		if (total && isum->modseq && ifolder->uidvalidity_on_server) {
-
-			firstuid = camel_folder_summary_uid_from_index (folder->summary, 0);
-			lastuid = camel_folder_summary_uid_from_index (folder->summary, total - 1);
-
-			c(printf("SELECT QRESYNC %" G_GUINT64_FORMAT
-				 " %" G_GUINT64_FORMAT "\n",
-				 ifolder->uidvalidity_on_server, isum->modseq));
-			camel_imapx_command_add(ic, " (QRESYNC (%"
-						G_GUINT64_FORMAT " %"
-						G_GUINT64_FORMAT " %s:%s",
-						ifolder->uidvalidity_on_server,
-						isum->modseq,
-						firstuid, lastuid);
-
-			g_free (firstuid);
-			g_free (lastuid);
-
-			if (total > 10) {
-				gint i;
-				GString *seqs, *uids;
-
-				seqs = g_string_new(" ");
-				uids = g_string_new(")");
-
-				/* Include some seq/uid pairs to avoid a huge VANISHED list
-				   (see RFC5162 ยง3.1). Work backwards exponentially from the
-				   end of the mailbox, starting with the message 9 from the
-				   end, then 27 from the end, then 81 from the end... */
-				i = 3;
-				do {
-					gchar buf[10];
-					gchar *uid;
-					i *= 3;
-					if (i > total)
-						i = total;
-
-					if (i != 9) { /* If not the first time */
-						g_string_prepend(seqs, ",");
-						g_string_prepend(uids, ",");
-					}
-
-					/* IMAP sequence numbers are one higher than the corresponding
-					   indices in our folder summary -- they start from one, while
-					   the summary starts from zero. */
-					sprintf(buf, "%d", total - i + 1);
-					g_string_prepend(seqs, buf);
-					uid = camel_folder_summary_uid_from_index(folder->summary, total - i);
-					g_string_prepend(uids, uid);
-					g_free(uid);
-				} while (i < total);
-
-				g_string_prepend(seqs, " (");
-
-				c(printf("adding QRESYNC seq/uidset %s%s\n", seqs->str, uids->str));
-				camel_imapx_command_add(ic, seqs->str);
-				camel_imapx_command_add(ic, uids->str);
-
-				g_string_free(seqs, TRUE);
-				g_string_free(uids, TRUE);
-
-			}
-			camel_imapx_command_add(ic, "))");
-		}
-	}
+	if (is->use_qresync)
+		camel_imapx_command_add_qresync_parameter (ic, folder);
 
 	ic->complete = imapx_command_select_done;
 	imapx_command_start (is, ic);
